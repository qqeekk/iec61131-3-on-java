/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.parser;

import javast.sablecc.lexer.*;
import javast.sablecc.node.*;
import javast.sablecc.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PLibrary node1 = (PLibrary) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAlibrary1Library */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce AAlibrary2Library */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list);
            }
            break;
            case 2: /* reduce ADataTypeLibraryElementDeclaration */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AFunctionLibraryElementDeclaration */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list);
            }
            break;
            case 4: /* reduce AFunctionBlockLibraryElementDeclaration */
            {
                ArrayList<Object> list = new4();
                push(goTo(1), list);
            }
            break;
            case 5: /* reduce AProgramLibraryElementDeclaration */
            {
                ArrayList<Object> list = new5();
                push(goTo(1), list);
            }
            break;
            case 6: /* reduce AElementaryNonGenericTypeName */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list);
            }
            break;
            case 7: /* reduce ADerivedNonGenericTypeName */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list);
            }
            break;
            case 8: /* reduce ANumericElementaryTypeName */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list);
            }
            break;
            case 9: /* reduce ADateElementaryTypeName */
            {
                ArrayList<Object> list = new9();
                push(goTo(3), list);
            }
            break;
            case 10: /* reduce AAbitstringelementarytypename1ElementaryTypeName */
            {
                ArrayList<Object> list = new10();
                push(goTo(3), list);
            }
            break;
            case 11: /* reduce AAbitstringelementarytypename2ElementaryTypeName */
            {
                ArrayList<Object> list = new11();
                push(goTo(3), list);
            }
            break;
            case 12: /* reduce AStringElementaryTypeName */
            {
                ArrayList<Object> list = new12();
                push(goTo(3), list);
            }
            break;
            case 13: /* reduce AWstringElementaryTypeName */
            {
                ArrayList<Object> list = new13();
                push(goTo(3), list);
            }
            break;
            case 14: /* reduce ATimeElementaryTypeName */
            {
                ArrayList<Object> list = new14();
                push(goTo(3), list);
            }
            break;
            case 15: /* reduce AIntegerNumericTypeName */
            {
                ArrayList<Object> list = new15();
                push(goTo(4), list);
            }
            break;
            case 16: /* reduce ARealNumericTypeName */
            {
                ArrayList<Object> list = new16();
                push(goTo(4), list);
            }
            break;
            case 17: /* reduce ASignedIntegerIntegerTypeName */
            {
                ArrayList<Object> list = new17();
                push(goTo(5), list);
            }
            break;
            case 18: /* reduce AUnsignedIntegerIntegerTypeName */
            {
                ArrayList<Object> list = new18();
                push(goTo(5), list);
            }
            break;
            case 19: /* reduce ANumericConstant */
            {
                ArrayList<Object> list = new19();
                push(goTo(6), list);
            }
            break;
            case 20: /* reduce ACharacterConstant */
            {
                ArrayList<Object> list = new20();
                push(goTo(6), list);
            }
            break;
            case 21: /* reduce ATimeConstant */
            {
                ArrayList<Object> list = new21();
                push(goTo(6), list);
            }
            break;
            case 22: /* reduce ABitStringConstant */
            {
                ArrayList<Object> list = new22();
                push(goTo(6), list);
            }
            break;
            case 23: /* reduce ABooleanConstant */
            {
                ArrayList<Object> list = new23();
                push(goTo(6), list);
            }
            break;
            case 24: /* reduce AIntegerNumericLiteral */
            {
                ArrayList<Object> list = new24();
                push(goTo(7), list);
            }
            break;
            case 25: /* reduce ARealNumericLiteral */
            {
                ArrayList<Object> list = new25();
                push(goTo(7), list);
            }
            break;
            case 26: /* reduce AIntegerTypeNameHashed */
            {
                ArrayList<Object> list = new26();
                push(goTo(8), list);
            }
            break;
            case 27: /* reduce AAintegerliteral1IntegerLiteral */
            {
                ArrayList<Object> list = new27();
                push(goTo(9), list);
            }
            break;
            case 28: /* reduce AAintegerliteral2IntegerLiteral */
            {
                ArrayList<Object> list = new28();
                push(goTo(9), list);
            }
            break;
            case 29: /* reduce ARealTypeNameHashed */
            {
                ArrayList<Object> list = new29();
                push(goTo(10), list);
            }
            break;
            case 30: /* reduce AArealliteral1RealLiteral */
            {
                ArrayList<Object> list = new30();
                push(goTo(11), list);
            }
            break;
            case 31: /* reduce AArealliteral2RealLiteral */
            {
                ArrayList<Object> list = new31();
                push(goTo(11), list);
            }
            break;
            case 32: /* reduce AArealliteral3RealLiteral */
            {
                ArrayList<Object> list = new32();
                push(goTo(11), list);
            }
            break;
            case 33: /* reduce AArealliteral4RealLiteral */
            {
                ArrayList<Object> list = new33();
                push(goTo(11), list);
            }
            break;
            case 34: /* reduce ABitStringLiteralTypeNameHashed */
            {
                ArrayList<Object> list = new34();
                push(goTo(12), list);
            }
            break;
            case 35: /* reduce AAbitstringliteral1BitStringLiteral */
            {
                ArrayList<Object> list = new35();
                push(goTo(13), list);
            }
            break;
            case 36: /* reduce AAbitstringliteral2BitStringLiteral */
            {
                ArrayList<Object> list = new36();
                push(goTo(13), list);
            }
            break;
            case 37: /* reduce ABoolTypeNameHashed */
            {
                ArrayList<Object> list = new37();
                push(goTo(14), list);
            }
            break;
            case 38: /* reduce AAnumericbooleanliteral1BooleanLiteral */
            {
                ArrayList<Object> list = new38();
                push(goTo(15), list);
            }
            break;
            case 39: /* reduce AAnumericbooleanliteral2BooleanLiteral */
            {
                ArrayList<Object> list = new39();
                push(goTo(15), list);
            }
            break;
            case 40: /* reduce ALiteralBooleanLiteral */
            {
                ArrayList<Object> list = new40();
                push(goTo(15), list);
            }
            break;
            case 41: /* reduce ASingleCharacterString */
            {
                ArrayList<Object> list = new41();
                push(goTo(16), list);
            }
            break;
            case 42: /* reduce ADoubleCharacterString */
            {
                ArrayList<Object> list = new42();
                push(goTo(16), list);
            }
            break;
            case 43: /* reduce ADurationTimeLiteral */
            {
                ArrayList<Object> list = new43();
                push(goTo(17), list);
            }
            break;
            case 44: /* reduce ATimeOfDayTimeLiteral */
            {
                ArrayList<Object> list = new44();
                push(goTo(17), list);
            }
            break;
            case 45: /* reduce ADateTimeLiteral */
            {
                ArrayList<Object> list = new45();
                push(goTo(17), list);
            }
            break;
            case 46: /* reduce ADateAndTimeTimeLiteral */
            {
                ArrayList<Object> list = new46();
                push(goTo(17), list);
            }
            break;
            case 47: /* reduce AAduration1Duration */
            {
                ArrayList<Object> list = new47();
                push(goTo(18), list);
            }
            break;
            case 48: /* reduce AAduration2Duration */
            {
                ArrayList<Object> list = new48();
                push(goTo(18), list);
            }
            break;
            case 49: /* reduce ADaysInterval */
            {
                ArrayList<Object> list = new49();
                push(goTo(19), list);
            }
            break;
            case 50: /* reduce AHoursInterval */
            {
                ArrayList<Object> list = new50();
                push(goTo(19), list);
            }
            break;
            case 51: /* reduce AMinutesInterval */
            {
                ArrayList<Object> list = new51();
                push(goTo(19), list);
            }
            break;
            case 52: /* reduce ASecondsInterval */
            {
                ArrayList<Object> list = new52();
                push(goTo(19), list);
            }
            break;
            case 53: /* reduce AMillisecondsInterval */
            {
                ArrayList<Object> list = new53();
                push(goTo(19), list);
            }
            break;
            case 54: /* reduce ADecimal$Afixedpoint11Days */
            {
                ArrayList<Object> list = new54();
                push(goTo(20), list);
            }
            break;
            case 55: /* reduce ADecimal$Afixedpoint21Days */
            {
                ArrayList<Object> list = new55();
                push(goTo(20), list);
            }
            break;
            case 56: /* reduce AAhourlydays1Days */
            {
                ArrayList<Object> list = new56();
                push(goTo(20), list);
            }
            break;
            case 57: /* reduce AAhourlydays2Days */
            {
                ArrayList<Object> list = new57();
                push(goTo(20), list);
            }
            break;
            case 58: /* reduce AFixedPointRealPart */
            {
                ArrayList<Object> list = new58();
                push(goTo(21), list);
            }
            break;
            case 59: /* reduce ADecimal$Afixedpoint11Hours */
            {
                ArrayList<Object> list = new59();
                push(goTo(22), list);
            }
            break;
            case 60: /* reduce ADecimal$Afixedpoint21Hours */
            {
                ArrayList<Object> list = new60();
                push(goTo(22), list);
            }
            break;
            case 61: /* reduce AAminutelyhours1Hours */
            {
                ArrayList<Object> list = new61();
                push(goTo(22), list);
            }
            break;
            case 62: /* reduce AAminutelyhours2Hours */
            {
                ArrayList<Object> list = new62();
                push(goTo(22), list);
            }
            break;
            case 63: /* reduce ADecimal$Afixedpoint11Minutes */
            {
                ArrayList<Object> list = new63();
                push(goTo(23), list);
            }
            break;
            case 64: /* reduce ADecimal$Afixedpoint21Minutes */
            {
                ArrayList<Object> list = new64();
                push(goTo(23), list);
            }
            break;
            case 65: /* reduce AAsecondlyminutes1Minutes */
            {
                ArrayList<Object> list = new65();
                push(goTo(23), list);
            }
            break;
            case 66: /* reduce AAsecondlyminutes2Minutes */
            {
                ArrayList<Object> list = new66();
                push(goTo(23), list);
            }
            break;
            case 67: /* reduce ADecimal$Afixedpoint11Seconds */
            {
                ArrayList<Object> list = new67();
                push(goTo(24), list);
            }
            break;
            case 68: /* reduce ADecimal$Afixedpoint21Seconds */
            {
                ArrayList<Object> list = new68();
                push(goTo(24), list);
            }
            break;
            case 69: /* reduce AAmillisecondlyseconds1Seconds */
            {
                ArrayList<Object> list = new69();
                push(goTo(24), list);
            }
            break;
            case 70: /* reduce AAmillisecondlyseconds2Seconds */
            {
                ArrayList<Object> list = new70();
                push(goTo(24), list);
            }
            break;
            case 71: /* reduce AAfixedpoint11Milliseconds */
            {
                ArrayList<Object> list = new71();
                push(goTo(25), list);
            }
            break;
            case 72: /* reduce AAfixedpoint21Milliseconds */
            {
                ArrayList<Object> list = new72();
                push(goTo(25), list);
            }
            break;
            case 73: /* reduce ATimeOfDay */
            {
                ArrayList<Object> list = new73();
                push(goTo(26), list);
            }
            break;
            case 74: /* reduce ADaytime */
            {
                ArrayList<Object> list = new74();
                push(goTo(27), list);
            }
            break;
            case 75: /* reduce ADayHour */
            {
                ArrayList<Object> list = new75();
                push(goTo(28), list);
            }
            break;
            case 76: /* reduce ADayMinute */
            {
                ArrayList<Object> list = new76();
                push(goTo(29), list);
            }
            break;
            case 77: /* reduce AAfixedpoint11DaySecond */
            {
                ArrayList<Object> list = new77();
                push(goTo(30), list);
            }
            break;
            case 78: /* reduce AAfixedpoint21DaySecond */
            {
                ArrayList<Object> list = new78();
                push(goTo(30), list);
            }
            break;
            case 79: /* reduce ADate */
            {
                ArrayList<Object> list = new79();
                push(goTo(31), list);
            }
            break;
            case 80: /* reduce ADateLiteral */
            {
                ArrayList<Object> list = new80();
                push(goTo(32), list);
            }
            break;
            case 81: /* reduce AYear */
            {
                ArrayList<Object> list = new81();
                push(goTo(33), list);
            }
            break;
            case 82: /* reduce AMonth */
            {
                ArrayList<Object> list = new82();
                push(goTo(34), list);
            }
            break;
            case 83: /* reduce ADay */
            {
                ArrayList<Object> list = new83();
                push(goTo(35), list);
            }
            break;
            case 84: /* reduce ADateAndTime */
            {
                ArrayList<Object> list = new84();
                push(goTo(36), list);
            }
            break;
            case 85: /* reduce AArrayStructStringSimpleDerivedTypeName */
            {
                ArrayList<Object> list = new85();
                push(goTo(37), list);
            }
            break;
            case 86: /* reduce AStructureElementName */
            {
                ArrayList<Object> list = new86();
                push(goTo(38), list);
            }
            break;
            case 87: /* reduce ADataTypeDeclarationElement */
            {
                ArrayList<Object> list = new87();
                push(goTo(39), list);
            }
            break;
            case 88: /* reduce ADataTypeDeclaration */
            {
                ArrayList<Object> list = new88();
                push(goTo(40), list);
            }
            break;
            case 89: /* reduce ASingleTypeTypeDeclaration */
            {
                ArrayList<Object> list = new89();
                push(goTo(41), list);
            }
            break;
            case 90: /* reduce AArrayTypeTypeDeclaration */
            {
                ArrayList<Object> list = new90();
                push(goTo(41), list);
            }
            break;
            case 91: /* reduce AStructTypeTypeDeclaration */
            {
                ArrayList<Object> list = new91();
                push(goTo(41), list);
            }
            break;
            case 92: /* reduce AStringTypeTypeDeclaration */
            {
                ArrayList<Object> list = new92();
                push(goTo(41), list);
            }
            break;
            case 93: /* reduce A1ArrayTypeDeclaration */
            {
                ArrayList<Object> list = new93();
                push(goTo(42), list);
            }
            break;
            case 94: /* reduce ASingleElementTypeDeclaration */
            {
                ArrayList<Object> list = new94();
                push(goTo(43), list);
            }
            break;
            case 95: /* reduce A1SimpleTypeDeclaration */
            {
                ArrayList<Object> list = new95();
                push(goTo(44), list);
            }
            break;
            case 96: /* reduce ASimpleSpecInitialization */
            {
                ArrayList<Object> list = new96();
                push(goTo(45), list);
            }
            break;
            case 97: /* reduce AAsimplespecinit1SimpleSpecInit */
            {
                ArrayList<Object> list = new97();
                push(goTo(46), list);
            }
            break;
            case 98: /* reduce AAsimplespecinit2SimpleSpecInit */
            {
                ArrayList<Object> list = new98();
                push(goTo(46), list);
            }
            break;
            case 99: /* reduce AElementarySimpleSpecification */
            {
                ArrayList<Object> list = new99();
                push(goTo(47), list);
            }
            break;
            case 100: /* reduce ASubrange */
            {
                ArrayList<Object> list = new100();
                push(goTo(48), list);
            }
            break;
            case 101: /* reduce AAsubrangelist1SubrangeList */
            {
                ArrayList<Object> list = new101();
                push(goTo(49), list);
            }
            break;
            case 102: /* reduce AAsubrangelist2SubrangeList */
            {
                ArrayList<Object> list = new102();
                push(goTo(49), list);
            }
            break;
            case 103: /* reduce ASubrangeListHead */
            {
                ArrayList<Object> list = new103();
                push(goTo(50), list);
            }
            break;
            case 104: /* reduce AArraySpecInitialization */
            {
                ArrayList<Object> list = new104();
                push(goTo(51), list);
            }
            break;
            case 105: /* reduce AAarrayspecinit1ArraySpecInit */
            {
                ArrayList<Object> list = new105();
                push(goTo(52), list);
            }
            break;
            case 106: /* reduce AAarrayspecinit2ArraySpecInit */
            {
                ArrayList<Object> list = new106();
                push(goTo(52), list);
            }
            break;
            case 107: /* reduce AInlineArraySpecification */
            {
                ArrayList<Object> list = new107();
                push(goTo(53), list);
            }
            break;
            case 108: /* reduce AArrayInitialization */
            {
                ArrayList<Object> list = new108();
                push(goTo(54), list);
            }
            break;
            case 109: /* reduce AAarrayinitialelementslist1ArrayInitialElementsList */
            {
                ArrayList<Object> list = new109();
                push(goTo(55), list);
            }
            break;
            case 110: /* reduce AAarrayinitialelementslist2ArrayInitialElementsList */
            {
                ArrayList<Object> list = new110();
                push(goTo(55), list);
            }
            break;
            case 111: /* reduce AArrayInitialElementsListHead */
            {
                ArrayList<Object> list = new111();
                push(goTo(56), list);
            }
            break;
            case 112: /* reduce ASingleArrayInitialElements */
            {
                ArrayList<Object> list = new112();
                push(goTo(57), list);
            }
            break;
            case 113: /* reduce AArepeatarrayinitialelements1ArrayInitialElements */
            {
                ArrayList<Object> list = new113();
                push(goTo(57), list);
            }
            break;
            case 114: /* reduce AArepeatarrayinitialelements2ArrayInitialElements */
            {
                ArrayList<Object> list = new114();
                push(goTo(57), list);
            }
            break;
            case 115: /* reduce AConstantInitialElement */
            {
                ArrayList<Object> list = new115();
                push(goTo(58), list);
            }
            break;
            case 116: /* reduce AStructInitialElement */
            {
                ArrayList<Object> list = new116();
                push(goTo(58), list);
            }
            break;
            case 117: /* reduce AArrayInitialElement */
            {
                ArrayList<Object> list = new117();
                push(goTo(58), list);
            }
            break;
            case 118: /* reduce A1StructureTypeDeclaration */
            {
                ArrayList<Object> list = new118();
                push(goTo(59), list);
            }
            break;
            case 119: /* reduce AStructureDeclarationStructureSpecification */
            {
                ArrayList<Object> list = new119();
                push(goTo(60), list);
            }
            break;
            case 120: /* reduce AInitializedStructureSpecification */
            {
                ArrayList<Object> list = new120();
                push(goTo(60), list);
            }
            break;
            case 121: /* reduce AInitializedStructureInitialization */
            {
                ArrayList<Object> list = new121();
                push(goTo(61), list);
            }
            break;
            case 122: /* reduce AAinitializedstructure1$1InitializedStructure */
            {
                ArrayList<Object> list = new122();
                push(goTo(62), list);
            }
            break;
            case 123: /* reduce AAinitializedstructure2$1InitializedStructure */
            {
                ArrayList<Object> list = new123();
                push(goTo(62), list);
            }
            break;
            case 124: /* reduce AStructureDeclaration */
            {
                ArrayList<Object> list = new124();
                push(goTo(63), list);
            }
            break;
            case 125: /* reduce AAstructureelementdeclarationlist1StructureElementDeclarationList */
            {
                ArrayList<Object> list = new125();
                push(goTo(64), list);
            }
            break;
            case 126: /* reduce AAstructureelementdeclarationlist2StructureElementDeclarationList */
            {
                ArrayList<Object> list = new126();
                push(goTo(64), list);
            }
            break;
            case 127: /* reduce AStructureElementDeclarationListHead */
            {
                ArrayList<Object> list = new127();
                push(goTo(65), list);
            }
            break;
            case 128: /* reduce AStructureElementDeclaration */
            {
                ArrayList<Object> list = new128();
                push(goTo(66), list);
            }
            break;
            case 129: /* reduce ASimpleStructureElementInit */
            {
                ArrayList<Object> list = new129();
                push(goTo(67), list);
            }
            break;
            case 130: /* reduce AArrayStructureElementInit */
            {
                ArrayList<Object> list = new130();
                push(goTo(67), list);
            }
            break;
            case 131: /* reduce AStructStructureElementInit */
            {
                ArrayList<Object> list = new131();
                push(goTo(67), list);
            }
            break;
            case 132: /* reduce AStructureInitialization */
            {
                ArrayList<Object> list = new132();
                push(goTo(68), list);
            }
            break;
            case 133: /* reduce AAstructureelementinitializationlist1StructureElementInitializationList */
            {
                ArrayList<Object> list = new133();
                push(goTo(69), list);
            }
            break;
            case 134: /* reduce AAstructureelementinitializationlist2StructureElementInitializationList */
            {
                ArrayList<Object> list = new134();
                push(goTo(69), list);
            }
            break;
            case 135: /* reduce AStructureElementInitializationListHead */
            {
                ArrayList<Object> list = new135();
                push(goTo(70), list);
            }
            break;
            case 136: /* reduce AStructureElementInitialization */
            {
                ArrayList<Object> list = new136();
                push(goTo(71), list);
            }
            break;
            case 137: /* reduce AStringStringWstringTypeName */
            {
                ArrayList<Object> list = new137();
                push(goTo(72), list);
            }
            break;
            case 138: /* reduce AWstringStringWstringTypeName */
            {
                ArrayList<Object> list = new138();
                push(goTo(72), list);
            }
            break;
            case 139: /* reduce AStringTypeDeclarationLenSpec */
            {
                ArrayList<Object> list = new139();
                push(goTo(73), list);
            }
            break;
            case 140: /* reduce AStringTypeDeclarationInitialization */
            {
                ArrayList<Object> list = new140();
                push(goTo(74), list);
            }
            break;
            case 141: /* reduce AAlenstringtypedeclaration1$1StringTypeDeclaration */
            {
                ArrayList<Object> list = new141();
                push(goTo(75), list);
            }
            break;
            case 142: /* reduce AAlenstringtypedeclaration2$1StringTypeDeclaration */
            {
                ArrayList<Object> list = new142();
                push(goTo(75), list);
            }
            break;
            case 143: /* reduce ADirectVariableVariable */
            {
                ArrayList<Object> list = new143();
                push(goTo(76), list);
            }
            break;
            case 144: /* reduce ASymbolicVariableVariable */
            {
                ArrayList<Object> list = new144();
                push(goTo(76), list);
            }
            break;
            case 145: /* reduce ADirectVariableVariableComplex */
            {
                ArrayList<Object> list = new145();
                push(goTo(77), list);
            }
            break;
            case 146: /* reduce ASymbolicVariableVariableComplex */
            {
                ArrayList<Object> list = new146();
                push(goTo(77), list);
            }
            break;
            case 147: /* reduce AVariableSymbolicVariable */
            {
                ArrayList<Object> list = new147();
                push(goTo(78), list);
            }
            break;
            case 148: /* reduce AArraySymbolicVariable */
            {
                ArrayList<Object> list = new148();
                push(goTo(78), list);
            }
            break;
            case 149: /* reduce AStructSymbolicVariable */
            {
                ArrayList<Object> list = new149();
                push(goTo(78), list);
            }
            break;
            case 150: /* reduce AArraySymbolicVariableComplex */
            {
                ArrayList<Object> list = new150();
                push(goTo(79), list);
            }
            break;
            case 151: /* reduce AStructSymbolicVariableComplex */
            {
                ArrayList<Object> list = new151();
                push(goTo(79), list);
            }
            break;
            case 152: /* reduce AAdirectvariable1DirectVariable */
            {
                ArrayList<Object> list = new152();
                push(goTo(80), list);
            }
            break;
            case 153: /* reduce AAdirectvariable2DirectVariable */
            {
                ArrayList<Object> list = new153();
                push(goTo(80), list);
            }
            break;
            case 154: /* reduce AAdirectvariable3DirectVariable */
            {
                ArrayList<Object> list = new154();
                push(goTo(80), list);
            }
            break;
            case 155: /* reduce AAdirectvariable4DirectVariable */
            {
                ArrayList<Object> list = new155();
                push(goTo(80), list);
            }
            break;
            case 156: /* reduce APrefixedInteger */
            {
                ArrayList<Object> list = new156();
                push(goTo(81), list);
            }
            break;
            case 157: /* reduce AAsubscriptlist1SubscriptList */
            {
                ArrayList<Object> list = new157();
                push(goTo(82), list);
            }
            break;
            case 158: /* reduce AAsubscriptlist2SubscriptList */
            {
                ArrayList<Object> list = new158();
                push(goTo(82), list);
            }
            break;
            case 159: /* reduce ASubscriptListHead */
            {
                ArrayList<Object> list = new159();
                push(goTo(83), list);
            }
            break;
            case 160: /* reduce ASubscript */
            {
                ArrayList<Object> list = new160();
                push(goTo(84), list);
            }
            break;
            case 161: /* reduce AFieldSelector */
            {
                ArrayList<Object> list = new161();
                push(goTo(85), list);
            }
            break;
            case 162: /* reduce AInputDeclarations */
            {
                ArrayList<Object> list = new162();
                push(goTo(86), list);
            }
            break;
            case 163: /* reduce AOutputDeclarations */
            {
                ArrayList<Object> list = new163();
                push(goTo(87), list);
            }
            break;
            case 164: /* reduce AInputOutputDeclarations */
            {
                ArrayList<Object> list = new164();
                push(goTo(88), list);
            }
            break;
            case 165: /* reduce AAvardeclarations1VarDeclarations */
            {
                ArrayList<Object> list = new165();
                push(goTo(89), list);
            }
            break;
            case 166: /* reduce AAvardeclarations2VarDeclarations */
            {
                ArrayList<Object> list = new166();
                push(goTo(89), list);
            }
            break;
            case 167: /* reduce AAexternalvardeclarations1ExternalVarDeclarations */
            {
                ArrayList<Object> list = new167();
                push(goTo(90), list);
            }
            break;
            case 168: /* reduce AAexternalvardeclarations2ExternalVarDeclarations */
            {
                ArrayList<Object> list = new168();
                push(goTo(90), list);
            }
            break;
            case 169: /* reduce ATempVarDeclarations */
            {
                ArrayList<Object> list = new169();
                push(goTo(91), list);
            }
            break;
            case 170: /* reduce AAvarinitdecls1VarInitDecls */
            {
                ArrayList<Object> list = new170();
                push(goTo(92), list);
            }
            break;
            case 171: /* reduce AAvarinitdecls2VarInitDecls */
            {
                ArrayList<Object> list = new171();
                push(goTo(92), list);
            }
            break;
            case 172: /* reduce AVarInitDeclsHead */
            {
                ArrayList<Object> list = new172();
                push(goTo(93), list);
            }
            break;
            case 173: /* reduce AAvarinitdecl1VarInitDecl */
            {
                ArrayList<Object> list = new173();
                push(goTo(94), list);
            }
            break;
            case 174: /* reduce AAvarinitdecl2VarInitDecl */
            {
                ArrayList<Object> list = new174();
                push(goTo(94), list);
            }
            break;
            case 175: /* reduce AAstructfbnamevarinitdeclspec1VarInitDeclSpec */
            {
                ArrayList<Object> list = new175();
                push(goTo(95), list);
            }
            break;
            case 176: /* reduce AAstructfbnamevarinitdeclspec2VarInitDeclSpec */
            {
                ArrayList<Object> list = new176();
                push(goTo(95), list);
            }
            break;
            case 177: /* reduce AVarVarInitDeclSpec */
            {
                ArrayList<Object> list = new177();
                push(goTo(95), list);
            }
            break;
            case 178: /* reduce AArrayVarVarInitDeclSpec */
            {
                ArrayList<Object> list = new178();
                push(goTo(95), list);
            }
            break;
            case 179: /* reduce ASStringVarInitDeclSpec */
            {
                ArrayList<Object> list = new179();
                push(goTo(95), list);
            }
            break;
            case 180: /* reduce ADStringVarInitDeclSpec */
            {
                ArrayList<Object> list = new180();
                push(goTo(95), list);
            }
            break;
            case 181: /* reduce AAvar1list1Var1List */
            {
                ArrayList<Object> list = new181();
                push(goTo(96), list);
            }
            break;
            case 182: /* reduce AAvar1list2Var1List */
            {
                ArrayList<Object> list = new182();
                push(goTo(96), list);
            }
            break;
            case 183: /* reduce AVar1ListHead */
            {
                ArrayList<Object> list = new183();
                push(goTo(97), list);
            }
            break;
            case 184: /* reduce ASimpleVar1SpecInit */
            {
                ArrayList<Object> list = new184();
                push(goTo(98), list);
            }
            break;
            case 185: /* reduce AConstantConstantTokenOrRetain */
            {
                ArrayList<Object> list = new185();
                push(goTo(99), list);
            }
            break;
            case 186: /* reduce ARetainConstantTokenOrRetain */
            {
                ArrayList<Object> list = new186();
                push(goTo(99), list);
            }
            break;
            case 187: /* reduce AAlocatedvardeclarations1LocatedVarDeclarations */
            {
                ArrayList<Object> list = new187();
                push(goTo(100), list);
            }
            break;
            case 188: /* reduce AAlocatedvardeclarations2LocatedVarDeclarations */
            {
                ArrayList<Object> list = new188();
                push(goTo(100), list);
            }
            break;
            case 189: /* reduce AAlocatedvardecllist1LocatedVarDeclList */
            {
                ArrayList<Object> list = new189();
                push(goTo(101), list);
            }
            break;
            case 190: /* reduce AAlocatedvardecllist2LocatedVarDeclList */
            {
                ArrayList<Object> list = new190();
                push(goTo(101), list);
            }
            break;
            case 191: /* reduce ALocatedVarDeclListHead */
            {
                ArrayList<Object> list = new191();
                push(goTo(102), list);
            }
            break;
            case 192: /* reduce AAlocatedvardecl1LocatedVarDecl */
            {
                ArrayList<Object> list = new192();
                push(goTo(103), list);
            }
            break;
            case 193: /* reduce AAlocatedvardecl2LocatedVarDecl */
            {
                ArrayList<Object> list = new193();
                push(goTo(103), list);
            }
            break;
            case 194: /* reduce ASimpleLocatedVarSpecInit */
            {
                ArrayList<Object> list = new194();
                push(goTo(104), list);
            }
            break;
            case 195: /* reduce AArrayLocatedVarSpecInit */
            {
                ArrayList<Object> list = new195();
                push(goTo(104), list);
            }
            break;
            case 196: /* reduce AStructLocatedVarSpecInit */
            {
                ArrayList<Object> list = new196();
                push(goTo(104), list);
            }
            break;
            case 197: /* reduce ASstringLocatedVarSpecInit */
            {
                ArrayList<Object> list = new197();
                push(goTo(104), list);
            }
            break;
            case 198: /* reduce ADstringLocatedVarSpecInit */
            {
                ArrayList<Object> list = new198();
                push(goTo(104), list);
            }
            break;
            case 199: /* reduce ALocation */
            {
                ArrayList<Object> list = new199();
                push(goTo(105), list);
            }
            break;
            case 200: /* reduce ABrackInteger */
            {
                ArrayList<Object> list = new200();
                push(goTo(106), list);
            }
            break;
            case 201: /* reduce ASingleByteStringSpecInitialization */
            {
                ArrayList<Object> list = new201();
                push(goTo(107), list);
            }
            break;
            case 202: /* reduce AAsinglebytestringspec1SingleByteStringSpec */
            {
                ArrayList<Object> list = new202();
                push(goTo(108), list);
            }
            break;
            case 203: /* reduce AAsinglebytestringspec2SingleByteStringSpec */
            {
                ArrayList<Object> list = new203();
                push(goTo(108), list);
            }
            break;
            case 204: /* reduce ADoubleByteStringSpecInitialization */
            {
                ArrayList<Object> list = new204();
                push(goTo(109), list);
            }
            break;
            case 205: /* reduce AAdoublebytestringspec1DoubleByteStringSpec */
            {
                ArrayList<Object> list = new205();
                push(goTo(110), list);
            }
            break;
            case 206: /* reduce AAdoublebytestringspec2DoubleByteStringSpec */
            {
                ArrayList<Object> list = new206();
                push(goTo(110), list);
            }
            break;
            case 207: /* reduce AFunctionName */
            {
                ArrayList<Object> list = new207();
                push(goTo(111), list);
            }
            break;
            case 208: /* reduce AAfunctiondeclaration1FunctionDeclaration */
            {
                ArrayList<Object> list = new208();
                push(goTo(112), list);
            }
            break;
            case 209: /* reduce AAfunctiondeclaration2FunctionDeclaration */
            {
                ArrayList<Object> list = new209();
                push(goTo(112), list);
            }
            break;
            case 210: /* reduce AElementaryReturnTypeName */
            {
                ArrayList<Object> list = new210();
                push(goTo(113), list);
            }
            break;
            case 211: /* reduce ADerivedReturnTypeName */
            {
                ArrayList<Object> list = new211();
                push(goTo(113), list);
            }
            break;
            case 212: /* reduce AIoFunctionVarDeclaration */
            {
                ArrayList<Object> list = new212();
                push(goTo(114), list);
            }
            break;
            case 213: /* reduce AFunctionFunctionVarDeclaration */
            {
                ArrayList<Object> list = new213();
                push(goTo(114), list);
            }
            break;
            case 214: /* reduce AInputIoVarDeclarations */
            {
                ArrayList<Object> list = new214();
                push(goTo(115), list);
            }
            break;
            case 215: /* reduce AOuputIoVarDeclarations */
            {
                ArrayList<Object> list = new215();
                push(goTo(115), list);
            }
            break;
            case 216: /* reduce AIoIoVarDeclarations */
            {
                ArrayList<Object> list = new216();
                push(goTo(115), list);
            }
            break;
            case 217: /* reduce AFunctionBody */
            {
                ArrayList<Object> list = new217();
                push(goTo(116), list);
            }
            break;
            case 218: /* reduce AStandardFunctionBlockTypeName */
            {
                ArrayList<Object> list = new218();
                push(goTo(117), list);
            }
            break;
            case 219: /* reduce ADerivedFunctionBlockTypeName */
            {
                ArrayList<Object> list = new219();
                push(goTo(117), list);
            }
            break;
            case 220: /* reduce ADerivedFunctionBlockName */
            {
                ArrayList<Object> list = new220();
                push(goTo(118), list);
            }
            break;
            case 221: /* reduce AAfunctionblockdeclaration1FunctionBlockDeclaration */
            {
                ArrayList<Object> list = new221();
                push(goTo(119), list);
            }
            break;
            case 222: /* reduce AAfunctionblockdeclaration2FunctionBlockDeclaration */
            {
                ArrayList<Object> list = new222();
                push(goTo(119), list);
            }
            break;
            case 223: /* reduce AIoFunctionBlockVarDeclarations */
            {
                ArrayList<Object> list = new223();
                push(goTo(120), list);
            }
            break;
            case 224: /* reduce AOtherFunctionBlockVarDeclarations */
            {
                ArrayList<Object> list = new224();
                push(goTo(120), list);
            }
            break;
            case 225: /* reduce AExternalOtherVarDeclarations */
            {
                ArrayList<Object> list = new225();
                push(goTo(121), list);
            }
            break;
            case 226: /* reduce AVarOtherVarDeclarations */
            {
                ArrayList<Object> list = new226();
                push(goTo(121), list);
            }
            break;
            case 227: /* reduce ATempOtherVarDeclarations */
            {
                ArrayList<Object> list = new227();
                push(goTo(121), list);
            }
            break;
            case 228: /* reduce AFunctionBlockBody */
            {
                ArrayList<Object> list = new228();
                push(goTo(122), list);
            }
            break;
            case 229: /* reduce AProgramTypeName */
            {
                ArrayList<Object> list = new229();
                push(goTo(123), list);
            }
            break;
            case 230: /* reduce AAccessName */
            {
                ArrayList<Object> list = new230();
                push(goTo(124), list);
            }
            break;
            case 231: /* reduce AAprogramdeclaration1ProgramDeclaration */
            {
                ArrayList<Object> list = new231();
                push(goTo(125), list);
            }
            break;
            case 232: /* reduce AAprogramdeclaration2ProgramDeclaration */
            {
                ArrayList<Object> list = new232();
                push(goTo(125), list);
            }
            break;
            case 233: /* reduce AIoProgramVarDeclarations */
            {
                ArrayList<Object> list = new233();
                push(goTo(126), list);
            }
            break;
            case 234: /* reduce AOtherProgramVarDeclarations */
            {
                ArrayList<Object> list = new234();
                push(goTo(126), list);
            }
            break;
            case 235: /* reduce ALocatedProgramVarDeclarations */
            {
                ArrayList<Object> list = new235();
                push(goTo(126), list);
            }
            break;
            case 236: /* reduce AAccessProgramVarDeclarations */
            {
                ArrayList<Object> list = new236();
                push(goTo(126), list);
            }
            break;
            case 237: /* reduce AProgramAccessDecls */
            {
                ArrayList<Object> list = new237();
                push(goTo(127), list);
            }
            break;
            case 238: /* reduce AAprogramaccessdecllist1ProgramAccessDeclList */
            {
                ArrayList<Object> list = new238();
                push(goTo(128), list);
            }
            break;
            case 239: /* reduce AAprogramaccessdecllist2ProgramAccessDeclList */
            {
                ArrayList<Object> list = new239();
                push(goTo(128), list);
            }
            break;
            case 240: /* reduce AProgramAccessDeclListHead */
            {
                ArrayList<Object> list = new240();
                push(goTo(129), list);
            }
            break;
            case 241: /* reduce AAprogramaccessdecl1ProgramAccessDecl */
            {
                ArrayList<Object> list = new241();
                push(goTo(130), list);
            }
            break;
            case 242: /* reduce AAprogramaccessdecl2ProgramAccessDecl */
            {
                ArrayList<Object> list = new242();
                push(goTo(130), list);
            }
            break;
            case 243: /* reduce AOrExpression */
            {
                ArrayList<Object> list = new243();
                push(goTo(131), list);
            }
            break;
            case 244: /* reduce AUnaryExpressionExpression */
            {
                ArrayList<Object> list = new244();
                push(goTo(131), list);
            }
            break;
            case 245: /* reduce AXorXorExpression */
            {
                ArrayList<Object> list = new245();
                push(goTo(132), list);
            }
            break;
            case 246: /* reduce AUnaryXorExpression */
            {
                ArrayList<Object> list = new246();
                push(goTo(132), list);
            }
            break;
            case 247: /* reduce AAndAndExpression */
            {
                ArrayList<Object> list = new247();
                push(goTo(133), list);
            }
            break;
            case 248: /* reduce AUnaryAndExpression */
            {
                ArrayList<Object> list = new248();
                push(goTo(133), list);
            }
            break;
            case 249: /* reduce AComparisonComparison */
            {
                ArrayList<Object> list = new249();
                push(goTo(134), list);
            }
            break;
            case 250: /* reduce AUnaryComparison */
            {
                ArrayList<Object> list = new250();
                push(goTo(134), list);
            }
            break;
            case 251: /* reduce AEquEquExpression */
            {
                ArrayList<Object> list = new251();
                push(goTo(135), list);
            }
            break;
            case 252: /* reduce AUnaryEquExpression */
            {
                ArrayList<Object> list = new252();
                push(goTo(135), list);
            }
            break;
            case 253: /* reduce AAddAddExpression */
            {
                ArrayList<Object> list = new253();
                push(goTo(136), list);
            }
            break;
            case 254: /* reduce AUnaryAddExpression */
            {
                ArrayList<Object> list = new254();
                push(goTo(136), list);
            }
            break;
            case 255: /* reduce AAddOperator */
            {
                ArrayList<Object> list = new255();
                push(goTo(137), list);
            }
            break;
            case 256: /* reduce AMulTerm */
            {
                ArrayList<Object> list = new256();
                push(goTo(138), list);
            }
            break;
            case 257: /* reduce ATermTerm */
            {
                ArrayList<Object> list = new257();
                push(goTo(138), list);
            }
            break;
            case 258: /* reduce APowerPowerExpression */
            {
                ArrayList<Object> list = new258();
                push(goTo(139), list);
            }
            break;
            case 259: /* reduce AUnaryPowerExpression */
            {
                ArrayList<Object> list = new259();
                push(goTo(139), list);
            }
            break;
            case 260: /* reduce AAunaryexpression1UnaryExpression */
            {
                ArrayList<Object> list = new260();
                push(goTo(140), list);
            }
            break;
            case 261: /* reduce AAunaryexpression2UnaryExpression */
            {
                ArrayList<Object> list = new261();
                push(goTo(140), list);
            }
            break;
            case 262: /* reduce AConstantPrimaryExpression */
            {
                ArrayList<Object> list = new262();
                push(goTo(141), list);
            }
            break;
            case 263: /* reduce AVariablePrimaryExpression */
            {
                ArrayList<Object> list = new263();
                push(goTo(141), list);
            }
            break;
            case 264: /* reduce AParenPrimaryExpression */
            {
                ArrayList<Object> list = new264();
                push(goTo(141), list);
            }
            break;
            case 265: /* reduce ACallPrimaryExpression */
            {
                ArrayList<Object> list = new265();
                push(goTo(141), list);
            }
            break;
            case 266: /* reduce AAparamassignmentlist1ParamAssignmentList */
            {
                ArrayList<Object> list = new266();
                push(goTo(142), list);
            }
            break;
            case 267: /* reduce AAparamassignmentlist2ParamAssignmentList */
            {
                ArrayList<Object> list = new267();
                push(goTo(142), list);
            }
            break;
            case 268: /* reduce AParamAssignmentListHead */
            {
                ArrayList<Object> list = new268();
                push(goTo(143), list);
            }
            break;
            case 269: /* reduce AStatementList */
            {
                ArrayList<Object> list = new269();
                push(goTo(144), list);
            }
            break;
            case 270: /* reduce AAstatementlisthead1StatementListHead */
            {
                ArrayList<Object> list = new270();
                push(goTo(145), list);
            }
            break;
            case 271: /* reduce AAstatementlisthead2StatementListHead */
            {
                ArrayList<Object> list = new271();
                push(goTo(145), list);
            }
            break;
            case 272: /* reduce AAssignStatement */
            {
                ArrayList<Object> list = new272();
                push(goTo(146), list);
            }
            break;
            case 273: /* reduce AAcallstatement1Statement */
            {
                ArrayList<Object> list = new273();
                push(goTo(146), list);
            }
            break;
            case 274: /* reduce AAcallstatement2Statement */
            {
                ArrayList<Object> list = new274();
                push(goTo(146), list);
            }
            break;
            case 275: /* reduce AAssign2Statement */
            {
                ArrayList<Object> list = new275();
                push(goTo(146), list);
            }
            break;
            case 276: /* reduce AReturnStatement */
            {
                ArrayList<Object> list = new276();
                push(goTo(146), list);
            }
            break;
            case 277: /* reduce ASelectionStatement */
            {
                ArrayList<Object> list = new277();
                push(goTo(146), list);
            }
            break;
            case 278: /* reduce AIterStatement */
            {
                ArrayList<Object> list = new278();
                push(goTo(146), list);
            }
            break;
            case 279: /* reduce AParamAssignmentLvalue */
            {
                ArrayList<Object> list = new279();
                push(goTo(147), list);
            }
            break;
            case 280: /* reduce AAexprparamassignment1ParamAssignment */
            {
                ArrayList<Object> list = new280();
                push(goTo(148), list);
            }
            break;
            case 281: /* reduce AAexprparamassignment2ParamAssignment */
            {
                ArrayList<Object> list = new281();
                push(goTo(148), list);
            }
            break;
            case 282: /* reduce AAarrowparamassignment1ParamAssignment */
            {
                ArrayList<Object> list = new282();
                push(goTo(148), list);
            }
            break;
            case 283: /* reduce AAarrowparamassignment2ParamAssignment */
            {
                ArrayList<Object> list = new283();
                push(goTo(148), list);
            }
            break;
            case 284: /* reduce AIfSelectionStatement */
            {
                ArrayList<Object> list = new284();
                push(goTo(149), list);
            }
            break;
            case 285: /* reduce ACaseSelectionStatement */
            {
                ArrayList<Object> list = new285();
                push(goTo(149), list);
            }
            break;
            case 286: /* reduce AAifstatement1IfStatement */
            {
                ArrayList<Object> list = new286();
                push(goTo(150), list);
            }
            break;
            case 287: /* reduce AAifstatement2IfStatement */
            {
                ArrayList<Object> list = new287();
                push(goTo(150), list);
            }
            break;
            case 288: /* reduce AAifstatement3IfStatement */
            {
                ArrayList<Object> list = new288();
                push(goTo(150), list);
            }
            break;
            case 289: /* reduce AAifstatement4IfStatement */
            {
                ArrayList<Object> list = new289();
                push(goTo(150), list);
            }
            break;
            case 290: /* reduce AElseifStatement */
            {
                ArrayList<Object> list = new290();
                push(goTo(151), list);
            }
            break;
            case 291: /* reduce AElseStatement */
            {
                ArrayList<Object> list = new291();
                push(goTo(152), list);
            }
            break;
            case 292: /* reduce ACaseStatementElseClause */
            {
                ArrayList<Object> list = new292();
                push(goTo(153), list);
            }
            break;
            case 293: /* reduce AAcasestatement1CaseStatement */
            {
                ArrayList<Object> list = new293();
                push(goTo(154), list);
            }
            break;
            case 294: /* reduce AAcasestatement2CaseStatement */
            {
                ArrayList<Object> list = new294();
                push(goTo(154), list);
            }
            break;
            case 295: /* reduce ACaseElement */
            {
                ArrayList<Object> list = new295();
                push(goTo(155), list);
            }
            break;
            case 296: /* reduce AAcaselist1CaseList */
            {
                ArrayList<Object> list = new296();
                push(goTo(156), list);
            }
            break;
            case 297: /* reduce AAcaselist2CaseList */
            {
                ArrayList<Object> list = new297();
                push(goTo(156), list);
            }
            break;
            case 298: /* reduce ACaseListHead */
            {
                ArrayList<Object> list = new298();
                push(goTo(157), list);
            }
            break;
            case 299: /* reduce ASubrangeCaseListElement */
            {
                ArrayList<Object> list = new299();
                push(goTo(158), list);
            }
            break;
            case 300: /* reduce AIntegerCaseListElement */
            {
                ArrayList<Object> list = new300();
                push(goTo(158), list);
            }
            break;
            case 301: /* reduce AForIterationStatement */
            {
                ArrayList<Object> list = new301();
                push(goTo(159), list);
            }
            break;
            case 302: /* reduce AWhileIterationStatement */
            {
                ArrayList<Object> list = new302();
                push(goTo(159), list);
            }
            break;
            case 303: /* reduce ARepeatIterationStatement */
            {
                ArrayList<Object> list = new303();
                push(goTo(159), list);
            }
            break;
            case 304: /* reduce AExitIterationStatement */
            {
                ArrayList<Object> list = new304();
                push(goTo(159), list);
            }
            break;
            case 305: /* reduce AForStatement */
            {
                ArrayList<Object> list = new305();
                push(goTo(160), list);
            }
            break;
            case 306: /* reduce AControlVariable */
            {
                ArrayList<Object> list = new306();
                push(goTo(161), list);
            }
            break;
            case 307: /* reduce AForListByClause */
            {
                ArrayList<Object> list = new307();
                push(goTo(162), list);
            }
            break;
            case 308: /* reduce AAforlist1ForList */
            {
                ArrayList<Object> list = new308();
                push(goTo(163), list);
            }
            break;
            case 309: /* reduce AAforlist2ForList */
            {
                ArrayList<Object> list = new309();
                push(goTo(163), list);
            }
            break;
            case 310: /* reduce AWhileStatement */
            {
                ArrayList<Object> list = new310();
                push(goTo(164), list);
            }
            break;
            case 311: /* reduce ARepeatStatement */
            {
                ArrayList<Object> list = new311();
                push(goTo(165), list);
            }
            break;
            case 312: /* reduce AExitStatement */
            {
                ArrayList<Object> list = new312();
                push(goTo(166), list);
            }
            break;
            case 313: /* reduce ATerminal$LibraryElementDeclaration */
            {
                ArrayList<Object> list = new313();
                push(goTo(167), list);
            }
            break;
            case 314: /* reduce ANonTerminal$LibraryElementDeclaration */
            {
                ArrayList<Object> list = new314();
                push(goTo(167), list);
            }
            break;
            case 315: /* reduce ATerminal$DataTypeDeclarationElement */
            {
                ArrayList<Object> list = new315();
                push(goTo(168), list);
            }
            break;
            case 316: /* reduce ANonTerminal$DataTypeDeclarationElement */
            {
                ArrayList<Object> list = new316();
                push(goTo(168), list);
            }
            break;
            case 317: /* reduce ATerminal$SubrangeListHead */
            {
                ArrayList<Object> list = new317();
                push(goTo(169), list);
            }
            break;
            case 318: /* reduce ANonTerminal$SubrangeListHead */
            {
                ArrayList<Object> list = new318();
                push(goTo(169), list);
            }
            break;
            case 319: /* reduce ATerminal$ArrayInitialElementsListHead */
            {
                ArrayList<Object> list = new319();
                push(goTo(170), list);
            }
            break;
            case 320: /* reduce ANonTerminal$ArrayInitialElementsListHead */
            {
                ArrayList<Object> list = new320();
                push(goTo(170), list);
            }
            break;
            case 321: /* reduce ATerminal$StructureElementDeclarationListHead */
            {
                ArrayList<Object> list = new321();
                push(goTo(171), list);
            }
            break;
            case 322: /* reduce ANonTerminal$StructureElementDeclarationListHead */
            {
                ArrayList<Object> list = new322();
                push(goTo(171), list);
            }
            break;
            case 323: /* reduce ATerminal$StructureElementInitializationListHead */
            {
                ArrayList<Object> list = new323();
                push(goTo(172), list);
            }
            break;
            case 324: /* reduce ANonTerminal$StructureElementInitializationListHead */
            {
                ArrayList<Object> list = new324();
                push(goTo(172), list);
            }
            break;
            case 325: /* reduce ATerminal$PrefixedInteger */
            {
                ArrayList<Object> list = new325();
                push(goTo(173), list);
            }
            break;
            case 326: /* reduce ANonTerminal$PrefixedInteger */
            {
                ArrayList<Object> list = new326();
                push(goTo(173), list);
            }
            break;
            case 327: /* reduce ATerminal$SubscriptListHead */
            {
                ArrayList<Object> list = new327();
                push(goTo(174), list);
            }
            break;
            case 328: /* reduce ANonTerminal$SubscriptListHead */
            {
                ArrayList<Object> list = new328();
                push(goTo(174), list);
            }
            break;
            case 329: /* reduce ATerminal$VarInitDeclsHead */
            {
                ArrayList<Object> list = new329();
                push(goTo(175), list);
            }
            break;
            case 330: /* reduce ANonTerminal$VarInitDeclsHead */
            {
                ArrayList<Object> list = new330();
                push(goTo(175), list);
            }
            break;
            case 331: /* reduce ATerminal$Var1ListHead */
            {
                ArrayList<Object> list = new331();
                push(goTo(176), list);
            }
            break;
            case 332: /* reduce ANonTerminal$Var1ListHead */
            {
                ArrayList<Object> list = new332();
                push(goTo(176), list);
            }
            break;
            case 333: /* reduce ATerminal$LocatedVarDeclListHead */
            {
                ArrayList<Object> list = new333();
                push(goTo(177), list);
            }
            break;
            case 334: /* reduce ANonTerminal$LocatedVarDeclListHead */
            {
                ArrayList<Object> list = new334();
                push(goTo(177), list);
            }
            break;
            case 335: /* reduce ATerminal$FunctionVarDeclaration */
            {
                ArrayList<Object> list = new335();
                push(goTo(178), list);
            }
            break;
            case 336: /* reduce ANonTerminal$FunctionVarDeclaration */
            {
                ArrayList<Object> list = new336();
                push(goTo(178), list);
            }
            break;
            case 337: /* reduce ATerminal$FunctionBlockVarDeclarations */
            {
                ArrayList<Object> list = new337();
                push(goTo(179), list);
            }
            break;
            case 338: /* reduce ANonTerminal$FunctionBlockVarDeclarations */
            {
                ArrayList<Object> list = new338();
                push(goTo(179), list);
            }
            break;
            case 339: /* reduce ATerminal$ProgramVarDeclarations */
            {
                ArrayList<Object> list = new339();
                push(goTo(180), list);
            }
            break;
            case 340: /* reduce ANonTerminal$ProgramVarDeclarations */
            {
                ArrayList<Object> list = new340();
                push(goTo(180), list);
            }
            break;
            case 341: /* reduce ATerminal$ProgramAccessDeclListHead */
            {
                ArrayList<Object> list = new341();
                push(goTo(181), list);
            }
            break;
            case 342: /* reduce ANonTerminal$ProgramAccessDeclListHead */
            {
                ArrayList<Object> list = new342();
                push(goTo(181), list);
            }
            break;
            case 343: /* reduce ATerminal$UnaryOperator */
            {
                ArrayList<Object> list = new343();
                push(goTo(182), list);
            }
            break;
            case 344: /* reduce ANonTerminal$UnaryOperator */
            {
                ArrayList<Object> list = new344();
                push(goTo(182), list);
            }
            break;
            case 345: /* reduce ATerminal$ParamAssignmentListHead */
            {
                ArrayList<Object> list = new345();
                push(goTo(183), list);
            }
            break;
            case 346: /* reduce ANonTerminal$ParamAssignmentListHead */
            {
                ArrayList<Object> list = new346();
                push(goTo(183), list);
            }
            break;
            case 347: /* reduce ATerminal$StatementListHead */
            {
                ArrayList<Object> list = new347();
                push(goTo(184), list);
            }
            break;
            case 348: /* reduce ANonTerminal$StatementListHead */
            {
                ArrayList<Object> list = new348();
                push(goTo(184), list);
            }
            break;
            case 349: /* reduce ATerminal$ElseifStatement */
            {
                ArrayList<Object> list = new349();
                push(goTo(185), list);
            }
            break;
            case 350: /* reduce ANonTerminal$ElseifStatement */
            {
                ArrayList<Object> list = new350();
                push(goTo(185), list);
            }
            break;
            case 351: /* reduce ATerminal$ElseStatement */
            {
                ArrayList<Object> list = new351();
                push(goTo(186), list);
            }
            break;
            case 352: /* reduce ANonTerminal$ElseStatement */
            {
                ArrayList<Object> list = new352();
                push(goTo(186), list);
            }
            break;
            case 353: /* reduce ATerminal$CaseElement */
            {
                ArrayList<Object> list = new353();
                push(goTo(187), list);
            }
            break;
            case 354: /* reduce ANonTerminal$CaseElement */
            {
                ArrayList<Object> list = new354();
                push(goTo(187), list);
            }
            break;
            case 355: /* reduce ATerminal$CaseListHead */
            {
                ArrayList<Object> list = new355();
                push(goTo(188), list);
            }
            break;
            case 356: /* reduce ANonTerminal$CaseListHead */
            {
                ArrayList<Object> list = new356();
                push(goTo(188), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAlibrary1Library */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PLibrary plibraryNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        }

        plibraryNode1 = new ALibrary(listNode2);
        }
	nodeList.add(plibraryNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAlibrary2Library */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLibrary plibraryNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        plibraryNode1 = new ALibrary(listNode3);
        }
	nodeList.add(plibraryNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ADataTypeLibraryElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLibraryElementDeclaration plibraryelementdeclarationNode1;
        {
            // Block
        PDataTypeDeclaration pdatatypedeclarationNode2;
        pdatatypedeclarationNode2 = (PDataTypeDeclaration)nodeArrayList1.get(0);

        plibraryelementdeclarationNode1 = new ADataTypeLibraryElementDeclaration(pdatatypedeclarationNode2);
        }
	nodeList.add(plibraryelementdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AFunctionLibraryElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLibraryElementDeclaration plibraryelementdeclarationNode1;
        {
            // Block
        PFunctionDeclaration pfunctiondeclarationNode2;
        pfunctiondeclarationNode2 = (PFunctionDeclaration)nodeArrayList1.get(0);

        plibraryelementdeclarationNode1 = new AFunctionLibraryElementDeclaration(pfunctiondeclarationNode2);
        }
	nodeList.add(plibraryelementdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AFunctionBlockLibraryElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLibraryElementDeclaration plibraryelementdeclarationNode1;
        {
            // Block
        PFunctionBlockDeclaration pfunctionblockdeclarationNode2;
        pfunctionblockdeclarationNode2 = (PFunctionBlockDeclaration)nodeArrayList1.get(0);

        plibraryelementdeclarationNode1 = new AFunctionBlockLibraryElementDeclaration(pfunctionblockdeclarationNode2);
        }
	nodeList.add(plibraryelementdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AProgramLibraryElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLibraryElementDeclaration plibraryelementdeclarationNode1;
        {
            // Block
        PProgramDeclaration pprogramdeclarationNode2;
        pprogramdeclarationNode2 = (PProgramDeclaration)nodeArrayList1.get(0);

        plibraryelementdeclarationNode1 = new AProgramLibraryElementDeclaration(pprogramdeclarationNode2);
        }
	nodeList.add(plibraryelementdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce AElementaryNonGenericTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNonGenericTypeName pnongenerictypenameNode1;
        {
            // Block
        PElementaryTypeName pelementarytypenameNode2;
        pelementarytypenameNode2 = (PElementaryTypeName)nodeArrayList1.get(0);

        pnongenerictypenameNode1 = new AElementaryNonGenericTypeName(pelementarytypenameNode2);
        }
	nodeList.add(pnongenerictypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADerivedNonGenericTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNonGenericTypeName pnongenerictypenameNode1;
        {
            // Block
        PDerivedTypeName pderivedtypenameNode2;
        pderivedtypenameNode2 = (PDerivedTypeName)nodeArrayList1.get(0);

        pnongenerictypenameNode1 = new ADerivedNonGenericTypeName(pderivedtypenameNode2);
        }
	nodeList.add(pnongenerictypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ANumericElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        PNumericTypeName pnumerictypenameNode2;
        pnumerictypenameNode2 = (PNumericTypeName)nodeArrayList1.get(0);

        pelementarytypenameNode1 = new ANumericElementaryTypeName(pnumerictypenameNode2);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ADateElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        TDateTypeName tdatetypenameNode2;
        tdatetypenameNode2 = (TDateTypeName)nodeArrayList1.get(0);

        pelementarytypenameNode1 = new ADateElementaryTypeName(tdatetypenameNode2);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AAbitstringelementarytypename1ElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        TBitStringTypeName tbitstringtypenameNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        tbitstringtypenameNode2 = (TBitStringTypeName)nodeArrayList1.get(0);

        pelementarytypenameNode1 = new ABitStringElementaryTypeName(tbitstringtypenameNode2, null);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AAbitstringelementarytypename2ElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        TBitStringTypeName tbitstringtypenameNode2;
        TEdge tedgeNode3;
        tbitstringtypenameNode2 = (TBitStringTypeName)nodeArrayList1.get(0);
        tedgeNode3 = (TEdge)nodeArrayList2.get(0);

        pelementarytypenameNode1 = new ABitStringElementaryTypeName(tbitstringtypenameNode2, tedgeNode3);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AStringElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        TString1TypeName tstring1typenameNode2;
        tstring1typenameNode2 = (TString1TypeName)nodeArrayList1.get(0);

        pelementarytypenameNode1 = new AStringElementaryTypeName(tstring1typenameNode2);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AWstringElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        TWstringTypeName twstringtypenameNode2;
        twstringtypenameNode2 = (TWstringTypeName)nodeArrayList1.get(0);

        pelementarytypenameNode1 = new AWstringElementaryTypeName(twstringtypenameNode2);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ATimeElementaryTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElementaryTypeName pelementarytypenameNode1;
        {
            // Block
        TTimeTypeName ttimetypenameNode2;
        ttimetypenameNode2 = (TTimeTypeName)nodeArrayList1.get(0);

        pelementarytypenameNode1 = new ATimeElementaryTypeName(ttimetypenameNode2);
        }
	nodeList.add(pelementarytypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AIntegerNumericTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNumericTypeName pnumerictypenameNode1;
        {
            // Block
        PIntegerTypeName pintegertypenameNode2;
        pintegertypenameNode2 = (PIntegerTypeName)nodeArrayList1.get(0);

        pnumerictypenameNode1 = new AIntegerNumericTypeName(pintegertypenameNode2);
        }
	nodeList.add(pnumerictypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ARealNumericTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNumericTypeName pnumerictypenameNode1;
        {
            // Block
        TRealTypeName trealtypenameNode2;
        trealtypenameNode2 = (TRealTypeName)nodeArrayList1.get(0);

        pnumerictypenameNode1 = new ARealNumericTypeName(trealtypenameNode2);
        }
	nodeList.add(pnumerictypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ASignedIntegerIntegerTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIntegerTypeName pintegertypenameNode1;
        {
            // Block
        TSignedIntegerTypeName tsignedintegertypenameNode2;
        tsignedintegertypenameNode2 = (TSignedIntegerTypeName)nodeArrayList1.get(0);

        pintegertypenameNode1 = new ASignedIntegerIntegerTypeName(tsignedintegertypenameNode2);
        }
	nodeList.add(pintegertypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AUnsignedIntegerIntegerTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIntegerTypeName pintegertypenameNode1;
        {
            // Block
        TUnsignedIntegerTypeName tunsignedintegertypenameNode2;
        tunsignedintegertypenameNode2 = (TUnsignedIntegerTypeName)nodeArrayList1.get(0);

        pintegertypenameNode1 = new AUnsignedIntegerIntegerTypeName(tunsignedintegertypenameNode2);
        }
	nodeList.add(pintegertypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ANumericConstant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstant pconstantNode1;
        {
            // Block
        PNumericLiteral pnumericliteralNode2;
        pnumericliteralNode2 = (PNumericLiteral)nodeArrayList1.get(0);

        pconstantNode1 = new ANumericConstant(pnumericliteralNode2);
        }
	nodeList.add(pconstantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ACharacterConstant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstant pconstantNode1;
        {
            // Block
        PCharacterString pcharacterstringNode2;
        pcharacterstringNode2 = (PCharacterString)nodeArrayList1.get(0);

        pconstantNode1 = new ACharacterConstant(pcharacterstringNode2);
        }
	nodeList.add(pconstantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ATimeConstant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstant pconstantNode1;
        {
            // Block
        PTimeLiteral ptimeliteralNode2;
        ptimeliteralNode2 = (PTimeLiteral)nodeArrayList1.get(0);

        pconstantNode1 = new ATimeConstant(ptimeliteralNode2);
        }
	nodeList.add(pconstantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce ABitStringConstant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstant pconstantNode1;
        {
            // Block
        PBitStringLiteral pbitstringliteralNode2;
        pbitstringliteralNode2 = (PBitStringLiteral)nodeArrayList1.get(0);

        pconstantNode1 = new ABitStringConstant(pbitstringliteralNode2);
        }
	nodeList.add(pconstantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ABooleanConstant */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstant pconstantNode1;
        {
            // Block
        PBooleanLiteral pbooleanliteralNode2;
        pbooleanliteralNode2 = (PBooleanLiteral)nodeArrayList1.get(0);

        pconstantNode1 = new ABooleanConstant(pbooleanliteralNode2);
        }
	nodeList.add(pconstantNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AIntegerNumericLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNumericLiteral pnumericliteralNode1;
        {
            // Block
        PIntegerLiteral pintegerliteralNode2;
        pintegerliteralNode2 = (PIntegerLiteral)nodeArrayList1.get(0);

        pnumericliteralNode1 = new AIntegerNumericLiteral(pintegerliteralNode2);
        }
	nodeList.add(pnumericliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce ARealNumericLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PNumericLiteral pnumericliteralNode1;
        {
            // Block
        PRealLiteral prealliteralNode2;
        prealliteralNode2 = (PRealLiteral)nodeArrayList1.get(0);

        pnumericliteralNode1 = new ARealNumericLiteral(prealliteralNode2);
        }
	nodeList.add(pnumericliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AIntegerTypeNameHashed */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIntegerTypeNameHashed pintegertypenamehashedNode1;
        {
            // Block
        PIntegerTypeName pintegertypenameNode2;
        THash thashNode3;
        pintegertypenameNode2 = (PIntegerTypeName)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);

        pintegertypenamehashedNode1 = new AIntegerTypeNameHashed(pintegertypenameNode2, thashNode3);
        }
	nodeList.add(pintegertypenamehashedNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AAintegerliteral1IntegerLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIntegerLiteral pintegerliteralNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TSignedIntegerLiteral tsignedintegerliteralNode3;
        tsignedintegerliteralNode3 = (TSignedIntegerLiteral)nodeArrayList1.get(0);

        pintegerliteralNode1 = new AIntegerLiteral(null, tsignedintegerliteralNode3);
        }
	nodeList.add(pintegerliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AAintegerliteral2IntegerLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIntegerLiteral pintegerliteralNode1;
        {
            // Block
        PIntegerTypeNameHashed pintegertypenamehashedNode2;
        TSignedIntegerLiteral tsignedintegerliteralNode3;
        pintegertypenamehashedNode2 = (PIntegerTypeNameHashed)nodeArrayList1.get(0);
        tsignedintegerliteralNode3 = (TSignedIntegerLiteral)nodeArrayList2.get(0);

        pintegerliteralNode1 = new AIntegerLiteral(pintegertypenamehashedNode2, tsignedintegerliteralNode3);
        }
	nodeList.add(pintegerliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ARealTypeNameHashed */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRealTypeNameHashed prealtypenamehashedNode1;
        {
            // Block
        TRealTypeName trealtypenameNode2;
        THash thashNode3;
        trealtypenameNode2 = (TRealTypeName)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);

        prealtypenamehashedNode1 = new ARealTypeNameHashed(trealtypenameNode2, thashNode3);
        }
	nodeList.add(prealtypenamehashedNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AArealliteral1RealLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRealLiteral prealliteralNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TSignedInteger tsignedintegerNode3;
        TDot tdotNode4;
        TInteger tintegerNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        tsignedintegerNode3 = (TSignedInteger)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tintegerNode5 = (TInteger)nodeArrayList3.get(0);

        prealliteralNode1 = new ARealLiteral(null, tsignedintegerNode3, tdotNode4, tintegerNode5, null);
        }
	nodeList.add(prealliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AArealliteral2RealLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRealLiteral prealliteralNode1;
        {
            // Block
        PRealTypeNameHashed prealtypenamehashedNode2;
        TSignedInteger tsignedintegerNode3;
        TDot tdotNode4;
        TInteger tintegerNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        prealtypenamehashedNode2 = (PRealTypeNameHashed)nodeArrayList1.get(0);
        tsignedintegerNode3 = (TSignedInteger)nodeArrayList2.get(0);
        tdotNode4 = (TDot)nodeArrayList3.get(0);
        tintegerNode5 = (TInteger)nodeArrayList4.get(0);

        prealliteralNode1 = new ARealLiteral(prealtypenamehashedNode2, tsignedintegerNode3, tdotNode4, tintegerNode5, null);
        }
	nodeList.add(prealliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AArealliteral3RealLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRealLiteral prealliteralNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TSignedInteger tsignedintegerNode3;
        TDot tdotNode4;
        TInteger tintegerNode5;
        TExponent texponentNode6;
        tsignedintegerNode3 = (TSignedInteger)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tintegerNode5 = (TInteger)nodeArrayList3.get(0);
        texponentNode6 = (TExponent)nodeArrayList4.get(0);

        prealliteralNode1 = new ARealLiteral(null, tsignedintegerNode3, tdotNode4, tintegerNode5, texponentNode6);
        }
	nodeList.add(prealliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce AArealliteral4RealLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRealLiteral prealliteralNode1;
        {
            // Block
        PRealTypeNameHashed prealtypenamehashedNode2;
        TSignedInteger tsignedintegerNode3;
        TDot tdotNode4;
        TInteger tintegerNode5;
        TExponent texponentNode6;
        prealtypenamehashedNode2 = (PRealTypeNameHashed)nodeArrayList1.get(0);
        tsignedintegerNode3 = (TSignedInteger)nodeArrayList2.get(0);
        tdotNode4 = (TDot)nodeArrayList3.get(0);
        tintegerNode5 = (TInteger)nodeArrayList4.get(0);
        texponentNode6 = (TExponent)nodeArrayList5.get(0);

        prealliteralNode1 = new ARealLiteral(prealtypenamehashedNode2, tsignedintegerNode3, tdotNode4, tintegerNode5, texponentNode6);
        }
	nodeList.add(prealliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ABitStringLiteralTypeNameHashed */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBitStringLiteralTypeNameHashed pbitstringliteraltypenamehashedNode1;
        {
            // Block
        TBitStringLiteralTypeName tbitstringliteraltypenameNode2;
        THash thashNode3;
        tbitstringliteraltypenameNode2 = (TBitStringLiteralTypeName)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);

        pbitstringliteraltypenamehashedNode1 = new ABitStringLiteralTypeNameHashed(tbitstringliteraltypenameNode2, thashNode3);
        }
	nodeList.add(pbitstringliteraltypenamehashedNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAbitstringliteral1BitStringLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBitStringLiteral pbitstringliteralNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TUnsignedIntegerLiteral tunsignedintegerliteralNode3;
        tunsignedintegerliteralNode3 = (TUnsignedIntegerLiteral)nodeArrayList1.get(0);

        pbitstringliteralNode1 = new ABitStringLiteral(null, tunsignedintegerliteralNode3);
        }
	nodeList.add(pbitstringliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAbitstringliteral2BitStringLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBitStringLiteral pbitstringliteralNode1;
        {
            // Block
        PBitStringLiteralTypeNameHashed pbitstringliteraltypenamehashedNode2;
        TUnsignedIntegerLiteral tunsignedintegerliteralNode3;
        pbitstringliteraltypenamehashedNode2 = (PBitStringLiteralTypeNameHashed)nodeArrayList1.get(0);
        tunsignedintegerliteralNode3 = (TUnsignedIntegerLiteral)nodeArrayList2.get(0);

        pbitstringliteralNode1 = new ABitStringLiteral(pbitstringliteraltypenamehashedNode2, tunsignedintegerliteralNode3);
        }
	nodeList.add(pbitstringliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ABoolTypeNameHashed */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBoolTypeNameHashed pbooltypenamehashedNode1;
        {
            // Block
        TBoolTypeName tbooltypenameNode2;
        THash thashNode3;
        tbooltypenameNode2 = (TBoolTypeName)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);

        pbooltypenamehashedNode1 = new ABoolTypeNameHashed(tbooltypenameNode2, thashNode3);
        }
	nodeList.add(pbooltypenamehashedNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AAnumericbooleanliteral1BooleanLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBooleanLiteral pbooleanliteralNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TBit tbitNode3;
        tbitNode3 = (TBit)nodeArrayList1.get(0);

        pbooleanliteralNode1 = new ANumericBooleanLiteral(null, tbitNode3);
        }
	nodeList.add(pbooleanliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAnumericbooleanliteral2BooleanLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBooleanLiteral pbooleanliteralNode1;
        {
            // Block
        PBoolTypeNameHashed pbooltypenamehashedNode2;
        TBit tbitNode3;
        pbooltypenamehashedNode2 = (PBoolTypeNameHashed)nodeArrayList1.get(0);
        tbitNode3 = (TBit)nodeArrayList2.get(0);

        pbooleanliteralNode1 = new ANumericBooleanLiteral(pbooltypenamehashedNode2, tbitNode3);
        }
	nodeList.add(pbooleanliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ALiteralBooleanLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBooleanLiteral pbooleanliteralNode1;
        {
            // Block
        TTrueFalseLiteral ttruefalseliteralNode2;
        ttruefalseliteralNode2 = (TTrueFalseLiteral)nodeArrayList1.get(0);

        pbooleanliteralNode1 = new ALiteralBooleanLiteral(ttruefalseliteralNode2);
        }
	nodeList.add(pbooleanliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ASingleCharacterString */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCharacterString pcharacterstringNode1;
        {
            // Block
        TSingleByteCharacterString tsinglebytecharacterstringNode2;
        tsinglebytecharacterstringNode2 = (TSingleByteCharacterString)nodeArrayList1.get(0);

        pcharacterstringNode1 = new ASingleCharacterString(tsinglebytecharacterstringNode2);
        }
	nodeList.add(pcharacterstringNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ADoubleCharacterString */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCharacterString pcharacterstringNode1;
        {
            // Block
        TDoubleByteCharacterString tdoublebytecharacterstringNode2;
        tdoublebytecharacterstringNode2 = (TDoubleByteCharacterString)nodeArrayList1.get(0);

        pcharacterstringNode1 = new ADoubleCharacterString(tdoublebytecharacterstringNode2);
        }
	nodeList.add(pcharacterstringNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ADurationTimeLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTimeLiteral ptimeliteralNode1;
        {
            // Block
        PDuration pdurationNode2;
        pdurationNode2 = (PDuration)nodeArrayList1.get(0);

        ptimeliteralNode1 = new ADurationTimeLiteral(pdurationNode2);
        }
	nodeList.add(ptimeliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ATimeOfDayTimeLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTimeLiteral ptimeliteralNode1;
        {
            // Block
        PTimeOfDay ptimeofdayNode2;
        ptimeofdayNode2 = (PTimeOfDay)nodeArrayList1.get(0);

        ptimeliteralNode1 = new ATimeOfDayTimeLiteral(ptimeofdayNode2);
        }
	nodeList.add(ptimeliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ADateTimeLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTimeLiteral ptimeliteralNode1;
        {
            // Block
        PDate pdateNode2;
        pdateNode2 = (PDate)nodeArrayList1.get(0);

        ptimeliteralNode1 = new ADateTimeLiteral(pdateNode2);
        }
	nodeList.add(ptimeliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ADateAndTimeTimeLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTimeLiteral ptimeliteralNode1;
        {
            // Block
        PDateAndTime pdateandtimeNode2;
        pdateandtimeNode2 = (PDateAndTime)nodeArrayList1.get(0);

        ptimeliteralNode1 = new ADateAndTimeTimeLiteral(pdateandtimeNode2);
        }
	nodeList.add(ptimeliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AAduration1Duration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDuration pdurationNode1;
        {
            // Block
        TTimeTypeNameFull ttimetypenamefullNode2;
        THash thashNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PInterval pintervalNode5;
        ttimetypenamefullNode2 = (TTimeTypeNameFull)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);
        pintervalNode5 = (PInterval)nodeArrayList3.get(0);

        pdurationNode1 = new ADuration(ttimetypenamefullNode2, thashNode3, null, pintervalNode5);
        }
	nodeList.add(pdurationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AAduration2Duration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDuration pdurationNode1;
        {
            // Block
        TTimeTypeNameFull ttimetypenamefullNode2;
        THash thashNode3;
        TDash tdashNode4;
        PInterval pintervalNode5;
        ttimetypenamefullNode2 = (TTimeTypeNameFull)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);
        tdashNode4 = (TDash)nodeArrayList3.get(0);
        pintervalNode5 = (PInterval)nodeArrayList4.get(0);

        pdurationNode1 = new ADuration(ttimetypenamefullNode2, thashNode3, tdashNode4, pintervalNode5);
        }
	nodeList.add(pdurationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ADaysInterval */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        PDays pdaysNode2;
        pdaysNode2 = (PDays)nodeArrayList1.get(0);

        pintervalNode1 = new ADaysInterval(pdaysNode2);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AHoursInterval */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        PHours phoursNode2;
        phoursNode2 = (PHours)nodeArrayList1.get(0);

        pintervalNode1 = new AHoursInterval(phoursNode2);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AMinutesInterval */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        PMinutes pminutesNode2;
        pminutesNode2 = (PMinutes)nodeArrayList1.get(0);

        pintervalNode1 = new AMinutesInterval(pminutesNode2);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ASecondsInterval */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        PSeconds psecondsNode2;
        psecondsNode2 = (PSeconds)nodeArrayList1.get(0);

        pintervalNode1 = new ASecondsInterval(psecondsNode2);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AMillisecondsInterval */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInterval pintervalNode1;
        {
            // Block
        PMilliseconds pmillisecondsNode2;
        pmillisecondsNode2 = (PMilliseconds)nodeArrayList1.get(0);

        pintervalNode1 = new AMillisecondsInterval(pmillisecondsNode2);
        }
	nodeList.add(pintervalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ADecimal$Afixedpoint11Days */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDays pdaysNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TDayIdentifier tdayidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, null);
        }
        tdayidentifierNode5 = (TDayIdentifier)nodeArrayList2.get(0);

        pdaysNode1 = new ADecimalDays(pfixedpointNode2, tdayidentifierNode5);
        }
	nodeList.add(pdaysNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce ADecimal$Afixedpoint21Days */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDays pdaysNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TDayIdentifier tdayidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        PFixedPointRealPart pfixedpointrealpartNode4;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);
        pfixedpointrealpartNode4 = (PFixedPointRealPart)nodeArrayList2.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, pfixedpointrealpartNode4);
        }
        tdayidentifierNode5 = (TDayIdentifier)nodeArrayList3.get(0);

        pdaysNode1 = new ADecimalDays(pfixedpointNode2, tdayidentifierNode5);
        }
	nodeList.add(pdaysNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AAhourlydays1Days */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDays pdaysNode1;
        {
            // Block
        TInteger tintegerNode2;
        TDayIdentifier tdayidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PHours phoursNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tdayidentifierNode3 = (TDayIdentifier)nodeArrayList2.get(0);
        phoursNode5 = (PHours)nodeArrayList3.get(0);

        pdaysNode1 = new AHourlyDays(tintegerNode2, tdayidentifierNode3, null, phoursNode5);
        }
	nodeList.add(pdaysNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AAhourlydays2Days */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDays pdaysNode1;
        {
            // Block
        TInteger tintegerNode2;
        TDayIdentifier tdayidentifierNode3;
        TUnderscore tunderscoreNode4;
        PHours phoursNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tdayidentifierNode3 = (TDayIdentifier)nodeArrayList2.get(0);
        tunderscoreNode4 = (TUnderscore)nodeArrayList3.get(0);
        phoursNode5 = (PHours)nodeArrayList4.get(0);

        pdaysNode1 = new AHourlyDays(tintegerNode2, tdayidentifierNode3, tunderscoreNode4, phoursNode5);
        }
	nodeList.add(pdaysNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AFixedPointRealPart */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFixedPointRealPart pfixedpointrealpartNode1;
        {
            // Block
        TDot tdotNode2;
        TInteger tintegerNode3;
        tdotNode2 = (TDot)nodeArrayList1.get(0);
        tintegerNode3 = (TInteger)nodeArrayList2.get(0);

        pfixedpointrealpartNode1 = new AFixedPointRealPart(tdotNode2, tintegerNode3);
        }
	nodeList.add(pfixedpointrealpartNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ADecimal$Afixedpoint11Hours */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PHours phoursNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        THourIdentifier thouridentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, null);
        }
        thouridentifierNode5 = (THourIdentifier)nodeArrayList2.get(0);

        phoursNode1 = new ADecimalHours(pfixedpointNode2, thouridentifierNode5);
        }
	nodeList.add(phoursNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ADecimal$Afixedpoint21Hours */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PHours phoursNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        THourIdentifier thouridentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        PFixedPointRealPart pfixedpointrealpartNode4;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);
        pfixedpointrealpartNode4 = (PFixedPointRealPart)nodeArrayList2.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, pfixedpointrealpartNode4);
        }
        thouridentifierNode5 = (THourIdentifier)nodeArrayList3.get(0);

        phoursNode1 = new ADecimalHours(pfixedpointNode2, thouridentifierNode5);
        }
	nodeList.add(phoursNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AAminutelyhours1Hours */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PHours phoursNode1;
        {
            // Block
        TInteger tintegerNode2;
        THourIdentifier thouridentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PMinutes pminutesNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        thouridentifierNode3 = (THourIdentifier)nodeArrayList2.get(0);
        pminutesNode5 = (PMinutes)nodeArrayList3.get(0);

        phoursNode1 = new AMinutelyHours(tintegerNode2, thouridentifierNode3, null, pminutesNode5);
        }
	nodeList.add(phoursNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AAminutelyhours2Hours */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PHours phoursNode1;
        {
            // Block
        TInteger tintegerNode2;
        THourIdentifier thouridentifierNode3;
        TUnderscore tunderscoreNode4;
        PMinutes pminutesNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        thouridentifierNode3 = (THourIdentifier)nodeArrayList2.get(0);
        tunderscoreNode4 = (TUnderscore)nodeArrayList3.get(0);
        pminutesNode5 = (PMinutes)nodeArrayList4.get(0);

        phoursNode1 = new AMinutelyHours(tintegerNode2, thouridentifierNode3, tunderscoreNode4, pminutesNode5);
        }
	nodeList.add(phoursNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ADecimal$Afixedpoint11Minutes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMinutes pminutesNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TMinuteIdentifier tminuteidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, null);
        }
        tminuteidentifierNode5 = (TMinuteIdentifier)nodeArrayList2.get(0);

        pminutesNode1 = new ADecimalMinutes(pfixedpointNode2, tminuteidentifierNode5);
        }
	nodeList.add(pminutesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ADecimal$Afixedpoint21Minutes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMinutes pminutesNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TMinuteIdentifier tminuteidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        PFixedPointRealPart pfixedpointrealpartNode4;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);
        pfixedpointrealpartNode4 = (PFixedPointRealPart)nodeArrayList2.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, pfixedpointrealpartNode4);
        }
        tminuteidentifierNode5 = (TMinuteIdentifier)nodeArrayList3.get(0);

        pminutesNode1 = new ADecimalMinutes(pfixedpointNode2, tminuteidentifierNode5);
        }
	nodeList.add(pminutesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AAsecondlyminutes1Minutes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMinutes pminutesNode1;
        {
            // Block
        TInteger tintegerNode2;
        TMinuteIdentifier tminuteidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PSeconds psecondsNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tminuteidentifierNode3 = (TMinuteIdentifier)nodeArrayList2.get(0);
        psecondsNode5 = (PSeconds)nodeArrayList3.get(0);

        pminutesNode1 = new ASecondlyMinutes(tintegerNode2, tminuteidentifierNode3, null, psecondsNode5);
        }
	nodeList.add(pminutesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AAsecondlyminutes2Minutes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMinutes pminutesNode1;
        {
            // Block
        TInteger tintegerNode2;
        TMinuteIdentifier tminuteidentifierNode3;
        TUnderscore tunderscoreNode4;
        PSeconds psecondsNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tminuteidentifierNode3 = (TMinuteIdentifier)nodeArrayList2.get(0);
        tunderscoreNode4 = (TUnderscore)nodeArrayList3.get(0);
        psecondsNode5 = (PSeconds)nodeArrayList4.get(0);

        pminutesNode1 = new ASecondlyMinutes(tintegerNode2, tminuteidentifierNode3, tunderscoreNode4, psecondsNode5);
        }
	nodeList.add(pminutesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ADecimal$Afixedpoint11Seconds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeconds psecondsNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TSecondIdentifier tsecondidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, null);
        }
        tsecondidentifierNode5 = (TSecondIdentifier)nodeArrayList2.get(0);

        psecondsNode1 = new ADecimalSeconds(pfixedpointNode2, tsecondidentifierNode5);
        }
	nodeList.add(psecondsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ADecimal$Afixedpoint21Seconds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeconds psecondsNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TSecondIdentifier tsecondidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        PFixedPointRealPart pfixedpointrealpartNode4;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);
        pfixedpointrealpartNode4 = (PFixedPointRealPart)nodeArrayList2.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, pfixedpointrealpartNode4);
        }
        tsecondidentifierNode5 = (TSecondIdentifier)nodeArrayList3.get(0);

        psecondsNode1 = new ADecimalSeconds(pfixedpointNode2, tsecondidentifierNode5);
        }
	nodeList.add(psecondsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AAmillisecondlyseconds1Seconds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeconds psecondsNode1;
        {
            // Block
        TInteger tintegerNode2;
        TSecondIdentifier tsecondidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PMilliseconds pmillisecondsNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tsecondidentifierNode3 = (TSecondIdentifier)nodeArrayList2.get(0);
        pmillisecondsNode5 = (PMilliseconds)nodeArrayList3.get(0);

        psecondsNode1 = new AMillisecondlySeconds(tintegerNode2, tsecondidentifierNode3, null, pmillisecondsNode5);
        }
	nodeList.add(psecondsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce AAmillisecondlyseconds2Seconds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeconds psecondsNode1;
        {
            // Block
        TInteger tintegerNode2;
        TSecondIdentifier tsecondidentifierNode3;
        TUnderscore tunderscoreNode4;
        PMilliseconds pmillisecondsNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tsecondidentifierNode3 = (TSecondIdentifier)nodeArrayList2.get(0);
        tunderscoreNode4 = (TUnderscore)nodeArrayList3.get(0);
        pmillisecondsNode5 = (PMilliseconds)nodeArrayList4.get(0);

        psecondsNode1 = new AMillisecondlySeconds(tintegerNode2, tsecondidentifierNode3, tunderscoreNode4, pmillisecondsNode5);
        }
	nodeList.add(psecondsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AAfixedpoint11Milliseconds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMilliseconds pmillisecondsNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TMillisecondIdentifier tmillisecondidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, null);
        }
        tmillisecondidentifierNode5 = (TMillisecondIdentifier)nodeArrayList2.get(0);

        pmillisecondsNode1 = new AMilliseconds(pfixedpointNode2, tmillisecondidentifierNode5);
        }
	nodeList.add(pmillisecondsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AAfixedpoint21Milliseconds */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMilliseconds pmillisecondsNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        TMillisecondIdentifier tmillisecondidentifierNode5;
        {
            // Block
        TInteger tintegerNode3;
        PFixedPointRealPart pfixedpointrealpartNode4;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);
        pfixedpointrealpartNode4 = (PFixedPointRealPart)nodeArrayList2.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, pfixedpointrealpartNode4);
        }
        tmillisecondidentifierNode5 = (TMillisecondIdentifier)nodeArrayList3.get(0);

        pmillisecondsNode1 = new AMilliseconds(pfixedpointNode2, tmillisecondidentifierNode5);
        }
	nodeList.add(pmillisecondsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce ATimeOfDay */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTimeOfDay ptimeofdayNode1;
        {
            // Block
        TTimeOfDayTypeNameFull ttimeofdaytypenamefullNode2;
        THash thashNode3;
        PDaytime pdaytimeNode4;
        ttimeofdaytypenamefullNode2 = (TTimeOfDayTypeNameFull)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);
        pdaytimeNode4 = (PDaytime)nodeArrayList3.get(0);

        ptimeofdayNode1 = new ATimeOfDay(ttimeofdaytypenamefullNode2, thashNode3, pdaytimeNode4);
        }
	nodeList.add(ptimeofdayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce ADaytime */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDaytime pdaytimeNode1;
        {
            // Block
        PDayHour pdayhourNode2;
        TColon tcolonNode3;
        PDayMinute pdayminuteNode4;
        TColon tcolonNode5;
        PDaySecond pdaysecondNode6;
        pdayhourNode2 = (PDayHour)nodeArrayList1.get(0);
        tcolonNode3 = (TColon)nodeArrayList2.get(0);
        pdayminuteNode4 = (PDayMinute)nodeArrayList3.get(0);
        tcolonNode5 = (TColon)nodeArrayList4.get(0);
        pdaysecondNode6 = (PDaySecond)nodeArrayList5.get(0);

        pdaytimeNode1 = new ADaytime(pdayhourNode2, tcolonNode3, pdayminuteNode4, tcolonNode5, pdaysecondNode6);
        }
	nodeList.add(pdaytimeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce ADayHour */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDayHour pdayhourNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pdayhourNode1 = new ADayHour(tintegerNode2);
        }
	nodeList.add(pdayhourNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ADayMinute */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDayMinute pdayminuteNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pdayminuteNode1 = new ADayMinute(tintegerNode2);
        }
	nodeList.add(pdayminuteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AAfixedpoint11DaySecond */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDaySecond pdaysecondNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        {
            // Block
        TInteger tintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, null);
        }

        pdaysecondNode1 = new ADaySecond(pfixedpointNode2);
        }
	nodeList.add(pdaysecondNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AAfixedpoint21DaySecond */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDaySecond pdaysecondNode1;
        {
            // Block
        PFixedPoint pfixedpointNode2;
        {
            // Block
        TInteger tintegerNode3;
        PFixedPointRealPart pfixedpointrealpartNode4;
        tintegerNode3 = (TInteger)nodeArrayList1.get(0);
        pfixedpointrealpartNode4 = (PFixedPointRealPart)nodeArrayList2.get(0);

        pfixedpointNode2 = new AFixedPoint(tintegerNode3, pfixedpointrealpartNode4);
        }

        pdaysecondNode1 = new ADaySecond(pfixedpointNode2);
        }
	nodeList.add(pdaysecondNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce ADate */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDate pdateNode1;
        {
            // Block
        TDateTypeNameFull tdatetypenamefullNode2;
        THash thashNode3;
        PDateLiteral pdateliteralNode4;
        tdatetypenamefullNode2 = (TDateTypeNameFull)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);
        pdateliteralNode4 = (PDateLiteral)nodeArrayList3.get(0);

        pdateNode1 = new ADate(tdatetypenamefullNode2, thashNode3, pdateliteralNode4);
        }
	nodeList.add(pdateNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce ADateLiteral */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDateLiteral pdateliteralNode1;
        {
            // Block
        PYear pyearNode2;
        TDash tdashNode3;
        PMonth pmonthNode4;
        TDash tdashNode5;
        PDay pdayNode6;
        pyearNode2 = (PYear)nodeArrayList1.get(0);
        tdashNode3 = (TDash)nodeArrayList2.get(0);
        pmonthNode4 = (PMonth)nodeArrayList3.get(0);
        tdashNode5 = (TDash)nodeArrayList4.get(0);
        pdayNode6 = (PDay)nodeArrayList5.get(0);

        pdateliteralNode1 = new ADateLiteral(pyearNode2, tdashNode3, pmonthNode4, tdashNode5, pdayNode6);
        }
	nodeList.add(pdateliteralNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AYear */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PYear pyearNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pyearNode1 = new AYear(tintegerNode2);
        }
	nodeList.add(pyearNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AMonth */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMonth pmonthNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pmonthNode1 = new AMonth(tintegerNode2);
        }
	nodeList.add(pmonthNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce ADay */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDay pdayNode1;
        {
            // Block
        TInteger tintegerNode2;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pdayNode1 = new ADay(tintegerNode2);
        }
	nodeList.add(pdayNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce ADateAndTime */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDateAndTime pdateandtimeNode1;
        {
            // Block
        TDateAndTimeTypeNameFull tdateandtimetypenamefullNode2;
        THash thashNode3;
        PDateLiteral pdateliteralNode4;
        TDash tdashNode5;
        PDaytime pdaytimeNode6;
        tdateandtimetypenamefullNode2 = (TDateAndTimeTypeNameFull)nodeArrayList1.get(0);
        thashNode3 = (THash)nodeArrayList2.get(0);
        pdateliteralNode4 = (PDateLiteral)nodeArrayList3.get(0);
        tdashNode5 = (TDash)nodeArrayList4.get(0);
        pdaytimeNode6 = (PDaytime)nodeArrayList5.get(0);

        pdateandtimeNode1 = new ADateAndTime(tdateandtimetypenamefullNode2, thashNode3, pdateliteralNode4, tdashNode5, pdaytimeNode6);
        }
	nodeList.add(pdateandtimeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AArrayStructStringSimpleDerivedTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDerivedTypeName pderivedtypenameNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pderivedtypenameNode1 = new AArrayStructStringSimpleDerivedTypeName(tidentifierNode2);
        }
	nodeList.add(pderivedtypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AStructureElementName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementName pstructureelementnameNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pstructureelementnameNode1 = new AStructureElementName(tidentifierNode2);
        }
	nodeList.add(pstructureelementnameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ADataTypeDeclarationElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDataTypeDeclarationElement pdatatypedeclarationelementNode1;
        {
            // Block
        PTypeDeclaration ptypedeclarationNode2;
        TSemicolon tsemicolonNode3;
        ptypedeclarationNode2 = (PTypeDeclaration)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        pdatatypedeclarationelementNode1 = new ADataTypeDeclarationElement(ptypedeclarationNode2, tsemicolonNode3);
        }
	nodeList.add(pdatatypedeclarationelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ADataTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDataTypeDeclaration pdatatypedeclarationNode1;
        {
            // Block
        TTypeToken ttypetokenNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TEndTypeToken tendtypetokenNode5;
        ttypetokenNode2 = (TTypeToken)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tendtypetokenNode5 = (TEndTypeToken)nodeArrayList3.get(0);

        pdatatypedeclarationNode1 = new ADataTypeDeclaration(ttypetokenNode2, listNode4, tendtypetokenNode5);
        }
	nodeList.add(pdatatypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ASingleTypeTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTypeDeclaration ptypedeclarationNode1;
        {
            // Block
        PSingleElementTypeDeclaration psingleelementtypedeclarationNode2;
        psingleelementtypedeclarationNode2 = (PSingleElementTypeDeclaration)nodeArrayList1.get(0);

        ptypedeclarationNode1 = new ASingleTypeTypeDeclaration(psingleelementtypedeclarationNode2);
        }
	nodeList.add(ptypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce AArrayTypeTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTypeDeclaration ptypedeclarationNode1;
        {
            // Block
        PArrayTypeDeclaration parraytypedeclarationNode2;
        parraytypedeclarationNode2 = (PArrayTypeDeclaration)nodeArrayList1.get(0);

        ptypedeclarationNode1 = new AArrayTypeTypeDeclaration(parraytypedeclarationNode2);
        }
	nodeList.add(ptypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce AStructTypeTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTypeDeclaration ptypedeclarationNode1;
        {
            // Block
        PStructureTypeDeclaration pstructuretypedeclarationNode2;
        pstructuretypedeclarationNode2 = (PStructureTypeDeclaration)nodeArrayList1.get(0);

        ptypedeclarationNode1 = new AStructTypeTypeDeclaration(pstructuretypedeclarationNode2);
        }
	nodeList.add(ptypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce AStringTypeTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTypeDeclaration ptypedeclarationNode1;
        {
            // Block
        PStringTypeDeclaration pstringtypedeclarationNode2;
        pstringtypedeclarationNode2 = (PStringTypeDeclaration)nodeArrayList1.get(0);

        ptypedeclarationNode1 = new AStringTypeTypeDeclaration(pstringtypedeclarationNode2);
        }
	nodeList.add(ptypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce A1ArrayTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayTypeDeclaration parraytypedeclarationNode1;
        {
            // Block
        PArrayTypeName parraytypenameNode2;
        TColon tcolonNode4;
        PArraySpecInit parrayspecinitNode5;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        parraytypenameNode2 = new AArrayTypeName(tidentifierNode3);
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        parrayspecinitNode5 = (PArraySpecInit)nodeArrayList3.get(0);

        parraytypedeclarationNode1 = new AArrayTypeDeclaration(parraytypenameNode2, tcolonNode4, parrayspecinitNode5);
        }
	nodeList.add(parraytypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ASingleElementTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSingleElementTypeDeclaration psingleelementtypedeclarationNode1;
        {
            // Block
        PSimpleTypeDeclaration psimpletypedeclarationNode2;
        psimpletypedeclarationNode2 = (PSimpleTypeDeclaration)nodeArrayList1.get(0);

        psingleelementtypedeclarationNode1 = new ASingleElementTypeDeclaration(psimpletypedeclarationNode2);
        }
	nodeList.add(psingleelementtypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new95() /* reduce A1SimpleTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimpleTypeDeclaration psimpletypedeclarationNode1;
        {
            // Block
        PSimpleTypeName psimpletypenameNode2;
        TColon tcolonNode4;
        PSimpleSpecInit psimplespecinitNode5;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        psimpletypenameNode2 = new ASimpleTypeName(tidentifierNode3);
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        psimplespecinitNode5 = (PSimpleSpecInit)nodeArrayList3.get(0);

        psimpletypedeclarationNode1 = new ASimpleTypeDeclaration(psimpletypenameNode2, tcolonNode4, psimplespecinitNode5);
        }
	nodeList.add(psimpletypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new96() /* reduce ASimpleSpecInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimpleSpecInitialization psimplespecinitializationNode1;
        {
            // Block
        TColonEq tcoloneqNode2;
        PConstant pconstantNode3;
        tcoloneqNode2 = (TColonEq)nodeArrayList1.get(0);
        pconstantNode3 = (PConstant)nodeArrayList2.get(0);

        psimplespecinitializationNode1 = new ASimpleSpecInitialization(tcoloneqNode2, pconstantNode3);
        }
	nodeList.add(psimplespecinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new97() /* reduce AAsimplespecinit1SimpleSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimpleSpecInit psimplespecinitNode1;
        {
            // Block
        PSimpleSpecification psimplespecificationNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        psimplespecificationNode2 = (PSimpleSpecification)nodeArrayList1.get(0);

        psimplespecinitNode1 = new ASimpleSpecInit(psimplespecificationNode2, null);
        }
	nodeList.add(psimplespecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new98() /* reduce AAsimplespecinit2SimpleSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimpleSpecInit psimplespecinitNode1;
        {
            // Block
        PSimpleSpecification psimplespecificationNode2;
        PSimpleSpecInitialization psimplespecinitializationNode3;
        psimplespecificationNode2 = (PSimpleSpecification)nodeArrayList1.get(0);
        psimplespecinitializationNode3 = (PSimpleSpecInitialization)nodeArrayList2.get(0);

        psimplespecinitNode1 = new ASimpleSpecInit(psimplespecificationNode2, psimplespecinitializationNode3);
        }
	nodeList.add(psimplespecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new99() /* reduce AElementarySimpleSpecification */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimpleSpecification psimplespecificationNode1;
        {
            // Block
        PElementaryTypeName pelementarytypenameNode2;
        pelementarytypenameNode2 = (PElementaryTypeName)nodeArrayList1.get(0);

        psimplespecificationNode1 = new AElementarySimpleSpecification(pelementarytypenameNode2);
        }
	nodeList.add(psimplespecificationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new100() /* reduce ASubrange */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubrange psubrangeNode1;
        {
            // Block
        TSignedInteger tsignedintegerNode2;
        TDotDot tdotdotNode3;
        TSignedInteger tsignedintegerNode4;
        tsignedintegerNode2 = (TSignedInteger)nodeArrayList1.get(0);
        tdotdotNode3 = (TDotDot)nodeArrayList2.get(0);
        tsignedintegerNode4 = (TSignedInteger)nodeArrayList3.get(0);

        psubrangeNode1 = new ASubrange(tsignedintegerNode2, tdotdotNode3, tsignedintegerNode4);
        }
	nodeList.add(psubrangeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new101() /* reduce AAsubrangelist1SubrangeList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubrangeList psubrangelistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PSubrange psubrangeNode3;
        {
            // Block
        }
        psubrangeNode3 = (PSubrange)nodeArrayList1.get(0);

        psubrangelistNode1 = new ASubrangeList(listNode2, psubrangeNode3);
        }
	nodeList.add(psubrangelistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new102() /* reduce AAsubrangelist2SubrangeList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubrangeList psubrangelistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PSubrange psubrangeNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        psubrangeNode4 = (PSubrange)nodeArrayList2.get(0);

        psubrangelistNode1 = new ASubrangeList(listNode3, psubrangeNode4);
        }
	nodeList.add(psubrangelistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new103() /* reduce ASubrangeListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubrangeListHead psubrangelistheadNode1;
        {
            // Block
        PSubrange psubrangeNode2;
        TComma tcommaNode3;
        psubrangeNode2 = (PSubrange)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        psubrangelistheadNode1 = new ASubrangeListHead(psubrangeNode2, tcommaNode3);
        }
	nodeList.add(psubrangelistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new104() /* reduce AArraySpecInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArraySpecInitialization parrayspecinitializationNode1;
        {
            // Block
        TColonEq tcoloneqNode2;
        PArrayInitialization parrayinitializationNode3;
        tcoloneqNode2 = (TColonEq)nodeArrayList1.get(0);
        parrayinitializationNode3 = (PArrayInitialization)nodeArrayList2.get(0);

        parrayspecinitializationNode1 = new AArraySpecInitialization(tcoloneqNode2, parrayinitializationNode3);
        }
	nodeList.add(parrayspecinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new105() /* reduce AAarrayspecinit1ArraySpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArraySpecInit parrayspecinitNode1;
        {
            // Block
        PArraySpecification parrayspecificationNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        parrayspecificationNode2 = (PArraySpecification)nodeArrayList1.get(0);

        parrayspecinitNode1 = new AArraySpecInit(parrayspecificationNode2, null);
        }
	nodeList.add(parrayspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new106() /* reduce AAarrayspecinit2ArraySpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArraySpecInit parrayspecinitNode1;
        {
            // Block
        PArraySpecification parrayspecificationNode2;
        PArraySpecInitialization parrayspecinitializationNode3;
        parrayspecificationNode2 = (PArraySpecification)nodeArrayList1.get(0);
        parrayspecinitializationNode3 = (PArraySpecInitialization)nodeArrayList2.get(0);

        parrayspecinitNode1 = new AArraySpecInit(parrayspecificationNode2, parrayspecinitializationNode3);
        }
	nodeList.add(parrayspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new107() /* reduce AInlineArraySpecification */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArraySpecification parrayspecificationNode1;
        {
            // Block
        TArrayToken tarraytokenNode2;
        TLbrack tlbrackNode3;
        PSubrangeList psubrangelistNode4;
        TRbrack trbrackNode5;
        TOfToken toftokenNode6;
        PNonGenericTypeName pnongenerictypenameNode7;
        tarraytokenNode2 = (TArrayToken)nodeArrayList1.get(0);
        tlbrackNode3 = (TLbrack)nodeArrayList2.get(0);
        psubrangelistNode4 = (PSubrangeList)nodeArrayList3.get(0);
        trbrackNode5 = (TRbrack)nodeArrayList4.get(0);
        toftokenNode6 = (TOfToken)nodeArrayList5.get(0);
        pnongenerictypenameNode7 = (PNonGenericTypeName)nodeArrayList6.get(0);

        parrayspecificationNode1 = new AInlineArraySpecification(tarraytokenNode2, tlbrackNode3, psubrangelistNode4, trbrackNode5, toftokenNode6, pnongenerictypenameNode7);
        }
	nodeList.add(parrayspecificationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new108() /* reduce AArrayInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialization parrayinitializationNode1;
        {
            // Block
        TLbrack tlbrackNode2;
        PArrayInitialElementsList parrayinitialelementslistNode3;
        TRbrack trbrackNode4;
        tlbrackNode2 = (TLbrack)nodeArrayList1.get(0);
        parrayinitialelementslistNode3 = (PArrayInitialElementsList)nodeArrayList2.get(0);
        trbrackNode4 = (TRbrack)nodeArrayList3.get(0);

        parrayinitializationNode1 = new AArrayInitialization(tlbrackNode2, parrayinitialelementslistNode3, trbrackNode4);
        }
	nodeList.add(parrayinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new109() /* reduce AAarrayinitialelementslist1ArrayInitialElementsList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialElementsList parrayinitialelementslistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PArrayInitialElements parrayinitialelementsNode3;
        {
            // Block
        }
        parrayinitialelementsNode3 = (PArrayInitialElements)nodeArrayList1.get(0);

        parrayinitialelementslistNode1 = new AArrayInitialElementsList(listNode2, parrayinitialelementsNode3);
        }
	nodeList.add(parrayinitialelementslistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new110() /* reduce AAarrayinitialelementslist2ArrayInitialElementsList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialElementsList parrayinitialelementslistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PArrayInitialElements parrayinitialelementsNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        parrayinitialelementsNode4 = (PArrayInitialElements)nodeArrayList2.get(0);

        parrayinitialelementslistNode1 = new AArrayInitialElementsList(listNode3, parrayinitialelementsNode4);
        }
	nodeList.add(parrayinitialelementslistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new111() /* reduce AArrayInitialElementsListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialElementsListHead parrayinitialelementslistheadNode1;
        {
            // Block
        PArrayInitialElements parrayinitialelementsNode2;
        TComma tcommaNode3;
        parrayinitialelementsNode2 = (PArrayInitialElements)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        parrayinitialelementslistheadNode1 = new AArrayInitialElementsListHead(parrayinitialelementsNode2, tcommaNode3);
        }
	nodeList.add(parrayinitialelementslistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new112() /* reduce ASingleArrayInitialElements */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialElements parrayinitialelementsNode1;
        {
            // Block
        PInitialElement pinitialelementNode2;
        pinitialelementNode2 = (PInitialElement)nodeArrayList1.get(0);

        parrayinitialelementsNode1 = new ASingleArrayInitialElements(pinitialelementNode2);
        }
	nodeList.add(parrayinitialelementsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new113() /* reduce AArepeatarrayinitialelements1ArrayInitialElements */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialElements parrayinitialelementsNode1;
        {
            // Block
        TInteger tintegerNode2;
        TLparen tlparenNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TRparen trparenNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        trparenNode5 = (TRparen)nodeArrayList3.get(0);

        parrayinitialelementsNode1 = new ARepeatArrayInitialElements(tintegerNode2, tlparenNode3, null, trparenNode5);
        }
	nodeList.add(parrayinitialelementsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new114() /* reduce AArepeatarrayinitialelements2ArrayInitialElements */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayInitialElements parrayinitialelementsNode1;
        {
            // Block
        TInteger tintegerNode2;
        TLparen tlparenNode3;
        PInitialElement pinitialelementNode4;
        TRparen trparenNode5;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        pinitialelementNode4 = (PInitialElement)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);

        parrayinitialelementsNode1 = new ARepeatArrayInitialElements(tintegerNode2, tlparenNode3, pinitialelementNode4, trparenNode5);
        }
	nodeList.add(parrayinitialelementsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new115() /* reduce AConstantInitialElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInitialElement pinitialelementNode1;
        {
            // Block
        PConstant pconstantNode2;
        pconstantNode2 = (PConstant)nodeArrayList1.get(0);

        pinitialelementNode1 = new AConstantInitialElement(pconstantNode2);
        }
	nodeList.add(pinitialelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new116() /* reduce AStructInitialElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInitialElement pinitialelementNode1;
        {
            // Block
        PStructureInitialization pstructureinitializationNode2;
        pstructureinitializationNode2 = (PStructureInitialization)nodeArrayList1.get(0);

        pinitialelementNode1 = new AStructInitialElement(pstructureinitializationNode2);
        }
	nodeList.add(pinitialelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new117() /* reduce AArrayInitialElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInitialElement pinitialelementNode1;
        {
            // Block
        PArrayInitialization parrayinitializationNode2;
        parrayinitializationNode2 = (PArrayInitialization)nodeArrayList1.get(0);

        pinitialelementNode1 = new AArrayInitialElement(parrayinitializationNode2);
        }
	nodeList.add(pinitialelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new118() /* reduce A1StructureTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureTypeDeclaration pstructuretypedeclarationNode1;
        {
            // Block
        PStructureTypeName pstructuretypenameNode2;
        TColon tcolonNode4;
        PStructureSpecification pstructurespecificationNode5;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pstructuretypenameNode2 = new AStructureTypeName(tidentifierNode3);
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        pstructurespecificationNode5 = (PStructureSpecification)nodeArrayList3.get(0);

        pstructuretypedeclarationNode1 = new AStructureTypeDeclaration(pstructuretypenameNode2, tcolonNode4, pstructurespecificationNode5);
        }
	nodeList.add(pstructuretypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new119() /* reduce AStructureDeclarationStructureSpecification */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureSpecification pstructurespecificationNode1;
        {
            // Block
        PStructureDeclaration pstructuredeclarationNode2;
        pstructuredeclarationNode2 = (PStructureDeclaration)nodeArrayList1.get(0);

        pstructurespecificationNode1 = new AStructureDeclarationStructureSpecification(pstructuredeclarationNode2);
        }
	nodeList.add(pstructurespecificationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new120() /* reduce AInitializedStructureSpecification */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureSpecification pstructurespecificationNode1;
        {
            // Block
        PInitializedStructure pinitializedstructureNode2;
        pinitializedstructureNode2 = (PInitializedStructure)nodeArrayList1.get(0);

        pstructurespecificationNode1 = new AInitializedStructureSpecification(pinitializedstructureNode2);
        }
	nodeList.add(pstructurespecificationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new121() /* reduce AInitializedStructureInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInitializedStructureInitialization pinitializedstructureinitializationNode1;
        {
            // Block
        TColonEq tcoloneqNode2;
        PStructureInitialization pstructureinitializationNode3;
        tcoloneqNode2 = (TColonEq)nodeArrayList1.get(0);
        pstructureinitializationNode3 = (PStructureInitialization)nodeArrayList2.get(0);

        pinitializedstructureinitializationNode1 = new AInitializedStructureInitialization(tcoloneqNode2, pstructureinitializationNode3);
        }
	nodeList.add(pinitializedstructureinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new122() /* reduce AAinitializedstructure1$1InitializedStructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInitializedStructure pinitializedstructureNode1;
        {
            // Block
        PStructureTypeName pstructuretypenameNode2;
        @SuppressWarnings("unused") Object nullNode4 = null;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pstructuretypenameNode2 = new AStructureTypeName(tidentifierNode3);
        }

        pinitializedstructureNode1 = new AInitializedStructure(pstructuretypenameNode2, null);
        }
	nodeList.add(pinitializedstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new123() /* reduce AAinitializedstructure2$1InitializedStructure */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInitializedStructure pinitializedstructureNode1;
        {
            // Block
        PStructureTypeName pstructuretypenameNode2;
        PInitializedStructureInitialization pinitializedstructureinitializationNode4;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pstructuretypenameNode2 = new AStructureTypeName(tidentifierNode3);
        }
        pinitializedstructureinitializationNode4 = (PInitializedStructureInitialization)nodeArrayList2.get(0);

        pinitializedstructureNode1 = new AInitializedStructure(pstructuretypenameNode2, pinitializedstructureinitializationNode4);
        }
	nodeList.add(pinitializedstructureNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new124() /* reduce AStructureDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureDeclaration pstructuredeclarationNode1;
        {
            // Block
        TStructToken tstructtokenNode2;
        PStructureElementDeclarationList pstructureelementdeclarationlistNode3;
        TEndStructToken tendstructtokenNode4;
        tstructtokenNode2 = (TStructToken)nodeArrayList1.get(0);
        pstructureelementdeclarationlistNode3 = (PStructureElementDeclarationList)nodeArrayList2.get(0);
        tendstructtokenNode4 = (TEndStructToken)nodeArrayList3.get(0);

        pstructuredeclarationNode1 = new AStructureDeclaration(tstructtokenNode2, pstructureelementdeclarationlistNode3, tendstructtokenNode4);
        }
	nodeList.add(pstructuredeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new125() /* reduce AAstructureelementdeclarationlist1StructureElementDeclarationList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementDeclarationList pstructureelementdeclarationlistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PStructureElementDeclaration pstructureelementdeclarationNode3;
        {
            // Block
        }
        pstructureelementdeclarationNode3 = (PStructureElementDeclaration)nodeArrayList1.get(0);

        pstructureelementdeclarationlistNode1 = new AStructureElementDeclarationList(listNode2, pstructureelementdeclarationNode3);
        }
	nodeList.add(pstructureelementdeclarationlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new126() /* reduce AAstructureelementdeclarationlist2StructureElementDeclarationList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementDeclarationList pstructureelementdeclarationlistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PStructureElementDeclaration pstructureelementdeclarationNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pstructureelementdeclarationNode4 = (PStructureElementDeclaration)nodeArrayList2.get(0);

        pstructureelementdeclarationlistNode1 = new AStructureElementDeclarationList(listNode3, pstructureelementdeclarationNode4);
        }
	nodeList.add(pstructureelementdeclarationlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new127() /* reduce AStructureElementDeclarationListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementDeclarationListHead pstructureelementdeclarationlistheadNode1;
        {
            // Block
        PStructureElementDeclaration pstructureelementdeclarationNode2;
        TSemicolon tsemicolonNode3;
        pstructureelementdeclarationNode2 = (PStructureElementDeclaration)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        pstructureelementdeclarationlistheadNode1 = new AStructureElementDeclarationListHead(pstructureelementdeclarationNode2, tsemicolonNode3);
        }
	nodeList.add(pstructureelementdeclarationlistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new128() /* reduce AStructureElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementDeclaration pstructureelementdeclarationNode1;
        {
            // Block
        PStructureElementName pstructureelementnameNode2;
        TColon tcolonNode3;
        PStructureElementInit pstructureelementinitNode4;
        pstructureelementnameNode2 = (PStructureElementName)nodeArrayList1.get(0);
        tcolonNode3 = (TColon)nodeArrayList2.get(0);
        pstructureelementinitNode4 = (PStructureElementInit)nodeArrayList3.get(0);

        pstructureelementdeclarationNode1 = new AStructureElementDeclaration(pstructureelementnameNode2, tcolonNode3, pstructureelementinitNode4);
        }
	nodeList.add(pstructureelementdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new129() /* reduce ASimpleStructureElementInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInit pstructureelementinitNode1;
        {
            // Block
        PSimpleSpecInit psimplespecinitNode2;
        psimplespecinitNode2 = (PSimpleSpecInit)nodeArrayList1.get(0);

        pstructureelementinitNode1 = new ASimpleStructureElementInit(psimplespecinitNode2);
        }
	nodeList.add(pstructureelementinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new130() /* reduce AArrayStructureElementInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInit pstructureelementinitNode1;
        {
            // Block
        PArraySpecInit parrayspecinitNode2;
        parrayspecinitNode2 = (PArraySpecInit)nodeArrayList1.get(0);

        pstructureelementinitNode1 = new AArrayStructureElementInit(parrayspecinitNode2);
        }
	nodeList.add(pstructureelementinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new131() /* reduce AStructStructureElementInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInit pstructureelementinitNode1;
        {
            // Block
        PInitializedStructure pinitializedstructureNode2;
        pinitializedstructureNode2 = (PInitializedStructure)nodeArrayList1.get(0);

        pstructureelementinitNode1 = new AStructStructureElementInit(pinitializedstructureNode2);
        }
	nodeList.add(pstructureelementinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new132() /* reduce AStructureInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureInitialization pstructureinitializationNode1;
        {
            // Block
        TLparen tlparenNode2;
        PStructureElementInitializationList pstructureelementinitializationlistNode3;
        TRparen trparenNode4;
        tlparenNode2 = (TLparen)nodeArrayList1.get(0);
        pstructureelementinitializationlistNode3 = (PStructureElementInitializationList)nodeArrayList2.get(0);
        trparenNode4 = (TRparen)nodeArrayList3.get(0);

        pstructureinitializationNode1 = new AStructureInitialization(tlparenNode2, pstructureelementinitializationlistNode3, trparenNode4);
        }
	nodeList.add(pstructureinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new133() /* reduce AAstructureelementinitializationlist1StructureElementInitializationList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInitializationList pstructureelementinitializationlistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PStructureElementInitialization pstructureelementinitializationNode3;
        {
            // Block
        }
        pstructureelementinitializationNode3 = (PStructureElementInitialization)nodeArrayList1.get(0);

        pstructureelementinitializationlistNode1 = new AStructureElementInitializationList(listNode2, pstructureelementinitializationNode3);
        }
	nodeList.add(pstructureelementinitializationlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new134() /* reduce AAstructureelementinitializationlist2StructureElementInitializationList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInitializationList pstructureelementinitializationlistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PStructureElementInitialization pstructureelementinitializationNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pstructureelementinitializationNode4 = (PStructureElementInitialization)nodeArrayList2.get(0);

        pstructureelementinitializationlistNode1 = new AStructureElementInitializationList(listNode3, pstructureelementinitializationNode4);
        }
	nodeList.add(pstructureelementinitializationlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new135() /* reduce AStructureElementInitializationListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInitializationListHead pstructureelementinitializationlistheadNode1;
        {
            // Block
        PStructureElementInitialization pstructureelementinitializationNode2;
        TComma tcommaNode3;
        pstructureelementinitializationNode2 = (PStructureElementInitialization)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        pstructureelementinitializationlistheadNode1 = new AStructureElementInitializationListHead(pstructureelementinitializationNode2, tcommaNode3);
        }
	nodeList.add(pstructureelementinitializationlistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new136() /* reduce AStructureElementInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStructureElementInitialization pstructureelementinitializationNode1;
        {
            // Block
        PStructureElementName pstructureelementnameNode2;
        TColonEq tcoloneqNode3;
        PInitialElement pinitialelementNode4;
        pstructureelementnameNode2 = (PStructureElementName)nodeArrayList1.get(0);
        tcoloneqNode3 = (TColonEq)nodeArrayList2.get(0);
        pinitialelementNode4 = (PInitialElement)nodeArrayList3.get(0);

        pstructureelementinitializationNode1 = new AStructureElementInitialization(pstructureelementnameNode2, tcoloneqNode3, pinitialelementNode4);
        }
	nodeList.add(pstructureelementinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new137() /* reduce AStringStringWstringTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStringWstringTypeName pstringwstringtypenameNode1;
        {
            // Block
        TString1TypeName tstring1typenameNode2;
        tstring1typenameNode2 = (TString1TypeName)nodeArrayList1.get(0);

        pstringwstringtypenameNode1 = new AStringStringWstringTypeName(tstring1typenameNode2);
        }
	nodeList.add(pstringwstringtypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new138() /* reduce AWstringStringWstringTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStringWstringTypeName pstringwstringtypenameNode1;
        {
            // Block
        TWstringTypeName twstringtypenameNode2;
        twstringtypenameNode2 = (TWstringTypeName)nodeArrayList1.get(0);

        pstringwstringtypenameNode1 = new AWstringStringWstringTypeName(twstringtypenameNode2);
        }
	nodeList.add(pstringwstringtypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new139() /* reduce AStringTypeDeclarationLenSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStringTypeDeclarationLenSpec pstringtypedeclarationlenspecNode1;
        {
            // Block
        TLbrack tlbrackNode2;
        TInteger tintegerNode3;
        TRbrack trbrackNode4;
        tlbrackNode2 = (TLbrack)nodeArrayList1.get(0);
        tintegerNode3 = (TInteger)nodeArrayList2.get(0);
        trbrackNode4 = (TRbrack)nodeArrayList3.get(0);

        pstringtypedeclarationlenspecNode1 = new AStringTypeDeclarationLenSpec(tlbrackNode2, tintegerNode3, trbrackNode4);
        }
	nodeList.add(pstringtypedeclarationlenspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new140() /* reduce AStringTypeDeclarationInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStringTypeDeclarationInitialization pstringtypedeclarationinitializationNode1;
        {
            // Block
        TColonEq tcoloneqNode2;
        PCharacterString pcharacterstringNode3;
        tcoloneqNode2 = (TColonEq)nodeArrayList1.get(0);
        pcharacterstringNode3 = (PCharacterString)nodeArrayList2.get(0);

        pstringtypedeclarationinitializationNode1 = new AStringTypeDeclarationInitialization(tcoloneqNode2, pcharacterstringNode3);
        }
	nodeList.add(pstringtypedeclarationinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new141() /* reduce AAlenstringtypedeclaration1$1StringTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStringTypeDeclaration pstringtypedeclarationNode1;
        {
            // Block
        PStringTypeName pstringtypenameNode2;
        TColon tcolonNode4;
        PStringWstringTypeName pstringwstringtypenameNode5;
        PStringTypeDeclarationLenSpec pstringtypedeclarationlenspecNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pstringtypenameNode2 = new AStringTypeName(tidentifierNode3);
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        pstringwstringtypenameNode5 = (PStringWstringTypeName)nodeArrayList3.get(0);
        pstringtypedeclarationlenspecNode6 = (PStringTypeDeclarationLenSpec)nodeArrayList4.get(0);

        pstringtypedeclarationNode1 = new ALenStringTypeDeclaration(pstringtypenameNode2, tcolonNode4, pstringwstringtypenameNode5, pstringtypedeclarationlenspecNode6, null);
        }
	nodeList.add(pstringtypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new142() /* reduce AAlenstringtypedeclaration2$1StringTypeDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStringTypeDeclaration pstringtypedeclarationNode1;
        {
            // Block
        PStringTypeName pstringtypenameNode2;
        TColon tcolonNode4;
        PStringWstringTypeName pstringwstringtypenameNode5;
        PStringTypeDeclarationLenSpec pstringtypedeclarationlenspecNode6;
        PStringTypeDeclarationInitialization pstringtypedeclarationinitializationNode7;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pstringtypenameNode2 = new AStringTypeName(tidentifierNode3);
        }
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        pstringwstringtypenameNode5 = (PStringWstringTypeName)nodeArrayList3.get(0);
        pstringtypedeclarationlenspecNode6 = (PStringTypeDeclarationLenSpec)nodeArrayList4.get(0);
        pstringtypedeclarationinitializationNode7 = (PStringTypeDeclarationInitialization)nodeArrayList5.get(0);

        pstringtypedeclarationNode1 = new ALenStringTypeDeclaration(pstringtypenameNode2, tcolonNode4, pstringwstringtypenameNode5, pstringtypedeclarationlenspecNode6, pstringtypedeclarationinitializationNode7);
        }
	nodeList.add(pstringtypedeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new143() /* reduce ADirectVariableVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariable pvariableNode1;
        {
            // Block
        PDirectVariable pdirectvariableNode2;
        pdirectvariableNode2 = (PDirectVariable)nodeArrayList1.get(0);

        pvariableNode1 = new ADirectVariableVariable(pdirectvariableNode2);
        }
	nodeList.add(pvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new144() /* reduce ASymbolicVariableVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariable pvariableNode1;
        {
            // Block
        PSymbolicVariable psymbolicvariableNode2;
        psymbolicvariableNode2 = (PSymbolicVariable)nodeArrayList1.get(0);

        pvariableNode1 = new ASymbolicVariableVariable(psymbolicvariableNode2);
        }
	nodeList.add(pvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new145() /* reduce ADirectVariableVariableComplex */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariableComplex pvariablecomplexNode1;
        {
            // Block
        PDirectVariable pdirectvariableNode2;
        pdirectvariableNode2 = (PDirectVariable)nodeArrayList1.get(0);

        pvariablecomplexNode1 = new ADirectVariableVariableComplex(pdirectvariableNode2);
        }
	nodeList.add(pvariablecomplexNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new146() /* reduce ASymbolicVariableVariableComplex */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariableComplex pvariablecomplexNode1;
        {
            // Block
        PSymbolicVariableComplex psymbolicvariablecomplexNode2;
        psymbolicvariablecomplexNode2 = (PSymbolicVariableComplex)nodeArrayList1.get(0);

        pvariablecomplexNode1 = new ASymbolicVariableVariableComplex(psymbolicvariablecomplexNode2);
        }
	nodeList.add(pvariablecomplexNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new147() /* reduce AVariableSymbolicVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSymbolicVariable psymbolicvariableNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        psymbolicvariableNode1 = new AVariableSymbolicVariable(tidentifierNode2);
        }
	nodeList.add(psymbolicvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new148() /* reduce AArraySymbolicVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSymbolicVariable psymbolicvariableNode1;
        {
            // Block
        PSymbolicVariable psymbolicvariableNode2;
        PSubscriptList psubscriptlistNode3;
        psymbolicvariableNode2 = (PSymbolicVariable)nodeArrayList1.get(0);
        psubscriptlistNode3 = (PSubscriptList)nodeArrayList2.get(0);

        psymbolicvariableNode1 = new AArraySymbolicVariable(psymbolicvariableNode2, psubscriptlistNode3);
        }
	nodeList.add(psymbolicvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new149() /* reduce AStructSymbolicVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSymbolicVariable psymbolicvariableNode1;
        {
            // Block
        PSymbolicVariable psymbolicvariableNode2;
        TDot tdotNode3;
        PFieldSelector pfieldselectorNode4;
        psymbolicvariableNode2 = (PSymbolicVariable)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        pfieldselectorNode4 = (PFieldSelector)nodeArrayList3.get(0);

        psymbolicvariableNode1 = new AStructSymbolicVariable(psymbolicvariableNode2, tdotNode3, pfieldselectorNode4);
        }
	nodeList.add(psymbolicvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new150() /* reduce AArraySymbolicVariableComplex */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSymbolicVariableComplex psymbolicvariablecomplexNode1;
        {
            // Block
        PSymbolicVariable psymbolicvariableNode2;
        PSubscriptList psubscriptlistNode3;
        psymbolicvariableNode2 = (PSymbolicVariable)nodeArrayList1.get(0);
        psubscriptlistNode3 = (PSubscriptList)nodeArrayList2.get(0);

        psymbolicvariablecomplexNode1 = new AArraySymbolicVariableComplex(psymbolicvariableNode2, psubscriptlistNode3);
        }
	nodeList.add(psymbolicvariablecomplexNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new151() /* reduce AStructSymbolicVariableComplex */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSymbolicVariableComplex psymbolicvariablecomplexNode1;
        {
            // Block
        PSymbolicVariable psymbolicvariableNode2;
        TDot tdotNode3;
        PFieldSelector pfieldselectorNode4;
        psymbolicvariableNode2 = (PSymbolicVariable)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        pfieldselectorNode4 = (PFieldSelector)nodeArrayList3.get(0);

        psymbolicvariablecomplexNode1 = new AStructSymbolicVariableComplex(psymbolicvariableNode2, tdotNode3, pfieldselectorNode4);
        }
	nodeList.add(psymbolicvariablecomplexNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new152() /* reduce AAdirectvariable1DirectVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDirectVariable pdirectvariableNode1;
        {
            // Block
        TPercent tpercentNode2;
        TLocationPrefix tlocationprefixNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TInteger tintegerNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        tpercentNode2 = (TPercent)nodeArrayList1.get(0);
        tlocationprefixNode3 = (TLocationPrefix)nodeArrayList2.get(0);
        tintegerNode5 = (TInteger)nodeArrayList3.get(0);
        {
            // Block
        }

        pdirectvariableNode1 = new ADirectVariable(tpercentNode2, tlocationprefixNode3, null, tintegerNode5, listNode6);
        }
	nodeList.add(pdirectvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new153() /* reduce AAdirectvariable2DirectVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDirectVariable pdirectvariableNode1;
        {
            // Block
        TPercent tpercentNode2;
        TLocationPrefix tlocationprefixNode3;
        TSizePrefix tsizeprefixNode4;
        TInteger tintegerNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        tpercentNode2 = (TPercent)nodeArrayList1.get(0);
        tlocationprefixNode3 = (TLocationPrefix)nodeArrayList2.get(0);
        tsizeprefixNode4 = (TSizePrefix)nodeArrayList3.get(0);
        tintegerNode5 = (TInteger)nodeArrayList4.get(0);
        {
            // Block
        }

        pdirectvariableNode1 = new ADirectVariable(tpercentNode2, tlocationprefixNode3, tsizeprefixNode4, tintegerNode5, listNode6);
        }
	nodeList.add(pdirectvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new154() /* reduce AAdirectvariable3DirectVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDirectVariable pdirectvariableNode1;
        {
            // Block
        TPercent tpercentNode2;
        TLocationPrefix tlocationprefixNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TInteger tintegerNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        tpercentNode2 = (TPercent)nodeArrayList1.get(0);
        tlocationprefixNode3 = (TLocationPrefix)nodeArrayList2.get(0);
        tintegerNode5 = (TInteger)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList4.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pdirectvariableNode1 = new ADirectVariable(tpercentNode2, tlocationprefixNode3, null, tintegerNode5, listNode7);
        }
	nodeList.add(pdirectvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new155() /* reduce AAdirectvariable4DirectVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDirectVariable pdirectvariableNode1;
        {
            // Block
        TPercent tpercentNode2;
        TLocationPrefix tlocationprefixNode3;
        TSizePrefix tsizeprefixNode4;
        TInteger tintegerNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        tpercentNode2 = (TPercent)nodeArrayList1.get(0);
        tlocationprefixNode3 = (TLocationPrefix)nodeArrayList2.get(0);
        tsizeprefixNode4 = (TSizePrefix)nodeArrayList3.get(0);
        tintegerNode5 = (TInteger)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pdirectvariableNode1 = new ADirectVariable(tpercentNode2, tlocationprefixNode3, tsizeprefixNode4, tintegerNode5, listNode7);
        }
	nodeList.add(pdirectvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new156() /* reduce APrefixedInteger */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrefixedInteger pprefixedintegerNode1;
        {
            // Block
        TDot tdotNode2;
        TInteger tintegerNode3;
        tdotNode2 = (TDot)nodeArrayList1.get(0);
        tintegerNode3 = (TInteger)nodeArrayList2.get(0);

        pprefixedintegerNode1 = new APrefixedInteger(tdotNode2, tintegerNode3);
        }
	nodeList.add(pprefixedintegerNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new157() /* reduce AAsubscriptlist1SubscriptList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubscriptList psubscriptlistNode1;
        {
            // Block
        TLbrack tlbrackNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PSubscript psubscriptNode4;
        TRbrack trbrackNode5;
        tlbrackNode2 = (TLbrack)nodeArrayList1.get(0);
        {
            // Block
        }
        psubscriptNode4 = (PSubscript)nodeArrayList2.get(0);
        trbrackNode5 = (TRbrack)nodeArrayList3.get(0);

        psubscriptlistNode1 = new ASubscriptList(tlbrackNode2, listNode3, psubscriptNode4, trbrackNode5);
        }
	nodeList.add(psubscriptlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new158() /* reduce AAsubscriptlist2SubscriptList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubscriptList psubscriptlistNode1;
        {
            // Block
        TLbrack tlbrackNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PSubscript psubscriptNode5;
        TRbrack trbrackNode6;
        tlbrackNode2 = (TLbrack)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        psubscriptNode5 = (PSubscript)nodeArrayList3.get(0);
        trbrackNode6 = (TRbrack)nodeArrayList4.get(0);

        psubscriptlistNode1 = new ASubscriptList(tlbrackNode2, listNode4, psubscriptNode5, trbrackNode6);
        }
	nodeList.add(psubscriptlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new159() /* reduce ASubscriptListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubscriptListHead psubscriptlistheadNode1;
        {
            // Block
        PSubscript psubscriptNode2;
        TComma tcommaNode3;
        psubscriptNode2 = (PSubscript)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        psubscriptlistheadNode1 = new ASubscriptListHead(psubscriptNode2, tcommaNode3);
        }
	nodeList.add(psubscriptlistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new160() /* reduce ASubscript */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSubscript psubscriptNode1;
        {
            // Block
        PExpression pexpressionNode2;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);

        psubscriptNode1 = new ASubscript(pexpressionNode2);
        }
	nodeList.add(psubscriptNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new161() /* reduce AFieldSelector */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFieldSelector pfieldselectorNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pfieldselectorNode1 = new AFieldSelector(tidentifierNode2);
        }
	nodeList.add(pfieldselectorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new162() /* reduce AInputDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInputDeclarations pinputdeclarationsNode1;
        {
            // Block
        TVarInputToken tvarinputtokenNode2;
        TRetain tretainNode3;
        PVarInitDecls pvarinitdeclsNode4;
        TEndVarToken tendvartokenNode5;
        tvarinputtokenNode2 = (TVarInputToken)nodeArrayList1.get(0);
        tretainNode3 = (TRetain)nodeArrayList2.get(0);
        pvarinitdeclsNode4 = (PVarInitDecls)nodeArrayList3.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList4.get(0);

        pinputdeclarationsNode1 = new AInputDeclarations(tvarinputtokenNode2, tretainNode3, pvarinitdeclsNode4, tendvartokenNode5);
        }
	nodeList.add(pinputdeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new163() /* reduce AOutputDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POutputDeclarations poutputdeclarationsNode1;
        {
            // Block
        TVarOutputToken tvaroutputtokenNode2;
        TRetain tretainNode3;
        PVarInitDecls pvarinitdeclsNode4;
        TEndVarToken tendvartokenNode5;
        tvaroutputtokenNode2 = (TVarOutputToken)nodeArrayList1.get(0);
        tretainNode3 = (TRetain)nodeArrayList2.get(0);
        pvarinitdeclsNode4 = (PVarInitDecls)nodeArrayList3.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList4.get(0);

        poutputdeclarationsNode1 = new AOutputDeclarations(tvaroutputtokenNode2, tretainNode3, pvarinitdeclsNode4, tendvartokenNode5);
        }
	nodeList.add(poutputdeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new164() /* reduce AInputOutputDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInputOutputDeclarations pinputoutputdeclarationsNode1;
        {
            // Block
        TVarInOutToken tvarinouttokenNode2;
        PVarInitDecls pvarinitdeclsNode3;
        TEndVarToken tendvartokenNode4;
        tvarinouttokenNode2 = (TVarInOutToken)nodeArrayList1.get(0);
        pvarinitdeclsNode3 = (PVarInitDecls)nodeArrayList2.get(0);
        tendvartokenNode4 = (TEndVarToken)nodeArrayList3.get(0);

        pinputoutputdeclarationsNode1 = new AInputOutputDeclarations(tvarinouttokenNode2, pvarinitdeclsNode3, tendvartokenNode4);
        }
	nodeList.add(pinputoutputdeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new165() /* reduce AAvardeclarations1VarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDeclarations pvardeclarationsNode1;
        {
            // Block
        TVarToken tvartokenNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PVarInitDecls pvarinitdeclsNode4;
        TEndVarToken tendvartokenNode5;
        tvartokenNode2 = (TVarToken)nodeArrayList1.get(0);
        pvarinitdeclsNode4 = (PVarInitDecls)nodeArrayList2.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList3.get(0);

        pvardeclarationsNode1 = new AVarDeclarations(tvartokenNode2, null, pvarinitdeclsNode4, tendvartokenNode5);
        }
	nodeList.add(pvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new166() /* reduce AAvardeclarations2VarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarDeclarations pvardeclarationsNode1;
        {
            // Block
        TVarToken tvartokenNode2;
        PConstantTokenOrRetain pconstanttokenorretainNode3;
        PVarInitDecls pvarinitdeclsNode4;
        TEndVarToken tendvartokenNode5;
        tvartokenNode2 = (TVarToken)nodeArrayList1.get(0);
        pconstanttokenorretainNode3 = (PConstantTokenOrRetain)nodeArrayList2.get(0);
        pvarinitdeclsNode4 = (PVarInitDecls)nodeArrayList3.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList4.get(0);

        pvardeclarationsNode1 = new AVarDeclarations(tvartokenNode2, pconstanttokenorretainNode3, pvarinitdeclsNode4, tendvartokenNode5);
        }
	nodeList.add(pvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new167() /* reduce AAexternalvardeclarations1ExternalVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExternalVarDeclarations pexternalvardeclarationsNode1;
        {
            // Block
        TVarExternalToken tvarexternaltokenNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PVarInitDecls pvarinitdeclsNode4;
        TEndVarToken tendvartokenNode5;
        tvarexternaltokenNode2 = (TVarExternalToken)nodeArrayList1.get(0);
        pvarinitdeclsNode4 = (PVarInitDecls)nodeArrayList2.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList3.get(0);

        pexternalvardeclarationsNode1 = new AExternalVarDeclarations(tvarexternaltokenNode2, null, pvarinitdeclsNode4, tendvartokenNode5);
        }
	nodeList.add(pexternalvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new168() /* reduce AAexternalvardeclarations2ExternalVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExternalVarDeclarations pexternalvardeclarationsNode1;
        {
            // Block
        TVarExternalToken tvarexternaltokenNode2;
        TConstantToken tconstanttokenNode3;
        PVarInitDecls pvarinitdeclsNode4;
        TEndVarToken tendvartokenNode5;
        tvarexternaltokenNode2 = (TVarExternalToken)nodeArrayList1.get(0);
        tconstanttokenNode3 = (TConstantToken)nodeArrayList2.get(0);
        pvarinitdeclsNode4 = (PVarInitDecls)nodeArrayList3.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList4.get(0);

        pexternalvardeclarationsNode1 = new AExternalVarDeclarations(tvarexternaltokenNode2, tconstanttokenNode3, pvarinitdeclsNode4, tendvartokenNode5);
        }
	nodeList.add(pexternalvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new169() /* reduce ATempVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTempVarDeclarations ptempvardeclarationsNode1;
        {
            // Block
        TVarTempToken tvartemptokenNode2;
        PVarInitDecls pvarinitdeclsNode3;
        TEndVarToken tendvartokenNode4;
        tvartemptokenNode2 = (TVarTempToken)nodeArrayList1.get(0);
        pvarinitdeclsNode3 = (PVarInitDecls)nodeArrayList2.get(0);
        tendvartokenNode4 = (TEndVarToken)nodeArrayList3.get(0);

        ptempvardeclarationsNode1 = new ATempVarDeclarations(tvartemptokenNode2, pvarinitdeclsNode3, tendvartokenNode4);
        }
	nodeList.add(ptempvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new170() /* reduce AAvarinitdecls1VarInitDecls */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDecls pvarinitdeclsNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PVarInitDecl pvarinitdeclNode3;
        {
            // Block
        }
        pvarinitdeclNode3 = (PVarInitDecl)nodeArrayList1.get(0);

        pvarinitdeclsNode1 = new AVarInitDecls(listNode2, pvarinitdeclNode3);
        }
	nodeList.add(pvarinitdeclsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new171() /* reduce AAvarinitdecls2VarInitDecls */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDecls pvarinitdeclsNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PVarInitDecl pvarinitdeclNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pvarinitdeclNode4 = (PVarInitDecl)nodeArrayList2.get(0);

        pvarinitdeclsNode1 = new AVarInitDecls(listNode3, pvarinitdeclNode4);
        }
	nodeList.add(pvarinitdeclsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new172() /* reduce AVarInitDeclsHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclsHead pvarinitdeclsheadNode1;
        {
            // Block
        PVarInitDecl pvarinitdeclNode2;
        TSemicolon tsemicolonNode3;
        pvarinitdeclNode2 = (PVarInitDecl)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        pvarinitdeclsheadNode1 = new AVarInitDeclsHead(pvarinitdeclNode2, tsemicolonNode3);
        }
	nodeList.add(pvarinitdeclsheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new173() /* reduce AAvarinitdecl1VarInitDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDecl pvarinitdeclNode1;
        {
            // Block
        PVar1List pvar1listNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TColon tcolonNode4;
        PVarInitDeclSpec pvarinitdeclspecNode5;
        pvar1listNode2 = (PVar1List)nodeArrayList1.get(0);
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        pvarinitdeclspecNode5 = (PVarInitDeclSpec)nodeArrayList3.get(0);

        pvarinitdeclNode1 = new AVarInitDecl(pvar1listNode2, null, tcolonNode4, pvarinitdeclspecNode5);
        }
	nodeList.add(pvarinitdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new174() /* reduce AAvarinitdecl2VarInitDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDecl pvarinitdeclNode1;
        {
            // Block
        PVar1List pvar1listNode2;
        TIncomplLocation tincompllocationNode3;
        TColon tcolonNode4;
        PVarInitDeclSpec pvarinitdeclspecNode5;
        pvar1listNode2 = (PVar1List)nodeArrayList1.get(0);
        tincompllocationNode3 = (TIncomplLocation)nodeArrayList2.get(0);
        tcolonNode4 = (TColon)nodeArrayList3.get(0);
        pvarinitdeclspecNode5 = (PVarInitDeclSpec)nodeArrayList4.get(0);

        pvarinitdeclNode1 = new AVarInitDecl(pvar1listNode2, tincompllocationNode3, tcolonNode4, pvarinitdeclspecNode5);
        }
	nodeList.add(pvarinitdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new175() /* reduce AAstructfbnamevarinitdeclspec1VarInitDeclSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclSpec pvarinitdeclspecNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pvarinitdeclspecNode1 = new AStructFbNameVarInitDeclSpec(tidentifierNode2, null);
        }
	nodeList.add(pvarinitdeclspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new176() /* reduce AAstructfbnamevarinitdeclspec2VarInitDeclSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclSpec pvarinitdeclspecNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        PInitializedStructureInitialization pinitializedstructureinitializationNode3;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        pinitializedstructureinitializationNode3 = (PInitializedStructureInitialization)nodeArrayList2.get(0);

        pvarinitdeclspecNode1 = new AStructFbNameVarInitDeclSpec(tidentifierNode2, pinitializedstructureinitializationNode3);
        }
	nodeList.add(pvarinitdeclspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new177() /* reduce AVarVarInitDeclSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclSpec pvarinitdeclspecNode1;
        {
            // Block
        PVar1SpecInit pvar1specinitNode2;
        pvar1specinitNode2 = (PVar1SpecInit)nodeArrayList1.get(0);

        pvarinitdeclspecNode1 = new AVarVarInitDeclSpec(pvar1specinitNode2);
        }
	nodeList.add(pvarinitdeclspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new178() /* reduce AArrayVarVarInitDeclSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclSpec pvarinitdeclspecNode1;
        {
            // Block
        PArraySpecInit parrayspecinitNode2;
        parrayspecinitNode2 = (PArraySpecInit)nodeArrayList1.get(0);

        pvarinitdeclspecNode1 = new AArrayVarVarInitDeclSpec(parrayspecinitNode2);
        }
	nodeList.add(pvarinitdeclspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new179() /* reduce ASStringVarInitDeclSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclSpec pvarinitdeclspecNode1;
        {
            // Block
        PSingleByteStringSpec psinglebytestringspecNode2;
        psinglebytestringspecNode2 = (PSingleByteStringSpec)nodeArrayList1.get(0);

        pvarinitdeclspecNode1 = new ASStringVarInitDeclSpec(psinglebytestringspecNode2);
        }
	nodeList.add(pvarinitdeclspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new180() /* reduce ADStringVarInitDeclSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVarInitDeclSpec pvarinitdeclspecNode1;
        {
            // Block
        PDoubleByteStringSpec pdoublebytestringspecNode2;
        pdoublebytestringspecNode2 = (PDoubleByteStringSpec)nodeArrayList1.get(0);

        pvarinitdeclspecNode1 = new ADStringVarInitDeclSpec(pdoublebytestringspecNode2);
        }
	nodeList.add(pvarinitdeclspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new181() /* reduce AAvar1list1Var1List */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar1List pvar1listNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        TIdentifier tidentifierNode3;
        {
            // Block
        }
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pvar1listNode1 = new AVar1List(listNode2, tidentifierNode3);
        }
	nodeList.add(pvar1listNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new182() /* reduce AAvar1list2Var1List */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar1List pvar1listNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        TIdentifier tidentifierNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);

        pvar1listNode1 = new AVar1List(listNode3, tidentifierNode4);
        }
	nodeList.add(pvar1listNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new183() /* reduce AVar1ListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar1ListHead pvar1listheadNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TComma tcommaNode3;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        pvar1listheadNode1 = new AVar1ListHead(tidentifierNode2, tcommaNode3);
        }
	nodeList.add(pvar1listheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new184() /* reduce ASimpleVar1SpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVar1SpecInit pvar1specinitNode1;
        {
            // Block
        PSimpleSpecInit psimplespecinitNode2;
        psimplespecinitNode2 = (PSimpleSpecInit)nodeArrayList1.get(0);

        pvar1specinitNode1 = new ASimpleVar1SpecInit(psimplespecinitNode2);
        }
	nodeList.add(pvar1specinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new185() /* reduce AConstantConstantTokenOrRetain */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstantTokenOrRetain pconstanttokenorretainNode1;
        {
            // Block
        TConstantToken tconstanttokenNode2;
        tconstanttokenNode2 = (TConstantToken)nodeArrayList1.get(0);

        pconstanttokenorretainNode1 = new AConstantConstantTokenOrRetain(tconstanttokenNode2);
        }
	nodeList.add(pconstanttokenorretainNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new186() /* reduce ARetainConstantTokenOrRetain */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstantTokenOrRetain pconstanttokenorretainNode1;
        {
            // Block
        TRetain tretainNode2;
        tretainNode2 = (TRetain)nodeArrayList1.get(0);

        pconstanttokenorretainNode1 = new ARetainConstantTokenOrRetain(tretainNode2);
        }
	nodeList.add(pconstanttokenorretainNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new187() /* reduce AAlocatedvardeclarations1LocatedVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDeclarations plocatedvardeclarationsNode1;
        {
            // Block
        TVarToken tvartokenNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PLocatedVarDeclList plocatedvardecllistNode4;
        TEndVarToken tendvartokenNode5;
        tvartokenNode2 = (TVarToken)nodeArrayList1.get(0);
        plocatedvardecllistNode4 = (PLocatedVarDeclList)nodeArrayList2.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList3.get(0);

        plocatedvardeclarationsNode1 = new ALocatedVarDeclarations(tvartokenNode2, null, plocatedvardecllistNode4, tendvartokenNode5);
        }
	nodeList.add(plocatedvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new188() /* reduce AAlocatedvardeclarations2LocatedVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDeclarations plocatedvardeclarationsNode1;
        {
            // Block
        TVarToken tvartokenNode2;
        PConstantTokenOrRetain pconstanttokenorretainNode3;
        PLocatedVarDeclList plocatedvardecllistNode4;
        TEndVarToken tendvartokenNode5;
        tvartokenNode2 = (TVarToken)nodeArrayList1.get(0);
        pconstanttokenorretainNode3 = (PConstantTokenOrRetain)nodeArrayList2.get(0);
        plocatedvardecllistNode4 = (PLocatedVarDeclList)nodeArrayList3.get(0);
        tendvartokenNode5 = (TEndVarToken)nodeArrayList4.get(0);

        plocatedvardeclarationsNode1 = new ALocatedVarDeclarations(tvartokenNode2, pconstanttokenorretainNode3, plocatedvardecllistNode4, tendvartokenNode5);
        }
	nodeList.add(plocatedvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new189() /* reduce AAlocatedvardecllist1LocatedVarDeclList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDeclList plocatedvardecllistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PLocatedVarDecl plocatedvardeclNode3;
        {
            // Block
        }
        plocatedvardeclNode3 = (PLocatedVarDecl)nodeArrayList1.get(0);

        plocatedvardecllistNode1 = new ALocatedVarDeclList(listNode2, plocatedvardeclNode3);
        }
	nodeList.add(plocatedvardecllistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new190() /* reduce AAlocatedvardecllist2LocatedVarDeclList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDeclList plocatedvardecllistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PLocatedVarDecl plocatedvardeclNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        plocatedvardeclNode4 = (PLocatedVarDecl)nodeArrayList2.get(0);

        plocatedvardecllistNode1 = new ALocatedVarDeclList(listNode3, plocatedvardeclNode4);
        }
	nodeList.add(plocatedvardecllistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new191() /* reduce ALocatedVarDeclListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDeclListHead plocatedvardecllistheadNode1;
        {
            // Block
        PLocatedVarDecl plocatedvardeclNode2;
        TSemicolon tsemicolonNode3;
        plocatedvardeclNode2 = (PLocatedVarDecl)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        plocatedvardecllistheadNode1 = new ALocatedVarDeclListHead(plocatedvardeclNode2, tsemicolonNode3);
        }
	nodeList.add(plocatedvardecllistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new192() /* reduce AAlocatedvardecl1LocatedVarDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDecl plocatedvardeclNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PLocation plocationNode3;
        TColon tcolonNode4;
        PLocatedVarSpecInit plocatedvarspecinitNode5;
        plocationNode3 = (PLocation)nodeArrayList1.get(0);
        tcolonNode4 = (TColon)nodeArrayList2.get(0);
        plocatedvarspecinitNode5 = (PLocatedVarSpecInit)nodeArrayList3.get(0);

        plocatedvardeclNode1 = new ALocatedVarDecl(null, plocationNode3, tcolonNode4, plocatedvarspecinitNode5);
        }
	nodeList.add(plocatedvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new193() /* reduce AAlocatedvardecl2LocatedVarDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarDecl plocatedvardeclNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        PLocation plocationNode3;
        TColon tcolonNode4;
        PLocatedVarSpecInit plocatedvarspecinitNode5;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        plocationNode3 = (PLocation)nodeArrayList2.get(0);
        tcolonNode4 = (TColon)nodeArrayList3.get(0);
        plocatedvarspecinitNode5 = (PLocatedVarSpecInit)nodeArrayList4.get(0);

        plocatedvardeclNode1 = new ALocatedVarDecl(tidentifierNode2, plocationNode3, tcolonNode4, plocatedvarspecinitNode5);
        }
	nodeList.add(plocatedvardeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new194() /* reduce ASimpleLocatedVarSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarSpecInit plocatedvarspecinitNode1;
        {
            // Block
        PSimpleSpecInit psimplespecinitNode2;
        psimplespecinitNode2 = (PSimpleSpecInit)nodeArrayList1.get(0);

        plocatedvarspecinitNode1 = new ASimpleLocatedVarSpecInit(psimplespecinitNode2);
        }
	nodeList.add(plocatedvarspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new195() /* reduce AArrayLocatedVarSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarSpecInit plocatedvarspecinitNode1;
        {
            // Block
        PArraySpecInit parrayspecinitNode2;
        parrayspecinitNode2 = (PArraySpecInit)nodeArrayList1.get(0);

        plocatedvarspecinitNode1 = new AArrayLocatedVarSpecInit(parrayspecinitNode2);
        }
	nodeList.add(plocatedvarspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new196() /* reduce AStructLocatedVarSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarSpecInit plocatedvarspecinitNode1;
        {
            // Block
        PInitializedStructure pinitializedstructureNode2;
        pinitializedstructureNode2 = (PInitializedStructure)nodeArrayList1.get(0);

        plocatedvarspecinitNode1 = new AStructLocatedVarSpecInit(pinitializedstructureNode2);
        }
	nodeList.add(plocatedvarspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new197() /* reduce ASstringLocatedVarSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarSpecInit plocatedvarspecinitNode1;
        {
            // Block
        PSingleByteStringSpec psinglebytestringspecNode2;
        psinglebytestringspecNode2 = (PSingleByteStringSpec)nodeArrayList1.get(0);

        plocatedvarspecinitNode1 = new ASstringLocatedVarSpecInit(psinglebytestringspecNode2);
        }
	nodeList.add(plocatedvarspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new198() /* reduce ADstringLocatedVarSpecInit */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocatedVarSpecInit plocatedvarspecinitNode1;
        {
            // Block
        PDoubleByteStringSpec pdoublebytestringspecNode2;
        pdoublebytestringspecNode2 = (PDoubleByteStringSpec)nodeArrayList1.get(0);

        plocatedvarspecinitNode1 = new ADstringLocatedVarSpecInit(pdoublebytestringspecNode2);
        }
	nodeList.add(plocatedvarspecinitNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new199() /* reduce ALocation */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLocation plocationNode1;
        {
            // Block
        TAtToken tattokenNode2;
        PDirectVariable pdirectvariableNode3;
        tattokenNode2 = (TAtToken)nodeArrayList1.get(0);
        pdirectvariableNode3 = (PDirectVariable)nodeArrayList2.get(0);

        plocationNode1 = new ALocation(tattokenNode2, pdirectvariableNode3);
        }
	nodeList.add(plocationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new200() /* reduce ABrackInteger */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBrackInteger pbrackintegerNode1;
        {
            // Block
        TLbrack tlbrackNode2;
        TInteger tintegerNode3;
        TRbrack trbrackNode4;
        tlbrackNode2 = (TLbrack)nodeArrayList1.get(0);
        tintegerNode3 = (TInteger)nodeArrayList2.get(0);
        trbrackNode4 = (TRbrack)nodeArrayList3.get(0);

        pbrackintegerNode1 = new ABrackInteger(tlbrackNode2, tintegerNode3, trbrackNode4);
        }
	nodeList.add(pbrackintegerNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new201() /* reduce ASingleByteStringSpecInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSingleByteStringSpecInitialization psinglebytestringspecinitializationNode1;
        {
            // Block
        TColonEq tcoloneqNode2;
        TSingleByteCharacterString tsinglebytecharacterstringNode3;
        tcoloneqNode2 = (TColonEq)nodeArrayList1.get(0);
        tsinglebytecharacterstringNode3 = (TSingleByteCharacterString)nodeArrayList2.get(0);

        psinglebytestringspecinitializationNode1 = new ASingleByteStringSpecInitialization(tcoloneqNode2, tsinglebytecharacterstringNode3);
        }
	nodeList.add(psinglebytestringspecinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new202() /* reduce AAsinglebytestringspec1SingleByteStringSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSingleByteStringSpec psinglebytestringspecNode1;
        {
            // Block
        TString1TypeName tstring1typenameNode2;
        PBrackInteger pbrackintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        tstring1typenameNode2 = (TString1TypeName)nodeArrayList1.get(0);
        pbrackintegerNode3 = (PBrackInteger)nodeArrayList2.get(0);

        psinglebytestringspecNode1 = new ASingleByteStringSpec(tstring1typenameNode2, pbrackintegerNode3, null);
        }
	nodeList.add(psinglebytestringspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new203() /* reduce AAsinglebytestringspec2SingleByteStringSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSingleByteStringSpec psinglebytestringspecNode1;
        {
            // Block
        TString1TypeName tstring1typenameNode2;
        PBrackInteger pbrackintegerNode3;
        PSingleByteStringSpecInitialization psinglebytestringspecinitializationNode4;
        tstring1typenameNode2 = (TString1TypeName)nodeArrayList1.get(0);
        pbrackintegerNode3 = (PBrackInteger)nodeArrayList2.get(0);
        psinglebytestringspecinitializationNode4 = (PSingleByteStringSpecInitialization)nodeArrayList3.get(0);

        psinglebytestringspecNode1 = new ASingleByteStringSpec(tstring1typenameNode2, pbrackintegerNode3, psinglebytestringspecinitializationNode4);
        }
	nodeList.add(psinglebytestringspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new204() /* reduce ADoubleByteStringSpecInitialization */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDoubleByteStringSpecInitialization pdoublebytestringspecinitializationNode1;
        {
            // Block
        TColonEq tcoloneqNode2;
        TDoubleByteCharacterString tdoublebytecharacterstringNode3;
        tcoloneqNode2 = (TColonEq)nodeArrayList1.get(0);
        tdoublebytecharacterstringNode3 = (TDoubleByteCharacterString)nodeArrayList2.get(0);

        pdoublebytestringspecinitializationNode1 = new ADoubleByteStringSpecInitialization(tcoloneqNode2, tdoublebytecharacterstringNode3);
        }
	nodeList.add(pdoublebytestringspecinitializationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new205() /* reduce AAdoublebytestringspec1DoubleByteStringSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDoubleByteStringSpec pdoublebytestringspecNode1;
        {
            // Block
        TWstringTypeName twstringtypenameNode2;
        PBrackInteger pbrackintegerNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        twstringtypenameNode2 = (TWstringTypeName)nodeArrayList1.get(0);
        pbrackintegerNode3 = (PBrackInteger)nodeArrayList2.get(0);

        pdoublebytestringspecNode1 = new ADoubleByteStringSpec(twstringtypenameNode2, pbrackintegerNode3, null);
        }
	nodeList.add(pdoublebytestringspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new206() /* reduce AAdoublebytestringspec2DoubleByteStringSpec */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDoubleByteStringSpec pdoublebytestringspecNode1;
        {
            // Block
        TWstringTypeName twstringtypenameNode2;
        PBrackInteger pbrackintegerNode3;
        PDoubleByteStringSpecInitialization pdoublebytestringspecinitializationNode4;
        twstringtypenameNode2 = (TWstringTypeName)nodeArrayList1.get(0);
        pbrackintegerNode3 = (PBrackInteger)nodeArrayList2.get(0);
        pdoublebytestringspecinitializationNode4 = (PDoubleByteStringSpecInitialization)nodeArrayList3.get(0);

        pdoublebytestringspecNode1 = new ADoubleByteStringSpec(twstringtypenameNode2, pbrackintegerNode3, pdoublebytestringspecinitializationNode4);
        }
	nodeList.add(pdoublebytestringspecNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new207() /* reduce AFunctionName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionName pfunctionnameNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pfunctionnameNode1 = new AFunctionName(tidentifierNode2);
        }
	nodeList.add(pfunctionnameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new208() /* reduce AAfunctiondeclaration1FunctionDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionDeclaration pfunctiondeclarationNode1;
        {
            // Block
        TFunctionToken tfunctiontokenNode2;
        PFunctionName pfunctionnameNode3;
        TColon tcolonNode4;
        PReturnTypeName preturntypenameNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        PFunctionBody pfunctionbodyNode7;
        TEndFunctionToken tendfunctiontokenNode8;
        tfunctiontokenNode2 = (TFunctionToken)nodeArrayList1.get(0);
        pfunctionnameNode3 = (PFunctionName)nodeArrayList2.get(0);
        tcolonNode4 = (TColon)nodeArrayList3.get(0);
        preturntypenameNode5 = (PReturnTypeName)nodeArrayList4.get(0);
        {
            // Block
        }
        pfunctionbodyNode7 = (PFunctionBody)nodeArrayList5.get(0);
        tendfunctiontokenNode8 = (TEndFunctionToken)nodeArrayList6.get(0);

        pfunctiondeclarationNode1 = new AFunctionDeclaration(tfunctiontokenNode2, pfunctionnameNode3, tcolonNode4, preturntypenameNode5, listNode6, pfunctionbodyNode7, tendfunctiontokenNode8);
        }
	nodeList.add(pfunctiondeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new209() /* reduce AAfunctiondeclaration2FunctionDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionDeclaration pfunctiondeclarationNode1;
        {
            // Block
        TFunctionToken tfunctiontokenNode2;
        PFunctionName pfunctionnameNode3;
        TColon tcolonNode4;
        PReturnTypeName preturntypenameNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        PFunctionBody pfunctionbodyNode8;
        TEndFunctionToken tendfunctiontokenNode9;
        tfunctiontokenNode2 = (TFunctionToken)nodeArrayList1.get(0);
        pfunctionnameNode3 = (PFunctionName)nodeArrayList2.get(0);
        tcolonNode4 = (TColon)nodeArrayList3.get(0);
        preturntypenameNode5 = (PReturnTypeName)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        pfunctionbodyNode8 = (PFunctionBody)nodeArrayList6.get(0);
        tendfunctiontokenNode9 = (TEndFunctionToken)nodeArrayList7.get(0);

        pfunctiondeclarationNode1 = new AFunctionDeclaration(tfunctiontokenNode2, pfunctionnameNode3, tcolonNode4, preturntypenameNode5, listNode7, pfunctionbodyNode8, tendfunctiontokenNode9);
        }
	nodeList.add(pfunctiondeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new210() /* reduce AElementaryReturnTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PReturnTypeName preturntypenameNode1;
        {
            // Block
        PElementaryTypeName pelementarytypenameNode2;
        pelementarytypenameNode2 = (PElementaryTypeName)nodeArrayList1.get(0);

        preturntypenameNode1 = new AElementaryReturnTypeName(pelementarytypenameNode2);
        }
	nodeList.add(preturntypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new211() /* reduce ADerivedReturnTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PReturnTypeName preturntypenameNode1;
        {
            // Block
        PDerivedTypeName pderivedtypenameNode2;
        pderivedtypenameNode2 = (PDerivedTypeName)nodeArrayList1.get(0);

        preturntypenameNode1 = new ADerivedReturnTypeName(pderivedtypenameNode2);
        }
	nodeList.add(preturntypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new212() /* reduce AIoFunctionVarDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionVarDeclaration pfunctionvardeclarationNode1;
        {
            // Block
        PIoVarDeclarations piovardeclarationsNode2;
        piovardeclarationsNode2 = (PIoVarDeclarations)nodeArrayList1.get(0);

        pfunctionvardeclarationNode1 = new AIoFunctionVarDeclaration(piovardeclarationsNode2);
        }
	nodeList.add(pfunctionvardeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new213() /* reduce AFunctionFunctionVarDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionVarDeclaration pfunctionvardeclarationNode1;
        {
            // Block
        PVarDeclarations pvardeclarationsNode2;
        pvardeclarationsNode2 = (PVarDeclarations)nodeArrayList1.get(0);

        pfunctionvardeclarationNode1 = new AFunctionFunctionVarDeclaration(pvardeclarationsNode2);
        }
	nodeList.add(pfunctionvardeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new214() /* reduce AInputIoVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIoVarDeclarations piovardeclarationsNode1;
        {
            // Block
        PInputDeclarations pinputdeclarationsNode2;
        pinputdeclarationsNode2 = (PInputDeclarations)nodeArrayList1.get(0);

        piovardeclarationsNode1 = new AInputIoVarDeclarations(pinputdeclarationsNode2);
        }
	nodeList.add(piovardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new215() /* reduce AOuputIoVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIoVarDeclarations piovardeclarationsNode1;
        {
            // Block
        POutputDeclarations poutputdeclarationsNode2;
        poutputdeclarationsNode2 = (POutputDeclarations)nodeArrayList1.get(0);

        piovardeclarationsNode1 = new AOuputIoVarDeclarations(poutputdeclarationsNode2);
        }
	nodeList.add(piovardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new216() /* reduce AIoIoVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIoVarDeclarations piovardeclarationsNode1;
        {
            // Block
        PInputOutputDeclarations pinputoutputdeclarationsNode2;
        pinputoutputdeclarationsNode2 = (PInputOutputDeclarations)nodeArrayList1.get(0);

        piovardeclarationsNode1 = new AIoIoVarDeclarations(pinputoutputdeclarationsNode2);
        }
	nodeList.add(piovardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new217() /* reduce AFunctionBody */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBody pfunctionbodyNode1;
        {
            // Block
        PStatementList pstatementlistNode2;
        pstatementlistNode2 = (PStatementList)nodeArrayList1.get(0);

        pfunctionbodyNode1 = new AFunctionBody(pstatementlistNode2);
        }
	nodeList.add(pfunctionbodyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new218() /* reduce AStandardFunctionBlockTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockTypeName pfunctionblocktypenameNode1;
        {
            // Block
        TStandardFunctionBlockName tstandardfunctionblocknameNode2;
        tstandardfunctionblocknameNode2 = (TStandardFunctionBlockName)nodeArrayList1.get(0);

        pfunctionblocktypenameNode1 = new AStandardFunctionBlockTypeName(tstandardfunctionblocknameNode2);
        }
	nodeList.add(pfunctionblocktypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new219() /* reduce ADerivedFunctionBlockTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockTypeName pfunctionblocktypenameNode1;
        {
            // Block
        PDerivedFunctionBlockName pderivedfunctionblocknameNode2;
        pderivedfunctionblocknameNode2 = (PDerivedFunctionBlockName)nodeArrayList1.get(0);

        pfunctionblocktypenameNode1 = new ADerivedFunctionBlockTypeName(pderivedfunctionblocknameNode2);
        }
	nodeList.add(pfunctionblocktypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new220() /* reduce ADerivedFunctionBlockName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDerivedFunctionBlockName pderivedfunctionblocknameNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pderivedfunctionblocknameNode1 = new ADerivedFunctionBlockName(tidentifierNode2);
        }
	nodeList.add(pderivedfunctionblocknameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new221() /* reduce AAfunctionblockdeclaration1FunctionBlockDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockDeclaration pfunctionblockdeclarationNode1;
        {
            // Block
        TFunctionBlockToken tfunctionblocktokenNode2;
        PDerivedFunctionBlockName pderivedfunctionblocknameNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PFunctionBlockBody pfunctionblockbodyNode5;
        TEndFunctionBlockToken tendfunctionblocktokenNode6;
        tfunctionblocktokenNode2 = (TFunctionBlockToken)nodeArrayList1.get(0);
        pderivedfunctionblocknameNode3 = (PDerivedFunctionBlockName)nodeArrayList2.get(0);
        {
            // Block
        }
        pfunctionblockbodyNode5 = (PFunctionBlockBody)nodeArrayList3.get(0);
        tendfunctionblocktokenNode6 = (TEndFunctionBlockToken)nodeArrayList4.get(0);

        pfunctionblockdeclarationNode1 = new AFunctionBlockDeclaration(tfunctionblocktokenNode2, pderivedfunctionblocknameNode3, listNode4, pfunctionblockbodyNode5, tendfunctionblocktokenNode6);
        }
	nodeList.add(pfunctionblockdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new222() /* reduce AAfunctionblockdeclaration2FunctionBlockDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockDeclaration pfunctionblockdeclarationNode1;
        {
            // Block
        TFunctionBlockToken tfunctionblocktokenNode2;
        PDerivedFunctionBlockName pderivedfunctionblocknameNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PFunctionBlockBody pfunctionblockbodyNode6;
        TEndFunctionBlockToken tendfunctionblocktokenNode7;
        tfunctionblocktokenNode2 = (TFunctionBlockToken)nodeArrayList1.get(0);
        pderivedfunctionblocknameNode3 = (PDerivedFunctionBlockName)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pfunctionblockbodyNode6 = (PFunctionBlockBody)nodeArrayList4.get(0);
        tendfunctionblocktokenNode7 = (TEndFunctionBlockToken)nodeArrayList5.get(0);

        pfunctionblockdeclarationNode1 = new AFunctionBlockDeclaration(tfunctionblocktokenNode2, pderivedfunctionblocknameNode3, listNode5, pfunctionblockbodyNode6, tendfunctionblocktokenNode7);
        }
	nodeList.add(pfunctionblockdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new223() /* reduce AIoFunctionBlockVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockVarDeclarations pfunctionblockvardeclarationsNode1;
        {
            // Block
        PIoVarDeclarations piovardeclarationsNode2;
        piovardeclarationsNode2 = (PIoVarDeclarations)nodeArrayList1.get(0);

        pfunctionblockvardeclarationsNode1 = new AIoFunctionBlockVarDeclarations(piovardeclarationsNode2);
        }
	nodeList.add(pfunctionblockvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new224() /* reduce AOtherFunctionBlockVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockVarDeclarations pfunctionblockvardeclarationsNode1;
        {
            // Block
        POtherVarDeclarations pothervardeclarationsNode2;
        pothervardeclarationsNode2 = (POtherVarDeclarations)nodeArrayList1.get(0);

        pfunctionblockvardeclarationsNode1 = new AOtherFunctionBlockVarDeclarations(pothervardeclarationsNode2);
        }
	nodeList.add(pfunctionblockvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new225() /* reduce AExternalOtherVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherVarDeclarations pothervardeclarationsNode1;
        {
            // Block
        PExternalVarDeclarations pexternalvardeclarationsNode2;
        pexternalvardeclarationsNode2 = (PExternalVarDeclarations)nodeArrayList1.get(0);

        pothervardeclarationsNode1 = new AExternalOtherVarDeclarations(pexternalvardeclarationsNode2);
        }
	nodeList.add(pothervardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new226() /* reduce AVarOtherVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherVarDeclarations pothervardeclarationsNode1;
        {
            // Block
        PVarDeclarations pvardeclarationsNode2;
        pvardeclarationsNode2 = (PVarDeclarations)nodeArrayList1.get(0);

        pothervardeclarationsNode1 = new AVarOtherVarDeclarations(pvardeclarationsNode2);
        }
	nodeList.add(pothervardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new227() /* reduce ATempOtherVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        POtherVarDeclarations pothervardeclarationsNode1;
        {
            // Block
        PTempVarDeclarations ptempvardeclarationsNode2;
        ptempvardeclarationsNode2 = (PTempVarDeclarations)nodeArrayList1.get(0);

        pothervardeclarationsNode1 = new ATempOtherVarDeclarations(ptempvardeclarationsNode2);
        }
	nodeList.add(pothervardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new228() /* reduce AFunctionBlockBody */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFunctionBlockBody pfunctionblockbodyNode1;
        {
            // Block
        PStatementList pstatementlistNode2;
        pstatementlistNode2 = (PStatementList)nodeArrayList1.get(0);

        pfunctionblockbodyNode1 = new AFunctionBlockBody(pstatementlistNode2);
        }
	nodeList.add(pfunctionblockbodyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new229() /* reduce AProgramTypeName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramTypeName pprogramtypenameNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pprogramtypenameNode1 = new AProgramTypeName(tidentifierNode2);
        }
	nodeList.add(pprogramtypenameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new230() /* reduce AAccessName */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAccessName paccessnameNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        paccessnameNode1 = new AAccessName(tidentifierNode2);
        }
	nodeList.add(paccessnameNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new231() /* reduce AAprogramdeclaration1ProgramDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramDeclaration pprogramdeclarationNode1;
        {
            // Block
        TProgramToken tprogramtokenNode2;
        PProgramTypeName pprogramtypenameNode3;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PFunctionBlockBody pfunctionblockbodyNode5;
        TEndProgramToken tendprogramtokenNode6;
        tprogramtokenNode2 = (TProgramToken)nodeArrayList1.get(0);
        pprogramtypenameNode3 = (PProgramTypeName)nodeArrayList2.get(0);
        {
            // Block
        }
        pfunctionblockbodyNode5 = (PFunctionBlockBody)nodeArrayList3.get(0);
        tendprogramtokenNode6 = (TEndProgramToken)nodeArrayList4.get(0);

        pprogramdeclarationNode1 = new AProgramDeclaration(tprogramtokenNode2, pprogramtypenameNode3, listNode4, pfunctionblockbodyNode5, tendprogramtokenNode6);
        }
	nodeList.add(pprogramdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new232() /* reduce AAprogramdeclaration2ProgramDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramDeclaration pprogramdeclarationNode1;
        {
            // Block
        TProgramToken tprogramtokenNode2;
        PProgramTypeName pprogramtypenameNode3;
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        PFunctionBlockBody pfunctionblockbodyNode6;
        TEndProgramToken tendprogramtokenNode7;
        tprogramtokenNode2 = (TProgramToken)nodeArrayList1.get(0);
        pprogramtypenameNode3 = (PProgramTypeName)nodeArrayList2.get(0);
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        pfunctionblockbodyNode6 = (PFunctionBlockBody)nodeArrayList4.get(0);
        tendprogramtokenNode7 = (TEndProgramToken)nodeArrayList5.get(0);

        pprogramdeclarationNode1 = new AProgramDeclaration(tprogramtokenNode2, pprogramtypenameNode3, listNode5, pfunctionblockbodyNode6, tendprogramtokenNode7);
        }
	nodeList.add(pprogramdeclarationNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new233() /* reduce AIoProgramVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramVarDeclarations pprogramvardeclarationsNode1;
        {
            // Block
        PIoVarDeclarations piovardeclarationsNode2;
        piovardeclarationsNode2 = (PIoVarDeclarations)nodeArrayList1.get(0);

        pprogramvardeclarationsNode1 = new AIoProgramVarDeclarations(piovardeclarationsNode2);
        }
	nodeList.add(pprogramvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new234() /* reduce AOtherProgramVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramVarDeclarations pprogramvardeclarationsNode1;
        {
            // Block
        POtherVarDeclarations pothervardeclarationsNode2;
        pothervardeclarationsNode2 = (POtherVarDeclarations)nodeArrayList1.get(0);

        pprogramvardeclarationsNode1 = new AOtherProgramVarDeclarations(pothervardeclarationsNode2);
        }
	nodeList.add(pprogramvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new235() /* reduce ALocatedProgramVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramVarDeclarations pprogramvardeclarationsNode1;
        {
            // Block
        PLocatedVarDeclarations plocatedvardeclarationsNode2;
        plocatedvardeclarationsNode2 = (PLocatedVarDeclarations)nodeArrayList1.get(0);

        pprogramvardeclarationsNode1 = new ALocatedProgramVarDeclarations(plocatedvardeclarationsNode2);
        }
	nodeList.add(pprogramvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new236() /* reduce AAccessProgramVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramVarDeclarations pprogramvardeclarationsNode1;
        {
            // Block
        PProgramAccessDecls pprogramaccessdeclsNode2;
        pprogramaccessdeclsNode2 = (PProgramAccessDecls)nodeArrayList1.get(0);

        pprogramvardeclarationsNode1 = new AAccessProgramVarDeclarations(pprogramaccessdeclsNode2);
        }
	nodeList.add(pprogramvardeclarationsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new237() /* reduce AProgramAccessDecls */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramAccessDecls pprogramaccessdeclsNode1;
        {
            // Block
        TVarAccessToken tvaraccesstokenNode2;
        PProgramAccessDeclList pprogramaccessdecllistNode3;
        TEndVarToken tendvartokenNode4;
        tvaraccesstokenNode2 = (TVarAccessToken)nodeArrayList1.get(0);
        pprogramaccessdecllistNode3 = (PProgramAccessDeclList)nodeArrayList2.get(0);
        tendvartokenNode4 = (TEndVarToken)nodeArrayList3.get(0);

        pprogramaccessdeclsNode1 = new AProgramAccessDecls(tvaraccesstokenNode2, pprogramaccessdecllistNode3, tendvartokenNode4);
        }
	nodeList.add(pprogramaccessdeclsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new238() /* reduce AAprogramaccessdecllist1ProgramAccessDeclList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramAccessDeclList pprogramaccessdecllistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PProgramAccessDecl pprogramaccessdeclNode3;
        {
            // Block
        }
        pprogramaccessdeclNode3 = (PProgramAccessDecl)nodeArrayList1.get(0);

        pprogramaccessdecllistNode1 = new AProgramAccessDeclList(listNode2, pprogramaccessdeclNode3);
        }
	nodeList.add(pprogramaccessdecllistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new239() /* reduce AAprogramaccessdecllist2ProgramAccessDeclList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramAccessDeclList pprogramaccessdecllistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PProgramAccessDecl pprogramaccessdeclNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pprogramaccessdeclNode4 = (PProgramAccessDecl)nodeArrayList2.get(0);

        pprogramaccessdecllistNode1 = new AProgramAccessDeclList(listNode3, pprogramaccessdeclNode4);
        }
	nodeList.add(pprogramaccessdecllistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new240() /* reduce AProgramAccessDeclListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramAccessDeclListHead pprogramaccessdecllistheadNode1;
        {
            // Block
        PProgramAccessDecl pprogramaccessdeclNode2;
        TSemicolon tsemicolonNode3;
        pprogramaccessdeclNode2 = (PProgramAccessDecl)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        pprogramaccessdecllistheadNode1 = new AProgramAccessDeclListHead(pprogramaccessdeclNode2, tsemicolonNode3);
        }
	nodeList.add(pprogramaccessdecllistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new241() /* reduce AAprogramaccessdecl1ProgramAccessDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramAccessDecl pprogramaccessdeclNode1;
        {
            // Block
        PAccessName paccessnameNode2;
        TColon tcolonNode3;
        PSymbolicVariable psymbolicvariableNode4;
        TColon tcolonNode5;
        PNonGenericTypeName pnongenerictypenameNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        paccessnameNode2 = (PAccessName)nodeArrayList1.get(0);
        tcolonNode3 = (TColon)nodeArrayList2.get(0);
        psymbolicvariableNode4 = (PSymbolicVariable)nodeArrayList3.get(0);
        tcolonNode5 = (TColon)nodeArrayList4.get(0);
        pnongenerictypenameNode6 = (PNonGenericTypeName)nodeArrayList5.get(0);

        pprogramaccessdeclNode1 = new AProgramAccessDecl(paccessnameNode2, tcolonNode3, psymbolicvariableNode4, tcolonNode5, pnongenerictypenameNode6, null);
        }
	nodeList.add(pprogramaccessdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new242() /* reduce AAprogramaccessdecl2ProgramAccessDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProgramAccessDecl pprogramaccessdeclNode1;
        {
            // Block
        PAccessName paccessnameNode2;
        TColon tcolonNode3;
        PSymbolicVariable psymbolicvariableNode4;
        TColon tcolonNode5;
        PNonGenericTypeName pnongenerictypenameNode6;
        TDirection tdirectionNode7;
        paccessnameNode2 = (PAccessName)nodeArrayList1.get(0);
        tcolonNode3 = (TColon)nodeArrayList2.get(0);
        psymbolicvariableNode4 = (PSymbolicVariable)nodeArrayList3.get(0);
        tcolonNode5 = (TColon)nodeArrayList4.get(0);
        pnongenerictypenameNode6 = (PNonGenericTypeName)nodeArrayList5.get(0);
        tdirectionNode7 = (TDirection)nodeArrayList6.get(0);

        pprogramaccessdeclNode1 = new AProgramAccessDecl(paccessnameNode2, tcolonNode3, psymbolicvariableNode4, tcolonNode5, pnongenerictypenameNode6, tdirectionNode7);
        }
	nodeList.add(pprogramaccessdeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new243() /* reduce AOrExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TOrToken tortokenNode3;
        PXorExpression pxorexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tortokenNode3 = (TOrToken)nodeArrayList2.get(0);
        pxorexpressionNode4 = (PXorExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AOrExpression(pexpressionNode2, tortokenNode3, pxorexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new244() /* reduce AUnaryExpressionExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PXorExpression pxorexpressionNode2;
        pxorexpressionNode2 = (PXorExpression)nodeArrayList1.get(0);

        pexpressionNode1 = new AUnaryExpressionExpression(pxorexpressionNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new245() /* reduce AXorXorExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PXorExpression pxorexpressionNode1;
        {
            // Block
        PXorExpression pxorexpressionNode2;
        TXorToken txortokenNode3;
        PAndExpression pandexpressionNode4;
        pxorexpressionNode2 = (PXorExpression)nodeArrayList1.get(0);
        txortokenNode3 = (TXorToken)nodeArrayList2.get(0);
        pandexpressionNode4 = (PAndExpression)nodeArrayList3.get(0);

        pxorexpressionNode1 = new AXorXorExpression(pxorexpressionNode2, txortokenNode3, pandexpressionNode4);
        }
	nodeList.add(pxorexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new246() /* reduce AUnaryXorExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PXorExpression pxorexpressionNode1;
        {
            // Block
        PAndExpression pandexpressionNode2;
        pandexpressionNode2 = (PAndExpression)nodeArrayList1.get(0);

        pxorexpressionNode1 = new AUnaryXorExpression(pandexpressionNode2);
        }
	nodeList.add(pxorexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new247() /* reduce AAndAndExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndExpression pandexpressionNode1;
        {
            // Block
        PAndExpression pandexpressionNode2;
        TAndTokenFull tandtokenfullNode3;
        PComparison pcomparisonNode4;
        pandexpressionNode2 = (PAndExpression)nodeArrayList1.get(0);
        tandtokenfullNode3 = (TAndTokenFull)nodeArrayList2.get(0);
        pcomparisonNode4 = (PComparison)nodeArrayList3.get(0);

        pandexpressionNode1 = new AAndAndExpression(pandexpressionNode2, tandtokenfullNode3, pcomparisonNode4);
        }
	nodeList.add(pandexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new248() /* reduce AUnaryAndExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAndExpression pandexpressionNode1;
        {
            // Block
        PComparison pcomparisonNode2;
        pcomparisonNode2 = (PComparison)nodeArrayList1.get(0);

        pandexpressionNode1 = new AUnaryAndExpression(pcomparisonNode2);
        }
	nodeList.add(pandexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new249() /* reduce AComparisonComparison */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComparison pcomparisonNode1;
        {
            // Block
        PComparison pcomparisonNode2;
        TEqTokenFull teqtokenfullNode3;
        PEquExpression pequexpressionNode4;
        pcomparisonNode2 = (PComparison)nodeArrayList1.get(0);
        teqtokenfullNode3 = (TEqTokenFull)nodeArrayList2.get(0);
        pequexpressionNode4 = (PEquExpression)nodeArrayList3.get(0);

        pcomparisonNode1 = new AComparisonComparison(pcomparisonNode2, teqtokenfullNode3, pequexpressionNode4);
        }
	nodeList.add(pcomparisonNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new250() /* reduce AUnaryComparison */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComparison pcomparisonNode1;
        {
            // Block
        PEquExpression pequexpressionNode2;
        pequexpressionNode2 = (PEquExpression)nodeArrayList1.get(0);

        pcomparisonNode1 = new AUnaryComparison(pequexpressionNode2);
        }
	nodeList.add(pcomparisonNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new251() /* reduce AEquEquExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEquExpression pequexpressionNode1;
        {
            // Block
        PEquExpression pequexpressionNode2;
        TComparisonOperator tcomparisonoperatorNode3;
        PAddExpression paddexpressionNode4;
        pequexpressionNode2 = (PEquExpression)nodeArrayList1.get(0);
        tcomparisonoperatorNode3 = (TComparisonOperator)nodeArrayList2.get(0);
        paddexpressionNode4 = (PAddExpression)nodeArrayList3.get(0);

        pequexpressionNode1 = new AEquEquExpression(pequexpressionNode2, tcomparisonoperatorNode3, paddexpressionNode4);
        }
	nodeList.add(pequexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new252() /* reduce AUnaryEquExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEquExpression pequexpressionNode1;
        {
            // Block
        PAddExpression paddexpressionNode2;
        paddexpressionNode2 = (PAddExpression)nodeArrayList1.get(0);

        pequexpressionNode1 = new AUnaryEquExpression(paddexpressionNode2);
        }
	nodeList.add(pequexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new253() /* reduce AAddAddExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAddExpression paddexpressionNode1;
        {
            // Block
        PAddExpression paddexpressionNode2;
        PAddOperator paddoperatorNode3;
        PTerm ptermNode4;
        paddexpressionNode2 = (PAddExpression)nodeArrayList1.get(0);
        paddoperatorNode3 = (PAddOperator)nodeArrayList2.get(0);
        ptermNode4 = (PTerm)nodeArrayList3.get(0);

        paddexpressionNode1 = new AAddAddExpression(paddexpressionNode2, paddoperatorNode3, ptermNode4);
        }
	nodeList.add(paddexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new254() /* reduce AUnaryAddExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAddExpression paddexpressionNode1;
        {
            // Block
        PTerm ptermNode2;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);

        paddexpressionNode1 = new AUnaryAddExpression(ptermNode2);
        }
	nodeList.add(paddexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new255() /* reduce AAddOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAddOperator paddoperatorNode1;
        {
            // Block
        TSign tsignNode2;
        tsignNode2 = (TSign)nodeArrayList1.get(0);

        paddoperatorNode1 = new AAddOperator(tsignNode2);
        }
	nodeList.add(paddoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new256() /* reduce AMulTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PTerm ptermNode2;
        TMulOperator tmuloperatorNode3;
        PPowerExpression ppowerexpressionNode4;
        ptermNode2 = (PTerm)nodeArrayList1.get(0);
        tmuloperatorNode3 = (TMulOperator)nodeArrayList2.get(0);
        ppowerexpressionNode4 = (PPowerExpression)nodeArrayList3.get(0);

        ptermNode1 = new AMulTerm(ptermNode2, tmuloperatorNode3, ppowerexpressionNode4);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new257() /* reduce ATermTerm */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTerm ptermNode1;
        {
            // Block
        PPowerExpression ppowerexpressionNode2;
        ppowerexpressionNode2 = (PPowerExpression)nodeArrayList1.get(0);

        ptermNode1 = new ATermTerm(ppowerexpressionNode2);
        }
	nodeList.add(ptermNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new258() /* reduce APowerPowerExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPowerExpression ppowerexpressionNode1;
        {
            // Block
        PPowerExpression ppowerexpressionNode2;
        TPowerToken tpowertokenNode3;
        PUnaryExpression punaryexpressionNode4;
        ppowerexpressionNode2 = (PPowerExpression)nodeArrayList1.get(0);
        tpowertokenNode3 = (TPowerToken)nodeArrayList2.get(0);
        punaryexpressionNode4 = (PUnaryExpression)nodeArrayList3.get(0);

        ppowerexpressionNode1 = new APowerPowerExpression(ppowerexpressionNode2, tpowertokenNode3, punaryexpressionNode4);
        }
	nodeList.add(ppowerexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new259() /* reduce AUnaryPowerExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPowerExpression ppowerexpressionNode1;
        {
            // Block
        PUnaryExpression punaryexpressionNode2;
        punaryexpressionNode2 = (PUnaryExpression)nodeArrayList1.get(0);

        ppowerexpressionNode1 = new AUnaryPowerExpression(punaryexpressionNode2);
        }
	nodeList.add(ppowerexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new260() /* reduce AAunaryexpression1UnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnaryExpression punaryexpressionNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PPrimaryExpression pprimaryexpressionNode3;
        {
            // Block
        }
        pprimaryexpressionNode3 = (PPrimaryExpression)nodeArrayList1.get(0);

        punaryexpressionNode1 = new AUnaryExpression(listNode2, pprimaryexpressionNode3);
        }
	nodeList.add(punaryexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new261() /* reduce AAunaryexpression2UnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PUnaryExpression punaryexpressionNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PPrimaryExpression pprimaryexpressionNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pprimaryexpressionNode4 = (PPrimaryExpression)nodeArrayList2.get(0);

        punaryexpressionNode1 = new AUnaryExpression(listNode3, pprimaryexpressionNode4);
        }
	nodeList.add(punaryexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new262() /* reduce AConstantPrimaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrimaryExpression pprimaryexpressionNode1;
        {
            // Block
        PConstant pconstantNode2;
        pconstantNode2 = (PConstant)nodeArrayList1.get(0);

        pprimaryexpressionNode1 = new AConstantPrimaryExpression(pconstantNode2);
        }
	nodeList.add(pprimaryexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new263() /* reduce AVariablePrimaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrimaryExpression pprimaryexpressionNode1;
        {
            // Block
        PVariable pvariableNode2;
        pvariableNode2 = (PVariable)nodeArrayList1.get(0);

        pprimaryexpressionNode1 = new AVariablePrimaryExpression(pvariableNode2);
        }
	nodeList.add(pprimaryexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new264() /* reduce AParenPrimaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrimaryExpression pprimaryexpressionNode1;
        {
            // Block
        TLparen tlparenNode2;
        PExpression pexpressionNode3;
        TRparen trparenNode4;
        tlparenNode2 = (TLparen)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        trparenNode4 = (TRparen)nodeArrayList3.get(0);

        pprimaryexpressionNode1 = new AParenPrimaryExpression(tlparenNode2, pexpressionNode3, trparenNode4);
        }
	nodeList.add(pprimaryexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new265() /* reduce ACallPrimaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrimaryExpression pprimaryexpressionNode1;
        {
            // Block
        PFunctionName pfunctionnameNode2;
        TLparen tlparenNode3;
        PParamAssignmentList pparamassignmentlistNode4;
        TRparen trparenNode5;
        pfunctionnameNode2 = (PFunctionName)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        pparamassignmentlistNode4 = (PParamAssignmentList)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);

        pprimaryexpressionNode1 = new ACallPrimaryExpression(pfunctionnameNode2, tlparenNode3, pparamassignmentlistNode4, trparenNode5);
        }
	nodeList.add(pprimaryexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new266() /* reduce AAparamassignmentlist1ParamAssignmentList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignmentList pparamassignmentlistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PParamAssignment pparamassignmentNode3;
        {
            // Block
        }
        pparamassignmentNode3 = (PParamAssignment)nodeArrayList1.get(0);

        pparamassignmentlistNode1 = new AParamAssignmentList(listNode2, pparamassignmentNode3);
        }
	nodeList.add(pparamassignmentlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new267() /* reduce AAparamassignmentlist2ParamAssignmentList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignmentList pparamassignmentlistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PParamAssignment pparamassignmentNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pparamassignmentNode4 = (PParamAssignment)nodeArrayList2.get(0);

        pparamassignmentlistNode1 = new AParamAssignmentList(listNode3, pparamassignmentNode4);
        }
	nodeList.add(pparamassignmentlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new268() /* reduce AParamAssignmentListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignmentListHead pparamassignmentlistheadNode1;
        {
            // Block
        PParamAssignment pparamassignmentNode2;
        TComma tcommaNode3;
        pparamassignmentNode2 = (PParamAssignment)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        pparamassignmentlistheadNode1 = new AParamAssignmentListHead(pparamassignmentNode2, tcommaNode3);
        }
	nodeList.add(pparamassignmentlistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new269() /* reduce AStatementList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatementList pstatementlistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pstatementlistNode1 = new AStatementList(listNode3);
        }
	nodeList.add(pstatementlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new270() /* reduce AAstatementlisthead1StatementListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatementListHead pstatementlistheadNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TSemicolon tsemicolonNode3;
        tsemicolonNode3 = (TSemicolon)nodeArrayList1.get(0);

        pstatementlistheadNode1 = new AStatementListHead(null, tsemicolonNode3);
        }
	nodeList.add(pstatementlistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new271() /* reduce AAstatementlisthead2StatementListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatementListHead pstatementlistheadNode1;
        {
            // Block
        PStatement pstatementNode2;
        TSemicolon tsemicolonNode3;
        pstatementNode2 = (PStatement)nodeArrayList1.get(0);
        tsemicolonNode3 = (TSemicolon)nodeArrayList2.get(0);

        pstatementlistheadNode1 = new AStatementListHead(pstatementNode2, tsemicolonNode3);
        }
	nodeList.add(pstatementlistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new272() /* reduce AAssignStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TColonEq tcoloneqNode3;
        PExpression pexpressionNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tcoloneqNode3 = (TColonEq)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pstatementNode1 = new AAssignStatement(tidentifierNode2, tcoloneqNode3, pexpressionNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new273() /* reduce AAcallstatement1Statement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TLparen tlparenNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        TRparen trparenNode5;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        trparenNode5 = (TRparen)nodeArrayList3.get(0);

        pstatementNode1 = new ACallStatement(tidentifierNode2, tlparenNode3, null, trparenNode5);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new274() /* reduce AAcallstatement2Statement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TLparen tlparenNode3;
        PParamAssignmentList pparamassignmentlistNode4;
        TRparen trparenNode5;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tlparenNode3 = (TLparen)nodeArrayList2.get(0);
        pparamassignmentlistNode4 = (PParamAssignmentList)nodeArrayList3.get(0);
        trparenNode5 = (TRparen)nodeArrayList4.get(0);

        pstatementNode1 = new ACallStatement(tidentifierNode2, tlparenNode3, pparamassignmentlistNode4, trparenNode5);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new275() /* reduce AAssign2Statement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        PVariableComplex pvariablecomplexNode2;
        TColonEq tcoloneqNode3;
        PExpression pexpressionNode4;
        pvariablecomplexNode2 = (PVariableComplex)nodeArrayList1.get(0);
        tcoloneqNode3 = (TColonEq)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pstatementNode1 = new AAssign2Statement(pvariablecomplexNode2, tcoloneqNode3, pexpressionNode4);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new276() /* reduce AReturnStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        TReturnToken treturntokenNode2;
        treturntokenNode2 = (TReturnToken)nodeArrayList1.get(0);

        pstatementNode1 = new AReturnStatement(treturntokenNode2);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new277() /* reduce ASelectionStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        PSelectionStatement pselectionstatementNode2;
        pselectionstatementNode2 = (PSelectionStatement)nodeArrayList1.get(0);

        pstatementNode1 = new ASelectionStatement(pselectionstatementNode2);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new278() /* reduce AIterStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStatement pstatementNode1;
        {
            // Block
        PIterationStatement piterationstatementNode2;
        piterationstatementNode2 = (PIterationStatement)nodeArrayList1.get(0);

        pstatementNode1 = new AIterStatement(piterationstatementNode2);
        }
	nodeList.add(pstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new279() /* reduce AParamAssignmentLvalue */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignmentLvalue pparamassignmentlvalueNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TColonEq tcoloneqNode3;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tcoloneqNode3 = (TColonEq)nodeArrayList2.get(0);

        pparamassignmentlvalueNode1 = new AParamAssignmentLvalue(tidentifierNode2, tcoloneqNode3);
        }
	nodeList.add(pparamassignmentlvalueNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new280() /* reduce AAexprparamassignment1ParamAssignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignment pparamassignmentNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PExpression pexpressionNode3;
        pexpressionNode3 = (PExpression)nodeArrayList1.get(0);

        pparamassignmentNode1 = new AExprParamAssignment(null, pexpressionNode3);
        }
	nodeList.add(pparamassignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new281() /* reduce AAexprparamassignment2ParamAssignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignment pparamassignmentNode1;
        {
            // Block
        PParamAssignmentLvalue pparamassignmentlvalueNode2;
        PExpression pexpressionNode3;
        pparamassignmentlvalueNode2 = (PParamAssignmentLvalue)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pparamassignmentNode1 = new AExprParamAssignment(pparamassignmentlvalueNode2, pexpressionNode3);
        }
	nodeList.add(pparamassignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new282() /* reduce AAarrowparamassignment1ParamAssignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignment pparamassignmentNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TArrowToken tarrowtokenNode4;
        PVariable pvariableNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tarrowtokenNode4 = (TArrowToken)nodeArrayList2.get(0);
        pvariableNode5 = (PVariable)nodeArrayList3.get(0);

        pparamassignmentNode1 = new AArrowParamAssignment(null, tidentifierNode3, tarrowtokenNode4, pvariableNode5);
        }
	nodeList.add(pparamassignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new283() /* reduce AAarrowparamassignment2ParamAssignment */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParamAssignment pparamassignmentNode1;
        {
            // Block
        TNotToken tnottokenNode2;
        TIdentifier tidentifierNode3;
        TArrowToken tarrowtokenNode4;
        PVariable pvariableNode5;
        tnottokenNode2 = (TNotToken)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tarrowtokenNode4 = (TArrowToken)nodeArrayList3.get(0);
        pvariableNode5 = (PVariable)nodeArrayList4.get(0);

        pparamassignmentNode1 = new AArrowParamAssignment(tnottokenNode2, tidentifierNode3, tarrowtokenNode4, pvariableNode5);
        }
	nodeList.add(pparamassignmentNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new284() /* reduce AIfSelectionStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSelectionStatement pselectionstatementNode1;
        {
            // Block
        PIfStatement pifstatementNode2;
        pifstatementNode2 = (PIfStatement)nodeArrayList1.get(0);

        pselectionstatementNode1 = new AIfSelectionStatement(pifstatementNode2);
        }
	nodeList.add(pselectionstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new285() /* reduce ACaseSelectionStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSelectionStatement pselectionstatementNode1;
        {
            // Block
        PCaseStatement pcasestatementNode2;
        pcasestatementNode2 = (PCaseStatement)nodeArrayList1.get(0);

        pselectionstatementNode1 = new ACaseSelectionStatement(pcasestatementNode2);
        }
	nodeList.add(pselectionstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new286() /* reduce AAifstatement1IfStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfStatement pifstatementNode1;
        {
            // Block
        TIfToken tiftokenNode2;
        PExpression pexpressionNode3;
        TThenToken tthentokenNode4;
        PStatementList pstatementlistNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        TEndIfToken tendiftokenNode8;
        tiftokenNode2 = (TIfToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        tthentokenNode4 = (TThenToken)nodeArrayList3.get(0);
        pstatementlistNode5 = (PStatementList)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tendiftokenNode8 = (TEndIfToken)nodeArrayList5.get(0);

        pifstatementNode1 = new AIfStatement(tiftokenNode2, pexpressionNode3, tthentokenNode4, pstatementlistNode5, listNode6, listNode7, tendiftokenNode8);
        }
	nodeList.add(pifstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new287() /* reduce AAifstatement2IfStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfStatement pifstatementNode1;
        {
            // Block
        TIfToken tiftokenNode2;
        PExpression pexpressionNode3;
        TThenToken tthentokenNode4;
        PStatementList pstatementlistNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TEndIfToken tendiftokenNode9;
        tiftokenNode2 = (TIfToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        tthentokenNode4 = (TThenToken)nodeArrayList3.get(0);
        pstatementlistNode5 = (PStatementList)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        tendiftokenNode9 = (TEndIfToken)nodeArrayList6.get(0);

        pifstatementNode1 = new AIfStatement(tiftokenNode2, pexpressionNode3, tthentokenNode4, pstatementlistNode5, listNode7, listNode8, tendiftokenNode9);
        }
	nodeList.add(pifstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new288() /* reduce AAifstatement3IfStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfStatement pifstatementNode1;
        {
            // Block
        TIfToken tiftokenNode2;
        PExpression pexpressionNode3;
        TThenToken tthentokenNode4;
        PStatementList pstatementlistNode5;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        TEndIfToken tendiftokenNode9;
        tiftokenNode2 = (TIfToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        tthentokenNode4 = (TThenToken)nodeArrayList3.get(0);
        pstatementlistNode5 = (PStatementList)nodeArrayList4.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        listNode7 = (LinkedList)nodeArrayList5.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        tendiftokenNode9 = (TEndIfToken)nodeArrayList6.get(0);

        pifstatementNode1 = new AIfStatement(tiftokenNode2, pexpressionNode3, tthentokenNode4, pstatementlistNode5, listNode6, listNode8, tendiftokenNode9);
        }
	nodeList.add(pifstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new289() /* reduce AAifstatement4IfStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIfStatement pifstatementNode1;
        {
            // Block
        TIfToken tiftokenNode2;
        PExpression pexpressionNode3;
        TThenToken tthentokenNode4;
        PStatementList pstatementlistNode5;
        LinkedList<Object> listNode7 = new LinkedList<Object>();
        LinkedList<Object> listNode9 = new LinkedList<Object>();
        TEndIfToken tendiftokenNode10;
        tiftokenNode2 = (TIfToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        tthentokenNode4 = (TThenToken)nodeArrayList3.get(0);
        pstatementlistNode5 = (PStatementList)nodeArrayList4.get(0);
        {
            // Block
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        listNode6 = (LinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList<Object> listNode8 = new LinkedList<Object>();
        listNode8 = (LinkedList)nodeArrayList6.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        tendiftokenNode10 = (TEndIfToken)nodeArrayList7.get(0);

        pifstatementNode1 = new AIfStatement(tiftokenNode2, pexpressionNode3, tthentokenNode4, pstatementlistNode5, listNode7, listNode9, tendiftokenNode10);
        }
	nodeList.add(pifstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new290() /* reduce AElseifStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElseifStatement pelseifstatementNode1;
        {
            // Block
        TElseIfToken telseiftokenNode2;
        PExpression pexpressionNode3;
        TThenToken tthentokenNode4;
        PStatementList pstatementlistNode5;
        telseiftokenNode2 = (TElseIfToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        tthentokenNode4 = (TThenToken)nodeArrayList3.get(0);
        pstatementlistNode5 = (PStatementList)nodeArrayList4.get(0);

        pelseifstatementNode1 = new AElseifStatement(telseiftokenNode2, pexpressionNode3, tthentokenNode4, pstatementlistNode5);
        }
	nodeList.add(pelseifstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new291() /* reduce AElseStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElseStatement pelsestatementNode1;
        {
            // Block
        TElseToken telsetokenNode2;
        PStatementList pstatementlistNode3;
        telsetokenNode2 = (TElseToken)nodeArrayList1.get(0);
        pstatementlistNode3 = (PStatementList)nodeArrayList2.get(0);

        pelsestatementNode1 = new AElseStatement(telsetokenNode2, pstatementlistNode3);
        }
	nodeList.add(pelsestatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new292() /* reduce ACaseStatementElseClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseStatementElseClause pcasestatementelseclauseNode1;
        {
            // Block
        TElseToken telsetokenNode2;
        PStatementList pstatementlistNode3;
        telsetokenNode2 = (TElseToken)nodeArrayList1.get(0);
        pstatementlistNode3 = (PStatementList)nodeArrayList2.get(0);

        pcasestatementelseclauseNode1 = new ACaseStatementElseClause(telsetokenNode2, pstatementlistNode3);
        }
	nodeList.add(pcasestatementelseclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new293() /* reduce AAcasestatement1CaseStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseStatement pcasestatementNode1;
        {
            // Block
        TCaseToken tcasetokenNode2;
        PExpression pexpressionNode3;
        TOfToken toftokenNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        @SuppressWarnings("unused") Object nullNode7 = null;
        TEndCaseToken tendcasetokenNode8;
        tcasetokenNode2 = (TCaseToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        toftokenNode4 = (TOfToken)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tendcasetokenNode8 = (TEndCaseToken)nodeArrayList5.get(0);

        pcasestatementNode1 = new ACaseStatement(tcasetokenNode2, pexpressionNode3, toftokenNode4, listNode6, null, tendcasetokenNode8);
        }
	nodeList.add(pcasestatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new294() /* reduce AAcasestatement2CaseStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseStatement pcasestatementNode1;
        {
            // Block
        TCaseToken tcasetokenNode2;
        PExpression pexpressionNode3;
        TOfToken toftokenNode4;
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        PCaseStatementElseClause pcasestatementelseclauseNode7;
        TEndCaseToken tendcasetokenNode8;
        tcasetokenNode2 = (TCaseToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        toftokenNode4 = (TOfToken)nodeArrayList3.get(0);
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        pcasestatementelseclauseNode7 = (PCaseStatementElseClause)nodeArrayList5.get(0);
        tendcasetokenNode8 = (TEndCaseToken)nodeArrayList6.get(0);

        pcasestatementNode1 = new ACaseStatement(tcasetokenNode2, pexpressionNode3, toftokenNode4, listNode6, pcasestatementelseclauseNode7, tendcasetokenNode8);
        }
	nodeList.add(pcasestatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new295() /* reduce ACaseElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseElement pcaseelementNode1;
        {
            // Block
        PCaseList pcaselistNode2;
        TColon tcolonNode3;
        PStatementList pstatementlistNode4;
        pcaselistNode2 = (PCaseList)nodeArrayList1.get(0);
        tcolonNode3 = (TColon)nodeArrayList2.get(0);
        pstatementlistNode4 = (PStatementList)nodeArrayList3.get(0);

        pcaseelementNode1 = new ACaseElement(pcaselistNode2, tcolonNode3, pstatementlistNode4);
        }
	nodeList.add(pcaseelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new296() /* reduce AAcaselist1CaseList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseList pcaselistNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        PCaseListElement pcaselistelementNode3;
        {
            // Block
        }
        pcaselistelementNode3 = (PCaseListElement)nodeArrayList1.get(0);

        pcaselistNode1 = new ACaseList(listNode2, pcaselistelementNode3);
        }
	nodeList.add(pcaselistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new297() /* reduce AAcaselist2CaseList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseList pcaselistNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PCaseListElement pcaselistelementNode4;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        pcaselistelementNode4 = (PCaseListElement)nodeArrayList2.get(0);

        pcaselistNode1 = new ACaseList(listNode3, pcaselistelementNode4);
        }
	nodeList.add(pcaselistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new298() /* reduce ACaseListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseListHead pcaselistheadNode1;
        {
            // Block
        PCaseListElement pcaselistelementNode2;
        TComma tcommaNode3;
        pcaselistelementNode2 = (PCaseListElement)nodeArrayList1.get(0);
        tcommaNode3 = (TComma)nodeArrayList2.get(0);

        pcaselistheadNode1 = new ACaseListHead(pcaselistelementNode2, tcommaNode3);
        }
	nodeList.add(pcaselistheadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new299() /* reduce ASubrangeCaseListElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseListElement pcaselistelementNode1;
        {
            // Block
        PSubrange psubrangeNode2;
        psubrangeNode2 = (PSubrange)nodeArrayList1.get(0);

        pcaselistelementNode1 = new ASubrangeCaseListElement(psubrangeNode2);
        }
	nodeList.add(pcaselistelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new300() /* reduce AIntegerCaseListElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCaseListElement pcaselistelementNode1;
        {
            // Block
        TSignedInteger tsignedintegerNode2;
        tsignedintegerNode2 = (TSignedInteger)nodeArrayList1.get(0);

        pcaselistelementNode1 = new AIntegerCaseListElement(tsignedintegerNode2);
        }
	nodeList.add(pcaselistelementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new301() /* reduce AForIterationStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIterationStatement piterationstatementNode1;
        {
            // Block
        PForStatement pforstatementNode2;
        pforstatementNode2 = (PForStatement)nodeArrayList1.get(0);

        piterationstatementNode1 = new AForIterationStatement(pforstatementNode2);
        }
	nodeList.add(piterationstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new302() /* reduce AWhileIterationStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIterationStatement piterationstatementNode1;
        {
            // Block
        PWhileStatement pwhilestatementNode2;
        pwhilestatementNode2 = (PWhileStatement)nodeArrayList1.get(0);

        piterationstatementNode1 = new AWhileIterationStatement(pwhilestatementNode2);
        }
	nodeList.add(piterationstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new303() /* reduce ARepeatIterationStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIterationStatement piterationstatementNode1;
        {
            // Block
        PRepeatStatement prepeatstatementNode2;
        prepeatstatementNode2 = (PRepeatStatement)nodeArrayList1.get(0);

        piterationstatementNode1 = new ARepeatIterationStatement(prepeatstatementNode2);
        }
	nodeList.add(piterationstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new304() /* reduce AExitIterationStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIterationStatement piterationstatementNode1;
        {
            // Block
        PExitStatement pexitstatementNode2;
        pexitstatementNode2 = (PExitStatement)nodeArrayList1.get(0);

        piterationstatementNode1 = new AExitIterationStatement(pexitstatementNode2);
        }
	nodeList.add(piterationstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new305() /* reduce AForStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PForStatement pforstatementNode1;
        {
            // Block
        TForToken tfortokenNode2;
        PControlVariable pcontrolvariableNode3;
        TColonEq tcoloneqNode4;
        PForList pforlistNode5;
        TDoToken tdotokenNode6;
        PStatementList pstatementlistNode7;
        TEndForToken tendfortokenNode8;
        tfortokenNode2 = (TForToken)nodeArrayList1.get(0);
        pcontrolvariableNode3 = (PControlVariable)nodeArrayList2.get(0);
        tcoloneqNode4 = (TColonEq)nodeArrayList3.get(0);
        pforlistNode5 = (PForList)nodeArrayList4.get(0);
        tdotokenNode6 = (TDoToken)nodeArrayList5.get(0);
        pstatementlistNode7 = (PStatementList)nodeArrayList6.get(0);
        tendfortokenNode8 = (TEndForToken)nodeArrayList7.get(0);

        pforstatementNode1 = new AForStatement(tfortokenNode2, pcontrolvariableNode3, tcoloneqNode4, pforlistNode5, tdotokenNode6, pstatementlistNode7, tendfortokenNode8);
        }
	nodeList.add(pforstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new306() /* reduce AControlVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PControlVariable pcontrolvariableNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pcontrolvariableNode1 = new AControlVariable(tidentifierNode2);
        }
	nodeList.add(pcontrolvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new307() /* reduce AForListByClause */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PForListByClause pforlistbyclauseNode1;
        {
            // Block
        TByToken tbytokenNode2;
        PExpression pexpressionNode3;
        tbytokenNode2 = (TByToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pforlistbyclauseNode1 = new AForListByClause(tbytokenNode2, pexpressionNode3);
        }
	nodeList.add(pforlistbyclauseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new308() /* reduce AAforlist1ForList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PForList pforlistNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TToToken ttotokenNode3;
        PExpression pexpressionNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        ttotokenNode3 = (TToToken)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pforlistNode1 = new AForList(pexpressionNode2, ttotokenNode3, pexpressionNode4, null);
        }
	nodeList.add(pforlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new309() /* reduce AAforlist2ForList */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PForList pforlistNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TToToken ttotokenNode3;
        PExpression pexpressionNode4;
        PForListByClause pforlistbyclauseNode5;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        ttotokenNode3 = (TToToken)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);
        pforlistbyclauseNode5 = (PForListByClause)nodeArrayList4.get(0);

        pforlistNode1 = new AForList(pexpressionNode2, ttotokenNode3, pexpressionNode4, pforlistbyclauseNode5);
        }
	nodeList.add(pforlistNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new310() /* reduce AWhileStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PWhileStatement pwhilestatementNode1;
        {
            // Block
        TWhileToken twhiletokenNode2;
        PExpression pexpressionNode3;
        TDoToken tdotokenNode4;
        PStatementList pstatementlistNode5;
        TEndWhileToken tendwhiletokenNode6;
        twhiletokenNode2 = (TWhileToken)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);
        tdotokenNode4 = (TDoToken)nodeArrayList3.get(0);
        pstatementlistNode5 = (PStatementList)nodeArrayList4.get(0);
        tendwhiletokenNode6 = (TEndWhileToken)nodeArrayList5.get(0);

        pwhilestatementNode1 = new AWhileStatement(twhiletokenNode2, pexpressionNode3, tdotokenNode4, pstatementlistNode5, tendwhiletokenNode6);
        }
	nodeList.add(pwhilestatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new311() /* reduce ARepeatStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRepeatStatement prepeatstatementNode1;
        {
            // Block
        TRepeatToken trepeattokenNode2;
        PStatementList pstatementlistNode3;
        TUntilToken tuntiltokenNode4;
        PExpression pexpressionNode5;
        TEndRepeatToken tendrepeattokenNode6;
        trepeattokenNode2 = (TRepeatToken)nodeArrayList1.get(0);
        pstatementlistNode3 = (PStatementList)nodeArrayList2.get(0);
        tuntiltokenNode4 = (TUntilToken)nodeArrayList3.get(0);
        pexpressionNode5 = (PExpression)nodeArrayList4.get(0);
        tendrepeattokenNode6 = (TEndRepeatToken)nodeArrayList5.get(0);

        prepeatstatementNode1 = new ARepeatStatement(trepeattokenNode2, pstatementlistNode3, tuntiltokenNode4, pexpressionNode5, tendrepeattokenNode6);
        }
	nodeList.add(prepeatstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new312() /* reduce AExitStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExitStatement pexitstatementNode1;
        {
            // Block
        TExitToken texittokenNode2;
        texittokenNode2 = (TExitToken)nodeArrayList1.get(0);

        pexitstatementNode1 = new AExitStatement(texittokenNode2);
        }
	nodeList.add(pexitstatementNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new313() /* reduce ATerminal$LibraryElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PLibraryElementDeclaration plibraryelementdeclarationNode1;
        plibraryelementdeclarationNode1 = (PLibraryElementDeclaration)nodeArrayList1.get(0);
	if(plibraryelementdeclarationNode1 != null)
	{
	  listNode2.add(plibraryelementdeclarationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new314() /* reduce ANonTerminal$LibraryElementDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PLibraryElementDeclaration plibraryelementdeclarationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plibraryelementdeclarationNode2 = (PLibraryElementDeclaration)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plibraryelementdeclarationNode2 != null)
	{
	  listNode3.add(plibraryelementdeclarationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new315() /* reduce ATerminal$DataTypeDeclarationElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDataTypeDeclarationElement pdatatypedeclarationelementNode1;
        pdatatypedeclarationelementNode1 = (PDataTypeDeclarationElement)nodeArrayList1.get(0);
	if(pdatatypedeclarationelementNode1 != null)
	{
	  listNode2.add(pdatatypedeclarationelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new316() /* reduce ANonTerminal$DataTypeDeclarationElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDataTypeDeclarationElement pdatatypedeclarationelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdatatypedeclarationelementNode2 = (PDataTypeDeclarationElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdatatypedeclarationelementNode2 != null)
	{
	  listNode3.add(pdatatypedeclarationelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new317() /* reduce ATerminal$SubrangeListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PSubrangeListHead psubrangelistheadNode1;
        psubrangelistheadNode1 = (PSubrangeListHead)nodeArrayList1.get(0);
	if(psubrangelistheadNode1 != null)
	{
	  listNode2.add(psubrangelistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new318() /* reduce ANonTerminal$SubrangeListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PSubrangeListHead psubrangelistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psubrangelistheadNode2 = (PSubrangeListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psubrangelistheadNode2 != null)
	{
	  listNode3.add(psubrangelistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new319() /* reduce ATerminal$ArrayInitialElementsListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PArrayInitialElementsListHead parrayinitialelementslistheadNode1;
        parrayinitialelementslistheadNode1 = (PArrayInitialElementsListHead)nodeArrayList1.get(0);
	if(parrayinitialelementslistheadNode1 != null)
	{
	  listNode2.add(parrayinitialelementslistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new320() /* reduce ANonTerminal$ArrayInitialElementsListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PArrayInitialElementsListHead parrayinitialelementslistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        parrayinitialelementslistheadNode2 = (PArrayInitialElementsListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(parrayinitialelementslistheadNode2 != null)
	{
	  listNode3.add(parrayinitialelementslistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new321() /* reduce ATerminal$StructureElementDeclarationListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PStructureElementDeclarationListHead pstructureelementdeclarationlistheadNode1;
        pstructureelementdeclarationlistheadNode1 = (PStructureElementDeclarationListHead)nodeArrayList1.get(0);
	if(pstructureelementdeclarationlistheadNode1 != null)
	{
	  listNode2.add(pstructureelementdeclarationlistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new322() /* reduce ANonTerminal$StructureElementDeclarationListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PStructureElementDeclarationListHead pstructureelementdeclarationlistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstructureelementdeclarationlistheadNode2 = (PStructureElementDeclarationListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstructureelementdeclarationlistheadNode2 != null)
	{
	  listNode3.add(pstructureelementdeclarationlistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new323() /* reduce ATerminal$StructureElementInitializationListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PStructureElementInitializationListHead pstructureelementinitializationlistheadNode1;
        pstructureelementinitializationlistheadNode1 = (PStructureElementInitializationListHead)nodeArrayList1.get(0);
	if(pstructureelementinitializationlistheadNode1 != null)
	{
	  listNode2.add(pstructureelementinitializationlistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new324() /* reduce ANonTerminal$StructureElementInitializationListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PStructureElementInitializationListHead pstructureelementinitializationlistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstructureelementinitializationlistheadNode2 = (PStructureElementInitializationListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstructureelementinitializationlistheadNode2 != null)
	{
	  listNode3.add(pstructureelementinitializationlistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new325() /* reduce ATerminal$PrefixedInteger */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PPrefixedInteger pprefixedintegerNode1;
        pprefixedintegerNode1 = (PPrefixedInteger)nodeArrayList1.get(0);
	if(pprefixedintegerNode1 != null)
	{
	  listNode2.add(pprefixedintegerNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new326() /* reduce ANonTerminal$PrefixedInteger */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PPrefixedInteger pprefixedintegerNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pprefixedintegerNode2 = (PPrefixedInteger)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pprefixedintegerNode2 != null)
	{
	  listNode3.add(pprefixedintegerNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new327() /* reduce ATerminal$SubscriptListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PSubscriptListHead psubscriptlistheadNode1;
        psubscriptlistheadNode1 = (PSubscriptListHead)nodeArrayList1.get(0);
	if(psubscriptlistheadNode1 != null)
	{
	  listNode2.add(psubscriptlistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new328() /* reduce ANonTerminal$SubscriptListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PSubscriptListHead psubscriptlistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        psubscriptlistheadNode2 = (PSubscriptListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(psubscriptlistheadNode2 != null)
	{
	  listNode3.add(psubscriptlistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new329() /* reduce ATerminal$VarInitDeclsHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVarInitDeclsHead pvarinitdeclsheadNode1;
        pvarinitdeclsheadNode1 = (PVarInitDeclsHead)nodeArrayList1.get(0);
	if(pvarinitdeclsheadNode1 != null)
	{
	  listNode2.add(pvarinitdeclsheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new330() /* reduce ANonTerminal$VarInitDeclsHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVarInitDeclsHead pvarinitdeclsheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvarinitdeclsheadNode2 = (PVarInitDeclsHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvarinitdeclsheadNode2 != null)
	{
	  listNode3.add(pvarinitdeclsheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new331() /* reduce ATerminal$Var1ListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PVar1ListHead pvar1listheadNode1;
        pvar1listheadNode1 = (PVar1ListHead)nodeArrayList1.get(0);
	if(pvar1listheadNode1 != null)
	{
	  listNode2.add(pvar1listheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new332() /* reduce ANonTerminal$Var1ListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PVar1ListHead pvar1listheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pvar1listheadNode2 = (PVar1ListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pvar1listheadNode2 != null)
	{
	  listNode3.add(pvar1listheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new333() /* reduce ATerminal$LocatedVarDeclListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PLocatedVarDeclListHead plocatedvardecllistheadNode1;
        plocatedvardecllistheadNode1 = (PLocatedVarDeclListHead)nodeArrayList1.get(0);
	if(plocatedvardecllistheadNode1 != null)
	{
	  listNode2.add(plocatedvardecllistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new334() /* reduce ANonTerminal$LocatedVarDeclListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PLocatedVarDeclListHead plocatedvardecllistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plocatedvardecllistheadNode2 = (PLocatedVarDeclListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plocatedvardecllistheadNode2 != null)
	{
	  listNode3.add(plocatedvardecllistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new335() /* reduce ATerminal$FunctionVarDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PFunctionVarDeclaration pfunctionvardeclarationNode1;
        pfunctionvardeclarationNode1 = (PFunctionVarDeclaration)nodeArrayList1.get(0);
	if(pfunctionvardeclarationNode1 != null)
	{
	  listNode2.add(pfunctionvardeclarationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new336() /* reduce ANonTerminal$FunctionVarDeclaration */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PFunctionVarDeclaration pfunctionvardeclarationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfunctionvardeclarationNode2 = (PFunctionVarDeclaration)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfunctionvardeclarationNode2 != null)
	{
	  listNode3.add(pfunctionvardeclarationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new337() /* reduce ATerminal$FunctionBlockVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PFunctionBlockVarDeclarations pfunctionblockvardeclarationsNode1;
        pfunctionblockvardeclarationsNode1 = (PFunctionBlockVarDeclarations)nodeArrayList1.get(0);
	if(pfunctionblockvardeclarationsNode1 != null)
	{
	  listNode2.add(pfunctionblockvardeclarationsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new338() /* reduce ANonTerminal$FunctionBlockVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PFunctionBlockVarDeclarations pfunctionblockvardeclarationsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfunctionblockvardeclarationsNode2 = (PFunctionBlockVarDeclarations)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfunctionblockvardeclarationsNode2 != null)
	{
	  listNode3.add(pfunctionblockvardeclarationsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new339() /* reduce ATerminal$ProgramVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PProgramVarDeclarations pprogramvardeclarationsNode1;
        pprogramvardeclarationsNode1 = (PProgramVarDeclarations)nodeArrayList1.get(0);
	if(pprogramvardeclarationsNode1 != null)
	{
	  listNode2.add(pprogramvardeclarationsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new340() /* reduce ANonTerminal$ProgramVarDeclarations */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PProgramVarDeclarations pprogramvardeclarationsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pprogramvardeclarationsNode2 = (PProgramVarDeclarations)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pprogramvardeclarationsNode2 != null)
	{
	  listNode3.add(pprogramvardeclarationsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new341() /* reduce ATerminal$ProgramAccessDeclListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PProgramAccessDeclListHead pprogramaccessdecllistheadNode1;
        pprogramaccessdecllistheadNode1 = (PProgramAccessDeclListHead)nodeArrayList1.get(0);
	if(pprogramaccessdecllistheadNode1 != null)
	{
	  listNode2.add(pprogramaccessdecllistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new342() /* reduce ANonTerminal$ProgramAccessDeclListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PProgramAccessDeclListHead pprogramaccessdecllistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pprogramaccessdecllistheadNode2 = (PProgramAccessDeclListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pprogramaccessdecllistheadNode2 != null)
	{
	  listNode3.add(pprogramaccessdecllistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new343() /* reduce ATerminal$UnaryOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        TUnaryOperator tunaryoperatorNode1;
        tunaryoperatorNode1 = (TUnaryOperator)nodeArrayList1.get(0);
	if(tunaryoperatorNode1 != null)
	{
	  listNode2.add(tunaryoperatorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new344() /* reduce ANonTerminal$UnaryOperator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        TUnaryOperator tunaryoperatorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tunaryoperatorNode2 = (TUnaryOperator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tunaryoperatorNode2 != null)
	{
	  listNode3.add(tunaryoperatorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new345() /* reduce ATerminal$ParamAssignmentListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PParamAssignmentListHead pparamassignmentlistheadNode1;
        pparamassignmentlistheadNode1 = (PParamAssignmentListHead)nodeArrayList1.get(0);
	if(pparamassignmentlistheadNode1 != null)
	{
	  listNode2.add(pparamassignmentlistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new346() /* reduce ANonTerminal$ParamAssignmentListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PParamAssignmentListHead pparamassignmentlistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparamassignmentlistheadNode2 = (PParamAssignmentListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparamassignmentlistheadNode2 != null)
	{
	  listNode3.add(pparamassignmentlistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new347() /* reduce ATerminal$StatementListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PStatementListHead pstatementlistheadNode1;
        pstatementlistheadNode1 = (PStatementListHead)nodeArrayList1.get(0);
	if(pstatementlistheadNode1 != null)
	{
	  listNode2.add(pstatementlistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new348() /* reduce ANonTerminal$StatementListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PStatementListHead pstatementlistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pstatementlistheadNode2 = (PStatementListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pstatementlistheadNode2 != null)
	{
	  listNode3.add(pstatementlistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new349() /* reduce ATerminal$ElseifStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PElseifStatement pelseifstatementNode1;
        pelseifstatementNode1 = (PElseifStatement)nodeArrayList1.get(0);
	if(pelseifstatementNode1 != null)
	{
	  listNode2.add(pelseifstatementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new350() /* reduce ANonTerminal$ElseifStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PElseifStatement pelseifstatementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pelseifstatementNode2 = (PElseifStatement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pelseifstatementNode2 != null)
	{
	  listNode3.add(pelseifstatementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new351() /* reduce ATerminal$ElseStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PElseStatement pelsestatementNode1;
        pelsestatementNode1 = (PElseStatement)nodeArrayList1.get(0);
	if(pelsestatementNode1 != null)
	{
	  listNode2.add(pelsestatementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new352() /* reduce ANonTerminal$ElseStatement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PElseStatement pelsestatementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pelsestatementNode2 = (PElseStatement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pelsestatementNode2 != null)
	{
	  listNode3.add(pelsestatementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new353() /* reduce ATerminal$CaseElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCaseElement pcaseelementNode1;
        pcaseelementNode1 = (PCaseElement)nodeArrayList1.get(0);
	if(pcaseelementNode1 != null)
	{
	  listNode2.add(pcaseelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new354() /* reduce ANonTerminal$CaseElement */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCaseElement pcaseelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcaseelementNode2 = (PCaseElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcaseelementNode2 != null)
	{
	  listNode3.add(pcaseelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new355() /* reduce ATerminal$CaseListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PCaseListHead pcaselistheadNode1;
        pcaselistheadNode1 = (PCaseListHead)nodeArrayList1.get(0);
	if(pcaselistheadNode1 != null)
	{
	  listNode2.add(pcaselistheadNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new356() /* reduce ANonTerminal$CaseListHead */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PCaseListHead pcaselistheadNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcaselistheadNode2 = (PCaseListHead)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcaselistheadNode2 != null)
	{
	  listNode3.add(pcaselistheadNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 0}, {57, SHIFT, 1}, {72, SHIFT, 2}, {74, SHIFT, 3}, {76, SHIFT, 4}, },
			{{-1, ERROR, 1}, {28, SHIFT, 12}, },
			{{-1, ERROR, 2}, {28, SHIFT, 21}, },
			{{-1, ERROR, 3}, {28, SHIFT, 23}, },
			{{-1, ERROR, 4}, {28, SHIFT, 25}, },
			{{-1, ERROR, 5}, {106, ACCEPT, -1}, },
			{{-1, REDUCE, 313}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 1}, {57, SHIFT, 1}, {72, SHIFT, 2}, {74, SHIFT, 3}, {76, SHIFT, 4}, },
			{{-1, ERROR, 12}, {7, SHIFT, 28}, },
			{{-1, REDUCE, 315}, },
			{{-1, ERROR, 14}, {8, SHIFT, 29}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 92}, },
			{{-1, ERROR, 20}, {28, SHIFT, 12}, {58, SHIFT, 30}, },
			{{-1, REDUCE, 207}, },
			{{-1, ERROR, 22}, {7, SHIFT, 32}, },
			{{-1, REDUCE, 220}, },
			{{-1, ERROR, 24}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {63, SHIFT, 37}, {66, SHIFT, 38}, {67, SHIFT, 39}, {68, SHIFT, 40}, {69, SHIFT, 41}, {70, SHIFT, 42}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 229}, },
			{{-1, ERROR, 26}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {63, SHIFT, 76}, {66, SHIFT, 38}, {67, SHIFT, 39}, {68, SHIFT, 40}, {69, SHIFT, 41}, {70, SHIFT, 42}, {71, SHIFT, 77}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 314}, },
			{{-1, ERROR, 28}, {28, SHIFT, 85}, {37, SHIFT, 86}, {38, SHIFT, 87}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, {59, SHIFT, 94}, {61, SHIFT, 95}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 316}, },
			{{-1, ERROR, 32}, {28, SHIFT, 107}, {37, SHIFT, 108}, {38, SHIFT, 109}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, },
			{{-1, REDUCE, 270}, },
			{{-1, ERROR, 34}, {97, SHIFT, 113}, },
			{{-1, REDUCE, 276}, },
			{{-1, REDUCE, 147}, {9, SHIFT, 114}, {12, SHIFT, 115}, },
			{{-1, ERROR, 37}, {28, SHIFT, 116}, {65, SHIFT, 117}, {103, SHIFT, 118}, },
			{{-1, ERROR, 38}, {103, SHIFT, 127}, },
			{{-1, ERROR, 39}, {103, SHIFT, 128}, },
			{{-1, ERROR, 40}, {28, SHIFT, 116}, },
			{{-1, ERROR, 41}, {28, SHIFT, 116}, {65, SHIFT, 130}, },
			{{-1, ERROR, 42}, {28, SHIFT, 116}, },
			{{-1, ERROR, 43}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 44}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 45}, {28, SHIFT, 183}, },
			{{-1, ERROR, 46}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 47}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 312}, },
			{{-1, ERROR, 49}, {9, SHIFT, 187}, },
			{{-1, ERROR, 50}, {4, SHIFT, 188}, {14, SHIFT, 189}, },
			{{-1, REDUCE, 146}, },
			{{-1, REDUCE, 145}, },
			{{-1, REDUCE, 214}, },
			{{-1, REDUCE, 215}, },
			{{-1, REDUCE, 216}, },
			{{-1, REDUCE, 226}, },
			{{-1, REDUCE, 225}, },
			{{-1, REDUCE, 227}, },
			{{-1, REDUCE, 223}, },
			{{-1, REDUCE, 337}, },
			{{-1, REDUCE, 224}, },
			{{-1, ERROR, 62}, {75, SHIFT, 191}, },
			{{-1, REDUCE, 228}, },
			{{-1, REDUCE, 347}, },
			{{-1, ERROR, 65}, {8, SHIFT, 192}, },
			{{-1, REDUCE, 277}, },
			{{-1, REDUCE, 284}, },
			{{-1, REDUCE, 285}, },
			{{-1, REDUCE, 278}, },
			{{-1, REDUCE, 301}, },
			{{-1, REDUCE, 302}, },
			{{-1, REDUCE, 303}, },
			{{-1, REDUCE, 304}, },
			{{-1, ERROR, 74}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {63, SHIFT, 37}, {66, SHIFT, 38}, {67, SHIFT, 39}, {68, SHIFT, 40}, {69, SHIFT, 41}, {70, SHIFT, 42}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 269}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, ERROR, 76}, {28, SHIFT, 196}, {65, SHIFT, 117}, {78, SHIFT, 197}, {103, SHIFT, 118}, },
			{{-1, ERROR, 77}, {28, SHIFT, 204}, },
			{{-1, REDUCE, 235}, },
			{{-1, REDUCE, 233}, },
			{{-1, REDUCE, 234}, },
			{{-1, ERROR, 81}, {77, SHIFT, 210}, },
			{{-1, REDUCE, 339}, },
			{{-1, REDUCE, 236}, },
			{{-1, ERROR, 84}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {63, SHIFT, 76}, {66, SHIFT, 38}, {67, SHIFT, 39}, {68, SHIFT, 40}, {69, SHIFT, 41}, {70, SHIFT, 42}, {71, SHIFT, 77}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 122}, {9, SHIFT, 213}, },
			{{-1, REDUCE, 12}, {14, REDUCE, 137}, },
			{{-1, REDUCE, 13}, {14, REDUCE, 138}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 10}, {100, SHIFT, 215}, },
			{{-1, ERROR, 94}, {14, SHIFT, 216}, },
			{{-1, ERROR, 95}, {28, SHIFT, 217}, },
			{{-1, REDUCE, 99}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 95}, },
			{{-1, REDUCE, 97}, {9, SHIFT, 223}, },
			{{-1, REDUCE, 93}, },
			{{-1, REDUCE, 105}, {9, SHIFT, 225}, },
			{{-1, REDUCE, 118}, },
			{{-1, REDUCE, 120}, },
			{{-1, REDUCE, 119}, },
			{{-1, ERROR, 106}, {14, SHIFT, 227}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 210}, },
			{{-1, REDUCE, 211}, },
			{{-1, ERROR, 112}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {63, SHIFT, 37}, {66, SHIFT, 38}, {67, SHIFT, 39}, {68, SHIFT, 40}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, ERROR, 113}, {34, SHIFT, 235}, {98, SHIFT, 236}, },
			{{-1, ERROR, 114}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 115}, {0, SHIFT, 133}, {12, SHIFT, 134}, {13, SHIFT, 238}, {16, SHIFT, 34}, {23, SHIFT, 135}, {24, SHIFT, 239}, {28, SHIFT, 240}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 181}, {11, SHIFT, 247}, },
			{{-1, REDUCE, 185}, },
			{{-1, REDUCE, 186}, },
			{{-1, ERROR, 119}, {64, SHIFT, 248}, },
			{{-1, REDUCE, 329}, },
			{{-1, REDUCE, 170}, {8, SHIFT, 249}, },
			{{-1, ERROR, 122}, {7, SHIFT, 250}, {99, SHIFT, 251}, },
			{{-1, REDUCE, 331}, },
			{{-1, ERROR, 124}, {28, SHIFT, 116}, },
			{{-1, ERROR, 125}, {28, SHIFT, 116}, },
			{{-1, ERROR, 126}, {28, SHIFT, 255}, },
			{{-1, ERROR, 127}, {28, SHIFT, 116}, },
			{{-1, ERROR, 128}, {28, SHIFT, 116}, },
			{{-1, ERROR, 129}, {64, SHIFT, 259}, },
			{{-1, ERROR, 130}, {28, SHIFT, 116}, },
			{{-1, ERROR, 131}, {64, SHIFT, 261}, },
			{{-1, ERROR, 132}, {64, SHIFT, 262}, },
			{{-1, REDUCE, 38}, },
			{{-1, ERROR, 134}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 343}, },
			{{-1, REDUCE, 147}, {12, REDUCE, 207}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 42}, },
			{{-1, ERROR, 139}, {4, SHIFT, 264}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 142}, {3, SHIFT, 265}, },
			{{-1, ERROR, 143}, {3, SHIFT, 266}, },
			{{-1, ERROR, 144}, {3, SHIFT, 267}, },
			{{-1, ERROR, 145}, {3, SHIFT, 268}, },
			{{-1, ERROR, 146}, {3, SHIFT, 269}, },
			{{-1, ERROR, 147}, {3, SHIFT, 270}, },
			{{-1, ERROR, 148}, {3, SHIFT, 271}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 150}, {3, SHIFT, 272}, },
			{{-1, REDUCE, 262}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 153}, {35, SHIFT, 273}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 155}, {33, SHIFT, 274}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 157}, {36, SHIFT, 275}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 159}, {0, SHIFT, 276}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 263}, },
			{{-1, REDUCE, 144}, {4, SHIFT, 277}, {14, SHIFT, 189}, },
			{{-1, REDUCE, 143}, },
			{{-1, ERROR, 170}, {12, SHIFT, 279}, },
			{{-1, ERROR, 171}, {17, SHIFT, 280}, {80, SHIFT, 281}, },
			{{-1, REDUCE, 244}, {18, SHIFT, 282}, },
			{{-1, REDUCE, 246}, {19, SHIFT, 283}, },
			{{-1, REDUCE, 248}, {20, SHIFT, 284}, },
			{{-1, REDUCE, 250}, {21, SHIFT, 285}, },
			{{-1, REDUCE, 252}, {1, SHIFT, 286}, },
			{{-1, REDUCE, 254}, {22, SHIFT, 288}, },
			{{-1, REDUCE, 257}, {25, SHIFT, 289}, },
			{{-1, REDUCE, 259}, },
			{{-1, REDUCE, 260}, },
			{{-1, ERROR, 181}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 290}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 182}, {17, SHIFT, 280}, {60, SHIFT, 292}, },
			{{-1, REDUCE, 306}, },
			{{-1, ERROR, 184}, {9, SHIFT, 293}, },
			{{-1, ERROR, 185}, {17, SHIFT, 280}, {87, SHIFT, 294}, },
			{{-1, ERROR, 186}, {95, SHIFT, 295}, },
			{{-1, ERROR, 187}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 188}, {28, SHIFT, 297}, },
			{{-1, ERROR, 189}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 148}, {9, REDUCE, 150}, },
			{{-1, REDUCE, 221}, },
			{{-1, REDUCE, 271}, },
			{{-1, REDUCE, 338}, },
			{{-1, ERROR, 194}, {75, SHIFT, 303}, },
			{{-1, REDUCE, 348}, },
			{{-1, REDUCE, 181}, {11, SHIFT, 247}, {78, SHIFT, 197}, },
			{{-1, ERROR, 197}, {16, SHIFT, 34}, },
			{{-1, ERROR, 198}, {28, SHIFT, 196}, {78, SHIFT, 197}, },
			{{-1, ERROR, 199}, {64, SHIFT, 307}, },
			{{-1, REDUCE, 333}, },
			{{-1, REDUCE, 189}, {8, SHIFT, 308}, },
			{{-1, ERROR, 202}, {7, SHIFT, 309}, },
			{{-1, ERROR, 203}, {28, SHIFT, 310}, {78, SHIFT, 197}, },
			{{-1, REDUCE, 230}, },
			{{-1, ERROR, 205}, {7, SHIFT, 313}, },
			{{-1, ERROR, 206}, {64, SHIFT, 314}, },
			{{-1, REDUCE, 341}, },
			{{-1, REDUCE, 238}, {8, SHIFT, 315}, },
			{{-1, ERROR, 209}, {28, SHIFT, 204}, },
			{{-1, REDUCE, 231}, },
			{{-1, ERROR, 211}, {77, SHIFT, 318}, },
			{{-1, REDUCE, 340}, },
			{{-1, ERROR, 213}, {12, SHIFT, 319}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 216}, {33, SHIFT, 321}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 218}, {7, SHIFT, 326}, },
			{{-1, ERROR, 219}, {62, SHIFT, 327}, },
			{{-1, REDUCE, 321}, },
			{{-1, REDUCE, 125}, {8, SHIFT, 328}, },
			{{-1, ERROR, 222}, {28, SHIFT, 217}, },
			{{-1, ERROR, 223}, {0, SHIFT, 133}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 98}, },
			{{-1, ERROR, 225}, {14, SHIFT, 332}, },
			{{-1, REDUCE, 106}, },
			{{-1, ERROR, 227}, {34, SHIFT, 334}, },
			{{-1, REDUCE, 141}, {9, SHIFT, 335}, },
			{{-1, REDUCE, 213}, },
			{{-1, REDUCE, 335}, },
			{{-1, REDUCE, 212}, },
			{{-1, ERROR, 232}, {73, SHIFT, 337}, },
			{{-1, REDUCE, 217}, },
			{{-1, ERROR, 234}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {63, SHIFT, 37}, {66, SHIFT, 38}, {67, SHIFT, 39}, {68, SHIFT, 40}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 152}, {4, SHIFT, 340}, },
			{{-1, ERROR, 236}, {34, SHIFT, 343}, },
			{{-1, REDUCE, 272}, {17, SHIFT, 280}, },
			{{-1, REDUCE, 273}, },
			{{-1, ERROR, 239}, {28, SHIFT, 344}, },
			{{-1, REDUCE, 147}, {9, SHIFT, 345}, {12, REDUCE, 207}, {27, SHIFT, 346}, },
			{{-1, REDUCE, 280}, {17, SHIFT, 280}, },
			{{-1, ERROR, 242}, {13, SHIFT, 347}, },
			{{-1, REDUCE, 345}, },
			{{-1, ERROR, 244}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 266}, {11, SHIFT, 349}, },
			{{-1, ERROR, 246}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {24, SHIFT, 239}, {28, SHIFT, 240}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 183}, },
			{{-1, REDUCE, 165}, },
			{{-1, REDUCE, 172}, },
			{{-1, ERROR, 250}, {28, SHIFT, 352}, {37, SHIFT, 353}, {38, SHIFT, 354}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, {59, SHIFT, 94}, },
			{{-1, ERROR, 251}, {7, SHIFT, 361}, },
			{{-1, ERROR, 252}, {64, SHIFT, 362}, },
			{{-1, REDUCE, 330}, },
			{{-1, REDUCE, 171}, {8, SHIFT, 249}, },
			{{-1, REDUCE, 182}, {11, SHIFT, 247}, },
			{{-1, REDUCE, 332}, },
			{{-1, ERROR, 257}, {64, SHIFT, 363}, },
			{{-1, ERROR, 258}, {64, SHIFT, 364}, },
			{{-1, REDUCE, 164}, },
			{{-1, ERROR, 260}, {64, SHIFT, 365}, },
			{{-1, REDUCE, 167}, },
			{{-1, REDUCE, 169}, },
			{{-1, ERROR, 263}, {13, SHIFT, 366}, {17, SHIFT, 280}, },
			{{-1, ERROR, 264}, {34, SHIFT, 367}, },
			{{-1, ERROR, 265}, {5, SHIFT, 368}, {34, SHIFT, 369}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 269}, {34, SHIFT, 376}, },
			{{-1, ERROR, 270}, {34, SHIFT, 379}, },
			{{-1, ERROR, 271}, {34, SHIFT, 379}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 274}, {4, SHIFT, 383}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 39}, },
			{{-1, ERROR, 277}, {28, SHIFT, 297}, },
			{{-1, REDUCE, 148}, },
			{{-1, ERROR, 279}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {24, SHIFT, 239}, {28, SHIFT, 240}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 280}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 281}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, ERROR, 282}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 283}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 284}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 285}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 255}, },
			{{-1, ERROR, 287}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 288}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 289}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 344}, },
			{{-1, REDUCE, 261}, },
			{{-1, ERROR, 292}, {33, SHIFT, 395}, },
			{{-1, ERROR, 293}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 294}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, ERROR, 295}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 275}, {17, SHIFT, 280}, },
			{{-1, REDUCE, 161}, },
			{{-1, REDUCE, 149}, {9, REDUCE, 151}, },
			{{-1, REDUCE, 327}, },
			{{-1, ERROR, 300}, {11, SHIFT, 407}, {15, SHIFT, 408}, },
			{{-1, REDUCE, 160}, {17, SHIFT, 280}, },
			{{-1, ERROR, 302}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 222}, },
			{{-1, ERROR, 304}, {7, SHIFT, 411}, },
			{{-1, REDUCE, 199}, },
			{{-1, ERROR, 306}, {64, SHIFT, 412}, },
			{{-1, REDUCE, 187}, },
			{{-1, REDUCE, 191}, },
			{{-1, ERROR, 309}, {28, SHIFT, 85}, {37, SHIFT, 353}, {38, SHIFT, 354}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, {59, SHIFT, 94}, },
			{{-1, ERROR, 310}, {78, SHIFT, 197}, },
			{{-1, REDUCE, 334}, },
			{{-1, REDUCE, 190}, {8, SHIFT, 308}, },
			{{-1, ERROR, 313}, {28, SHIFT, 419}, },
			{{-1, REDUCE, 237}, },
			{{-1, REDUCE, 240}, },
			{{-1, REDUCE, 342}, },
			{{-1, REDUCE, 239}, {8, SHIFT, 315}, },
			{{-1, REDUCE, 232}, },
			{{-1, ERROR, 319}, {28, SHIFT, 217}, },
			{{-1, REDUCE, 121}, },
			{{-1, ERROR, 321}, {10, SHIFT, 426}, },
			{{-1, REDUCE, 101}, {11, SHIFT, 427}, },
			{{-1, ERROR, 323}, {15, SHIFT, 428}, },
			{{-1, REDUCE, 317}, },
			{{-1, ERROR, 325}, {33, SHIFT, 321}, },
			{{-1, ERROR, 326}, {28, SHIFT, 85}, {37, SHIFT, 108}, {38, SHIFT, 109}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, {59, SHIFT, 94}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 127}, },
			{{-1, REDUCE, 322}, },
			{{-1, REDUCE, 126}, {8, SHIFT, 328}, },
			{{-1, REDUCE, 96}, },
			{{-1, ERROR, 332}, {0, SHIFT, 133}, {12, SHIFT, 319}, {14, SHIFT, 332}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {34, SHIFT, 435}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 104}, },
			{{-1, ERROR, 334}, {15, SHIFT, 444}, },
			{{-1, ERROR, 335}, {29, SHIFT, 137}, {30, SHIFT, 138}, },
			{{-1, REDUCE, 142}, },
			{{-1, REDUCE, 208}, },
			{{-1, REDUCE, 336}, },
			{{-1, ERROR, 339}, {73, SHIFT, 446}, },
			{{-1, ERROR, 340}, {34, SHIFT, 447}, },
			{{-1, REDUCE, 325}, },
			{{-1, REDUCE, 154}, {4, SHIFT, 340}, },
			{{-1, REDUCE, 153}, {4, SHIFT, 340}, },
			{{-1, ERROR, 344}, {27, SHIFT, 450}, },
			{{-1, REDUCE, 279}, },
			{{-1, ERROR, 346}, {16, SHIFT, 34}, {28, SHIFT, 419}, },
			{{-1, REDUCE, 274}, },
			{{-1, REDUCE, 281}, {17, SHIFT, 280}, },
			{{-1, REDUCE, 268}, },
			{{-1, REDUCE, 346}, },
			{{-1, REDUCE, 267}, {11, SHIFT, 349}, },
			{{-1, REDUCE, 175}, {9, SHIFT, 213}, },
			{{-1, REDUCE, 12}, {14, SHIFT, 453}, },
			{{-1, REDUCE, 13}, {14, SHIFT, 453}, },
			{{-1, REDUCE, 184}, },
			{{-1, REDUCE, 178}, },
			{{-1, REDUCE, 173}, },
			{{-1, REDUCE, 177}, },
			{{-1, REDUCE, 179}, },
			{{-1, REDUCE, 180}, },
			{{-1, ERROR, 361}, {28, SHIFT, 352}, {37, SHIFT, 353}, {38, SHIFT, 354}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, {59, SHIFT, 94}, },
			{{-1, REDUCE, 166}, },
			{{-1, REDUCE, 162}, },
			{{-1, REDUCE, 163}, },
			{{-1, REDUCE, 168}, },
			{{-1, REDUCE, 264}, },
			{{-1, REDUCE, 30}, {32, SHIFT, 457}, },
			{{-1, ERROR, 368}, {34, SHIFT, 369}, },
			{{-1, ERROR, 369}, {4, SHIFT, 459}, {52, SHIFT, 460}, {53, SHIFT, 461}, {54, SHIFT, 462}, {55, SHIFT, 463}, {56, SHIFT, 464}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 75}, },
			{{-1, REDUCE, 73}, },
			{{-1, ERROR, 378}, {7, SHIFT, 466}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 381}, {5, SHIFT, 467}, },
			{{-1, ERROR, 382}, {5, SHIFT, 468}, },
			{{-1, ERROR, 383}, {34, SHIFT, 469}, },
			{{-1, REDUCE, 149}, },
			{{-1, ERROR, 385}, {13, SHIFT, 470}, },
			{{-1, REDUCE, 243}, {18, SHIFT, 282}, },
			{{-1, ERROR, 387}, {81, SHIFT, 471}, {82, SHIFT, 472}, {83, SHIFT, 473}, },
			{{-1, REDUCE, 245}, {19, SHIFT, 283}, },
			{{-1, REDUCE, 247}, {20, SHIFT, 284}, },
			{{-1, REDUCE, 249}, {21, SHIFT, 285}, },
			{{-1, REDUCE, 251}, {1, SHIFT, 286}, },
			{{-1, REDUCE, 253}, {22, SHIFT, 288}, },
			{{-1, REDUCE, 256}, {25, SHIFT, 289}, },
			{{-1, REDUCE, 258}, },
			{{-1, REDUCE, 300}, {10, SHIFT, 426}, },
			{{-1, REDUCE, 299}, },
			{{-1, REDUCE, 353}, },
			{{-1, ERROR, 398}, {7, SHIFT, 478}, },
			{{-1, REDUCE, 355}, },
			{{-1, REDUCE, 296}, {11, SHIFT, 479}, },
			{{-1, ERROR, 401}, {33, SHIFT, 395}, {83, SHIFT, 480}, {85, SHIFT, 481}, },
			{{-1, ERROR, 402}, {33, SHIFT, 395}, },
			{{-1, ERROR, 403}, {17, SHIFT, 280}, {89, SHIFT, 486}, },
			{{-1, ERROR, 404}, {87, SHIFT, 487}, },
			{{-1, ERROR, 405}, {92, SHIFT, 488}, },
			{{-1, ERROR, 406}, {17, SHIFT, 280}, {94, SHIFT, 489}, },
			{{-1, REDUCE, 159}, },
			{{-1, REDUCE, 157}, },
			{{-1, REDUCE, 328}, },
			{{-1, ERROR, 410}, {11, SHIFT, 407}, {15, SHIFT, 490}, },
			{{-1, ERROR, 411}, {28, SHIFT, 85}, {37, SHIFT, 353}, {38, SHIFT, 354}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, {59, SHIFT, 94}, },
			{{-1, REDUCE, 188}, },
			{{-1, REDUCE, 194}, },
			{{-1, REDUCE, 195}, },
			{{-1, REDUCE, 196}, },
			{{-1, REDUCE, 192}, },
			{{-1, REDUCE, 197}, },
			{{-1, REDUCE, 198}, },
			{{-1, REDUCE, 147}, },
			{{-1, ERROR, 420}, {4, SHIFT, 277}, {7, SHIFT, 492}, {14, SHIFT, 189}, },
			{{-1, ERROR, 421}, {9, SHIFT, 493}, },
			{{-1, ERROR, 422}, {13, SHIFT, 494}, },
			{{-1, REDUCE, 323}, },
			{{-1, REDUCE, 133}, {11, SHIFT, 495}, },
			{{-1, ERROR, 425}, {28, SHIFT, 217}, },
			{{-1, ERROR, 426}, {33, SHIFT, 498}, },
			{{-1, REDUCE, 103}, },
			{{-1, ERROR, 428}, {60, SHIFT, 499}, },
			{{-1, REDUCE, 102}, {11, SHIFT, 427}, },
			{{-1, REDUCE, 318}, },
			{{-1, REDUCE, 129}, },
			{{-1, REDUCE, 130}, },
			{{-1, REDUCE, 131}, },
			{{-1, REDUCE, 128}, },
			{{-1, ERROR, 435}, {12, SHIFT, 500}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 117}, },
			{{-1, ERROR, 438}, {15, SHIFT, 501}, },
			{{-1, REDUCE, 319}, },
			{{-1, REDUCE, 109}, {11, SHIFT, 502}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 116}, },
			{{-1, ERROR, 443}, {0, SHIFT, 133}, {12, SHIFT, 319}, {14, SHIFT, 332}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {34, SHIFT, 435}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 139}, },
			{{-1, REDUCE, 140}, },
			{{-1, REDUCE, 209}, },
			{{-1, REDUCE, 156}, },
			{{-1, REDUCE, 326}, },
			{{-1, REDUCE, 155}, {4, SHIFT, 340}, },
			{{-1, ERROR, 450}, {16, SHIFT, 34}, {28, SHIFT, 419}, },
			{{-1, REDUCE, 282}, },
			{{-1, REDUCE, 176}, },
			{{-1, ERROR, 453}, {34, SHIFT, 506}, },
			{{-1, REDUCE, 202}, {9, SHIFT, 507}, },
			{{-1, REDUCE, 205}, {9, SHIFT, 509}, },
			{{-1, REDUCE, 174}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 459}, {34, SHIFT, 511}, },
			{{-1, REDUCE, 54}, {6, SHIFT, 512}, {34, SHIFT, 513}, },
			{{-1, REDUCE, 59}, {6, SHIFT, 515}, {34, SHIFT, 516}, },
			{{-1, REDUCE, 63}, {6, SHIFT, 518}, {34, SHIFT, 519}, },
			{{-1, REDUCE, 67}, {6, SHIFT, 521}, {34, SHIFT, 522}, },
			{{-1, REDUCE, 71}, },
			{{-1, ERROR, 465}, {52, SHIFT, 524}, {53, SHIFT, 525}, {54, SHIFT, 526}, {55, SHIFT, 527}, {56, SHIFT, 528}, },
			{{-1, ERROR, 466}, {34, SHIFT, 529}, },
			{{-1, ERROR, 467}, {34, SHIFT, 531}, },
			{{-1, ERROR, 468}, {34, SHIFT, 376}, },
			{{-1, REDUCE, 31}, {32, SHIFT, 534}, },
			{{-1, REDUCE, 265}, },
			{{-1, REDUCE, 286}, },
			{{-1, ERROR, 472}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 473}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 349}, },
			{{-1, REDUCE, 351}, },
			{{-1, ERROR, 476}, {81, SHIFT, 537}, {82, SHIFT, 472}, {83, SHIFT, 473}, },
			{{-1, ERROR, 477}, {81, SHIFT, 540}, {83, SHIFT, 473}, },
			{{-1, ERROR, 478}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 298}, },
			{{-1, ERROR, 480}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 293}, },
			{{-1, ERROR, 482}, {85, SHIFT, 544}, },
			{{-1, REDUCE, 354}, },
			{{-1, REDUCE, 356}, },
			{{-1, REDUCE, 297}, {11, SHIFT, 479}, },
			{{-1, ERROR, 486}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, ERROR, 487}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 310}, },
			{{-1, REDUCE, 311}, },
			{{-1, REDUCE, 158}, },
			{{-1, REDUCE, 193}, },
			{{-1, ERROR, 492}, {28, SHIFT, 107}, {37, SHIFT, 108}, {38, SHIFT, 109}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, },
			{{-1, ERROR, 493}, {0, SHIFT, 133}, {12, SHIFT, 319}, {14, SHIFT, 332}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 132}, },
			{{-1, REDUCE, 135}, },
			{{-1, REDUCE, 324}, },
			{{-1, REDUCE, 134}, {11, SHIFT, 495}, },
			{{-1, REDUCE, 100}, },
			{{-1, ERROR, 499}, {28, SHIFT, 107}, {37, SHIFT, 108}, {38, SHIFT, 109}, {39, SHIFT, 88}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 91}, {44, SHIFT, 92}, {45, SHIFT, 93}, },
			{{-1, ERROR, 500}, {0, SHIFT, 133}, {12, SHIFT, 319}, {13, SHIFT, 552}, {14, SHIFT, 332}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 320}, },
			{{-1, REDUCE, 110}, {11, SHIFT, 502}, },
			{{-1, REDUCE, 283}, },
			{{-1, ERROR, 506}, {15, SHIFT, 554}, },
			{{-1, ERROR, 507}, {29, SHIFT, 555}, },
			{{-1, REDUCE, 203}, },
			{{-1, ERROR, 509}, {30, SHIFT, 556}, },
			{{-1, REDUCE, 206}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 512}, {34, SHIFT, 513}, },
			{{-1, ERROR, 513}, {4, SHIFT, 459}, {53, SHIFT, 461}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 515}, {34, SHIFT, 516}, },
			{{-1, ERROR, 516}, {4, SHIFT, 459}, {54, SHIFT, 462}, },
			{{-1, REDUCE, 61}, },
			{{-1, ERROR, 518}, {34, SHIFT, 519}, },
			{{-1, ERROR, 519}, {4, SHIFT, 459}, {55, SHIFT, 463}, },
			{{-1, REDUCE, 65}, },
			{{-1, ERROR, 521}, {34, SHIFT, 522}, },
			{{-1, ERROR, 522}, {4, SHIFT, 459}, {56, SHIFT, 464}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 530}, {7, SHIFT, 565}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 532}, {5, SHIFT, 566}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 535}, {17, SHIFT, 280}, {80, SHIFT, 567}, },
			{{-1, REDUCE, 291}, },
			{{-1, REDUCE, 287}, },
			{{-1, REDUCE, 350}, },
			{{-1, ERROR, 539}, {81, SHIFT, 568}, {83, SHIFT, 473}, },
			{{-1, REDUCE, 288}, },
			{{-1, REDUCE, 352}, },
			{{-1, REDUCE, 295}, },
			{{-1, REDUCE, 292}, },
			{{-1, REDUCE, 294}, },
			{{-1, REDUCE, 308}, {17, SHIFT, 280}, {90, SHIFT, 569}, },
			{{-1, ERROR, 546}, {88, SHIFT, 571}, },
			{{-1, REDUCE, 241}, {105, SHIFT, 572}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 136}, },
			{{-1, REDUCE, 107}, },
			{{-1, REDUCE, 113}, },
			{{-1, ERROR, 553}, {13, SHIFT, 573}, },
			{{-1, REDUCE, 200}, },
			{{-1, REDUCE, 201}, },
			{{-1, REDUCE, 204}, },
			{{-1, REDUCE, 57}, },
			{{-1, ERROR, 558}, {53, SHIFT, 525}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 560}, {54, SHIFT, 526}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 562}, {55, SHIFT, 527}, },
			{{-1, REDUCE, 70}, },
			{{-1, ERROR, 564}, {56, SHIFT, 528}, },
			{{-1, ERROR, 565}, {34, SHIFT, 574}, },
			{{-1, ERROR, 566}, {34, SHIFT, 576}, },
			{{-1, ERROR, 567}, {8, SHIFT, 33}, {16, SHIFT, 34}, {26, SHIFT, 35}, {28, SHIFT, 36}, {79, SHIFT, 43}, {84, SHIFT, 44}, {86, SHIFT, 45}, {91, SHIFT, 46}, {93, SHIFT, 47}, {96, SHIFT, 48}, },
			{{-1, REDUCE, 289}, },
			{{-1, ERROR, 569}, {0, SHIFT, 133}, {12, SHIFT, 134}, {16, SHIFT, 34}, {23, SHIFT, 135}, {28, SHIFT, 136}, {29, SHIFT, 137}, {30, SHIFT, 138}, {33, SHIFT, 139}, {35, SHIFT, 140}, {36, SHIFT, 141}, {40, SHIFT, 142}, {41, SHIFT, 89}, {42, SHIFT, 90}, {43, SHIFT, 143}, {46, SHIFT, 144}, {47, SHIFT, 145}, {48, SHIFT, 146}, {49, SHIFT, 147}, {50, SHIFT, 148}, {51, SHIFT, 149}, },
			{{-1, REDUCE, 309}, },
			{{-1, REDUCE, 305}, },
			{{-1, REDUCE, 242}, },
			{{-1, REDUCE, 114}, },
			{{-1, REDUCE, 77}, {4, SHIFT, 459}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 290}, },
			{{-1, REDUCE, 307}, {17, SHIFT, 280}, },
			{{-1, REDUCE, 78}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 5}, },
			{{-1, 6}, {11, 27}, },
			{{-1, 547}, {499, 551}, },
			{{-1, 96}, {32, 110}, {492, 548}, {499, 548}, },
			{{-1, 97}, },
			{{-1, 150}, {28, 98}, {32, 98}, {250, 98}, {309, 98}, {326, 98}, {361, 98}, {411, 98}, {492, 98}, {499, 98}, },
			{{-1, 151}, {223, 331}, {332, 436}, {443, 436}, {493, 436}, {500, 436}, },
			{{-1, 152}, },
			{{-1, 153}, },
			{{-1, 154}, },
			{{-1, 155}, },
			{{-1, 156}, },
			{{-1, 157}, },
			{{-1, 158}, },
			{{-1, 159}, },
			{{-1, 160}, },
			{{-1, 161}, {335, 445}, },
			{{-1, 162}, },
			{{-1, 163}, },
			{{-1, 370}, {368, 458}, },
			{{-1, 371}, },
			{{-1, 465}, {513, 558}, {516, 560}, {519, 562}, {522, 564}, {574, 580}, },
			{{-1, 372}, {460, 514}, {512, 557}, },
			{{-1, 373}, {461, 517}, {515, 559}, },
			{{-1, 374}, {462, 520}, {518, 561}, },
			{{-1, 375}, {463, 523}, {521, 563}, },
			{{-1, 164}, },
			{{-1, 377}, {468, 533}, },
			{{-1, 378}, },
			{{-1, 530}, },
			{{-1, 575}, },
			{{-1, 165}, },
			{{-1, 380}, {271, 382}, },
			{{-1, 381}, },
			{{-1, 532}, },
			{{-1, 577}, },
			{{-1, 166}, },
			{{-1, 549}, {32, 111}, },
			{{-1, 218}, {319, 421}, {425, 421}, },
			{{-1, 13}, {20, 31}, },
			{{-1, 7}, },
			{{-1, 14}, },
			{{-1, 15}, },
			{{-1, 16}, },
			{{-1, 17}, },
			{{-1, 224}, },
			{{-1, 355}, {28, 99}, {309, 413}, {326, 431}, {411, 413}, },
			{{-1, 100}, },
			{{-1, 396}, {216, 322}, {325, 429}, },
			{{-1, 323}, },
			{{-1, 324}, {325, 430}, },
			{{-1, 226}, },
			{{-1, 356}, {28, 101}, {309, 414}, {326, 432}, {411, 414}, },
			{{-1, 102}, },
			{{-1, 437}, {225, 333}, },
			{{-1, 438}, },
			{{-1, 439}, {443, 503}, },
			{{-1, 440}, {443, 504}, },
			{{-1, 441}, {493, 550}, {500, 553}, },
			{{-1, 18}, },
			{{-1, 103}, },
			{{-1, 214}, {352, 452}, },
			{{-1, 415}, {28, 104}, {326, 433}, },
			{{-1, 105}, },
			{{-1, 219}, },
			{{-1, 220}, {222, 329}, },
			{{-1, 221}, {222, 330}, },
			{{-1, 434}, },
			{{-1, 442}, {213, 320}, },
			{{-1, 422}, },
			{{-1, 423}, {425, 496}, },
			{{-1, 424}, {425, 497}, },
			{{-1, 106}, },
			{{-1, 228}, },
			{{-1, 336}, },
			{{-1, 19}, },
			{{-1, 167}, {346, 451}, {450, 505}, },
			{{-1, 49}, },
			{{-1, 168}, {24, 50}, {26, 50}, {47, 50}, {74, 50}, {75, 50}, {84, 50}, {112, 50}, {234, 50}, {281, 50}, {294, 50}, {313, 420}, {473, 50}, {478, 50}, {480, 50}, {487, 50}, {567, 50}, },
			{{-1, 51}, },
			{{-1, 169}, {24, 52}, {26, 52}, {47, 52}, {74, 52}, {75, 52}, {84, 52}, {112, 52}, {197, 305}, {234, 52}, {281, 52}, {294, 52}, {473, 52}, {478, 52}, {480, 52}, {487, 52}, {567, 52}, },
			{{-1, 341}, {342, 448}, {449, 448}, },
			{{-1, 278}, {50, 190}, },
			{{-1, 299}, {302, 409}, },
			{{-1, 300}, {302, 410}, },
			{{-1, 298}, {277, 384}, },
			{{-1, 53}, },
			{{-1, 54}, },
			{{-1, 55}, },
			{{-1, 56}, {112, 229}, {234, 229}, },
			{{-1, 57}, },
			{{-1, 58}, },
			{{-1, 119}, {40, 129}, {41, 131}, {42, 132}, {124, 252}, {127, 257}, {128, 258}, {130, 260}, {198, 252}, },
			{{-1, 120}, {125, 253}, },
			{{-1, 121}, {125, 254}, },
			{{-1, 357}, {361, 456}, },
			{{-1, 122}, },
			{{-1, 123}, {126, 256}, },
			{{-1, 358}, },
			{{-1, 124}, {76, 198}, },
			{{-1, 78}, },
			{{-1, 199}, {198, 306}, },
			{{-1, 200}, {203, 311}, },
			{{-1, 201}, {203, 312}, },
			{{-1, 416}, {411, 491}, },
			{{-1, 202}, {196, 304}, {310, 304}, },
			{{-1, 454}, {354, 455}, },
			{{-1, 508}, },
			{{-1, 359}, {309, 417}, {411, 417}, },
			{{-1, 510}, },
			{{-1, 360}, {309, 418}, {411, 418}, },
			{{-1, 170}, {2, 22}, },
			{{-1, 8}, },
			{{-1, 112}, },
			{{-1, 230}, {234, 338}, },
			{{-1, 59}, {26, 79}, {84, 79}, {112, 231}, {234, 231}, },
			{{-1, 232}, {234, 339}, },
			{{-1, -1}, },
			{{-1, 24}, },
			{{-1, 9}, },
			{{-1, 60}, {74, 193}, },
			{{-1, 61}, {26, 80}, {84, 80}, },
			{{-1, 62}, {26, 81}, {74, 194}, {84, 211}, },
			{{-1, 26}, },
			{{-1, 205}, },
			{{-1, 10}, },
			{{-1, 82}, {84, 212}, },
			{{-1, 83}, },
			{{-1, 206}, },
			{{-1, 207}, {209, 316}, },
			{{-1, 208}, {209, 317}, },
			{{-1, 241}, {43, 171}, {44, 182}, {46, 185}, {114, 237}, {134, 263}, {187, 296}, {189, 301}, {244, 348}, {293, 403}, {295, 406}, {302, 301}, {472, 535}, {486, 545}, {569, 579}, },
			{{-1, 172}, {280, 386}, },
			{{-1, 173}, {282, 388}, },
			{{-1, 174}, {283, 389}, },
			{{-1, 175}, {284, 390}, },
			{{-1, 176}, {285, 391}, },
			{{-1, 287}, },
			{{-1, 177}, {287, 392}, },
			{{-1, 178}, {288, 393}, },
			{{-1, 179}, {289, 394}, },
			{{-1, 180}, {181, 291}, },
			{{-1, 242}, {279, 385}, },
			{{-1, 243}, {246, 350}, },
			{{-1, 63}, {47, 186}, {112, 233}, {234, 233}, {281, 387}, {294, 405}, {473, 536}, {478, 542}, {480, 543}, {487, 546}, {567, 578}, },
			{{-1, 64}, {75, 195}, },
			{{-1, 65}, },
			{{-1, 244}, },
			{{-1, 245}, {246, 351}, },
			{{-1, 66}, },
			{{-1, 67}, },
			{{-1, 474}, {476, 538}, },
			{{-1, 475}, {477, 541}, {539, 541}, },
			{{-1, 482}, },
			{{-1, 68}, },
			{{-1, 397}, {401, 483}, },
			{{-1, 398}, },
			{{-1, 399}, {402, 484}, },
			{{-1, 400}, {402, 485}, },
			{{-1, 69}, },
			{{-1, 70}, },
			{{-1, 184}, },
			{{-1, 570}, },
			{{-1, 404}, },
			{{-1, 71}, },
			{{-1, 72}, },
			{{-1, 73}, },
			{{-1, 11}, },
			{{-1, 20}, },
			{{-1, 325}, },
			{{-1, 443}, },
			{{-1, 222}, },
			{{-1, 425}, },
			{{-1, 342}, {343, 449}, },
			{{-1, 302}, },
			{{-1, 125}, },
			{{-1, 126}, },
			{{-1, 203}, },
			{{-1, 234}, },
			{{-1, 74}, },
			{{-1, 84}, },
			{{-1, 209}, },
			{{-1, 181}, },
			{{-1, 246}, },
			{{-1, 75}, },
			{{-1, 476}, },
			{{-1, 477}, {476, 539}, },
			{{-1, 401}, },
			{{-1, 402}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'TYPE', 'FUNCTION', 'FUNCTION_BLOCK', 'PROGRAM', EOF",
			"expecting: identifier",
			"expecting: EOF",
			"expecting: ':'",
			"expecting: identifier, 'END_TYPE'",
			"expecting: ';'",
			"expecting: ';', '%', 'RETURN', identifier, 'VAR', 'VAR_INPUT', 'VAR_OUTPUT', 'VAR_IN_OUT', 'VAR_EXTERNAL', 'VAR_TEMP', 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT'",
			"expecting: ';', '%', 'RETURN', identifier, 'VAR', 'VAR_INPUT', 'VAR_OUTPUT', 'VAR_IN_OUT', 'VAR_EXTERNAL', 'VAR_TEMP', 'VAR_ACCESS', 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT'",
			"expecting: identifier, 'STRING', 'WSTRING', 'TIME', signed integer type name, unsigned integer type name, real type name, date type name, bit string type name, 'ARRAY', 'STRUCT'",
			"expecting: identifier, 'STRING', 'WSTRING', 'TIME', signed integer type name, unsigned integer type name, real type name, date type name, bit string type name",
			"expecting: ';', '%', 'RETURN', identifier, signed integer, 'END_FUNCTION', 'END_FUNCTION_BLOCK', 'END_PROGRAM', 'IF', 'END_IF', 'ELSEIF', 'ELSE', 'CASE', 'END_CASE', 'FOR', 'END_FOR', 'WHILE', 'END_WHILE', 'REPEAT', 'UNTIL', 'EXIT'",
			"expecting: location prefix",
			"expecting: '.', ':=', '(', '['",
			"expecting: identifier, 'CONSTANT', retain",
			"expecting: retain",
			"expecting: identifier, 'CONSTANT'",
			"expecting: bit, '(', '%', unary operator, identifier, single byte character string, double byte character string, signed integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: ';', '%', 'RETURN', identifier, 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT'",
			"expecting: ':='",
			"expecting: '.', '['",
			"expecting: 'END_FUNCTION_BLOCK'",
			"expecting: 'END_FUNCTION_BLOCK', 'END_PROGRAM'",
			"expecting: identifier, 'CONSTANT', 'AT', retain",
			"expecting: 'END_PROGRAM'",
			"expecting: ';', ':=', 'END_STRUCT', 'END_VAR'",
			"expecting: ';', ':=', '['",
			"expecting: ';', ':=', '%', 'RETURN', identifier, 'END_STRUCT', 'VAR', 'END_VAR', 'VAR_INPUT', 'VAR_OUTPUT', 'VAR_IN_OUT', 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT', direction",
			"expecting: '#', ';', ':=', '%', 'RETURN', identifier, 'END_STRUCT', 'VAR', 'END_VAR', 'VAR_INPUT', 'VAR_OUTPUT', 'VAR_IN_OUT', 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT', direction",
			"expecting: ';', ':=', '%', 'RETURN', identifier, 'END_STRUCT', 'VAR', 'END_VAR', 'VAR_INPUT', 'VAR_OUTPUT', 'VAR_IN_OUT', 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT', edge, direction",
			"expecting: '['",
			"expecting: ';', '%', 'RETURN', identifier, 'VAR', 'VAR_INPUT', 'VAR_OUTPUT', 'VAR_IN_OUT', 'IF', 'CASE', 'FOR', 'WHILE', 'REPEAT', 'EXIT'",
			"expecting: integer, size prefix",
			"expecting: bit, '(', ')', '%', unary operator, 'NOT', identifier, single byte character string, double byte character string, signed integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: ':', ',', incompl location",
			"expecting: identifier, 'AT'",
			"expecting: 'END_VAR'",
			"expecting: ';', 'END_VAR'",
			"expecting: ':', incompl location",
			"expecting: sign, ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'END_STRUCT', 'END_VAR', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: sign, '.', ';', ',', '(', ')', '[', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: '.'",
			"expecting: '#'",
			"expecting: sign, ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: signed integer literal",
			"expecting: signed integer",
			"expecting: unsigned integer literal",
			"expecting: bit",
			"expecting: sign, '.', ';', ',', ')', '[', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: '('",
			"expecting: 'OR', 'THEN'",
			"expecting: ';', ',', ')', ']', 'OR', 'XOR', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: ';', ',', ')', ']', 'OR', 'XOR', and token full, 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: sign, ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: sign, ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: 'OR', 'OF'",
			"expecting: 'OR', 'DO'",
			"expecting: 'UNTIL'",
			"expecting: '.', ':=', '['",
			"expecting: ':', ',', 'AT', incompl location",
			"expecting: '%'",
			"expecting: ';', 'END_STRUCT', 'END_VAR'",
			"expecting: ':', ':='",
			"expecting: 'END_STRUCT'",
			"expecting: ';', 'END_STRUCT'",
			"expecting: bit, single byte character string, double byte character string, signed integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: integer",
			"expecting: ';', ':='",
			"expecting: 'END_FUNCTION'",
			"expecting: sign, '.', ':', ';', ':=', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: ';', 'OR'",
			"expecting: sign, '.', ':=', ',', '(', ')', '[', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', '=>'",
			"expecting: ',', ')', 'OR'",
			"expecting: ')'",
			"expecting: bit, '(', '%', unary operator, 'NOT', identifier, single byte character string, double byte character string, signed integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: ',', ')'",
			"expecting: identifier, 'STRING', 'WSTRING', 'TIME', signed integer type name, unsigned integer type name, real type name, date type name, bit string type name, 'ARRAY'",
			"expecting: ')', 'OR'",
			"expecting: '-', integer",
			"expecting: sign, '.', ':', ';', ',', ')', '[', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: sign, '.', ':', ';', ':=', ',', ')', '[', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: ',', ']'",
			"expecting: ',', ']', 'OR'",
			"expecting: 'AT'",
			"expecting: '..'",
			"expecting: ']'",
			"expecting: bit, '(', '[', single byte character string, double byte character string, signed integer, integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: single byte character string, double byte character string",
			"expecting: '=>'",
			"expecting: '%', identifier",
			"expecting: ';', ':=', 'END_VAR'",
			"expecting: ';', ':=', '[', 'END_VAR'",
			"expecting: sign, ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', exponent, 'OF', 'END_STRUCT', 'END_VAR', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: '.', 'd', 'h', 'm', 's', 'ms'",
			"expecting: '-'",
			"expecting: 'END_IF', 'ELSEIF', 'ELSE'",
			"expecting: ':', '..', ','",
			"expecting: ':', ','",
			"expecting: signed integer, 'ELSE', 'END_CASE'",
			"expecting: 'OR', 'TO'",
			"expecting: 'DO'",
			"expecting: 'END_WHILE'",
			"expecting: 'OR', 'END_REPEAT'",
			"expecting: '.', ':', ',', ')', '['",
			"expecting: '.', ':', '['",
			"expecting: 'OF'",
			"expecting: ',', ')', ']'",
			"expecting: sign, '_', ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', integer, 'OF', 'END_STRUCT', 'END_VAR', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: 'd', 'h', 'm', 's', 'ms'",
			"expecting: 'END_IF', 'ELSE'",
			"expecting: 'END_CASE'",
			"expecting: bit, '(', '[', single byte character string, double byte character string, signed integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: ';', ',', ')', ']', 'END_STRUCT', 'END_VAR'",
			"expecting: ':', ',', ']'",
			"expecting: bit, '(', ')', '[', single byte character string, double byte character string, signed integer, signed integer literal, unsigned integer literal, time type name full, signed integer type name, unsigned integer type name, real type name, bit string literal type name, 'BOOL', time of day type name full, date type name full, date and time type name full, true false literal",
			"expecting: single byte character string",
			"expecting: double byte character string",
			"expecting: sign, ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'd', 'h', 'm', 's', 'ms', 'OF', 'END_STRUCT', 'END_VAR', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: '.', 'h'",
			"expecting: '.', 'm'",
			"expecting: '.', 's'",
			"expecting: '.', 'ms'",
			"expecting: 'OR', 'DO', 'BY'",
			"expecting: 'END_FOR'",
			"expecting: ';', 'END_VAR', direction",
			"expecting: ';', ':=', 'END_STRUCT', 'END_VAR', direction",
			"expecting: 'h'",
			"expecting: 'm'",
			"expecting: 's'",
			"expecting: 'ms'",
			"expecting: sign, '.', ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'END_STRUCT', 'END_VAR', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
			"expecting: sign, '-', ';', ',', ')', ']', 'OR', 'XOR', and token full, eq token full, comparison operator, mul operator, '**', 'OF', 'END_STRUCT', 'END_VAR', 'THEN', 'DO', 'TO', 'BY', 'END_REPEAT'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 3, 4, 5, 5, 5, 5, 5, 5, 4, 3, 3, 6, 6, 7, 7, 0, 8, 4, 0, 4, 9, 10, 11, 5, 12, 13, 14, 14, 1, 15, 1, 16, 16, 1, 16, 17, 5, 18, 19, 18, 18, 7, 7, 7, 7, 7, 7, 6, 6, 6, 20, 21, 10, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 10, 22, 1, 7, 7, 7, 23, 7, 7, 7, 24, 25, 25, 26, 27, 27, 26, 26, 28, 29, 1, 24, 26, 26, 5, 24, 5, 24, 5, 5, 5, 29, 26, 26, 26, 30, 30, 30, 31, 16, 32, 33, 34, 34, 35, 1, 36, 37, 1, 1, 1, 1, 1, 1, 35, 1, 35, 35, 38, 16, 16, 39, 38, 38, 40, 38, 38, 41, 41, 41, 41, 41, 41, 41, 38, 41, 42, 38, 43, 38, 44, 38, 45, 38, 46, 38, 38, 38, 38, 38, 38, 38, 42, 47, 42, 48, 49, 50, 51, 52, 53, 54, 55, 42, 42, 42, 16, 56, 18, 18, 57, 58, 16, 1, 16, 59, 0, 10, 6, 20, 10, 60, 61, 34, 35, 34, 36, 3, 34, 3, 3, 35, 1, 36, 1, 0, 23, 7, 48, 62, 26, 44, 63, 3, 64, 1, 65, 1, 66, 62, 29, 62, 67, 68, 30, 30, 30, 69, 69, 30, 70, 67, 71, 5, 1, 72, 73, 74, 75, 16, 76, 75, 1, 7, 1, 77, 3, 35, 1, 36, 33, 1, 35, 35, 7, 35, 7, 7, 78, 67, 79, 44, 45, 46, 67, 67, 67, 43, 38, 40, 38, 38, 1, 80, 75, 16, 17, 16, 16, 16, 16, 16, 16, 16, 16, 16, 42, 44, 16, 17, 16, 71, 81, 59, 16, 82, 83, 16, 0, 3, 3, 35, 7, 34, 77, 84, 34, 36, 1, 7, 1, 1, 36, 0, 1, 62, 85, 82, 86, 44, 44, 77, 5, 1, 1, 65, 62, 87, 62, 86, 88, 5, 0, 30, 69, 67, 70, 70, 70, 89, 16, 90, 5, 73, 75, 75, 76, 91, 92, 92, 36, 36, 36, 36, 36, 36, 77, 7, 7, 7, 7, 42, 93, 67, 94, 38, 38, 38, 38, 38, 38, 3, 38, 3, 95, 38, 95, 95, 67, 80, 74, 50, 96, 51, 52, 53, 54, 55, 42, 42, 97, 98, 99, 3, 44, 98, 99, 44, 100, 101, 102, 103, 16, 81, 16, 82, 77, 7, 36, 36, 36, 36, 36, 36, 104, 105, 18, 74, 1, 76, 1, 44, 44, 106, 82, 44, 65, 65, 65, 65, 48, 107, 107, 86, 87, 82, 82, 107, 87, 68, 5, 0, 70, 70, 70, 90, 76, 36, 67, 91, 91, 36, 38, 38, 67, 108, 108, 108, 108, 38, 109, 67, 67, 67, 93, 42, 5, 16, 17, 96, 110, 96, 110, 17, 44, 17, 5, 111, 99, 44, 98, 16, 17, 5, 5, 81, 36, 9, 112, 113, 1, 1, 76, 114, 9, 115, 113, 87, 87, 82, 76, 86, 116, 36, 117, 36, 118, 67, 119, 38, 67, 120, 38, 67, 121, 38, 67, 122, 38, 38, 38, 38, 38, 38, 3, 3, 95, 95, 38, 38, 49, 110, 5, 96, 110, 5, 110, 99, 111, 5, 123, 124, 125, 126, 126, 76, 24, 82, 74, 91, 36, 36, 38, 127, 38, 128, 38, 129, 38, 130, 67, 67, 17, 5, 16, 101, 5, 36, 82, 131, 38, 132, 132, 96, 57, 38, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
