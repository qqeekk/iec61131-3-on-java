/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AComparisonComparison extends PComparison
{
    private PComparison _comparison_;
    private TEqTokenFull _eqTokenFull_;
    private PEquExpression _equExpression_;

    public AComparisonComparison()
    {
        // Constructor
    }

    public AComparisonComparison(
        @SuppressWarnings("hiding") PComparison _comparison_,
        @SuppressWarnings("hiding") TEqTokenFull _eqTokenFull_,
        @SuppressWarnings("hiding") PEquExpression _equExpression_)
    {
        // Constructor
        setComparison(_comparison_);

        setEqTokenFull(_eqTokenFull_);

        setEquExpression(_equExpression_);

    }

    @Override
    public Object clone()
    {
        return new AComparisonComparison(
            cloneNode(this._comparison_),
            cloneNode(this._eqTokenFull_),
            cloneNode(this._equExpression_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAComparisonComparison(this);
    }

    public PComparison getComparison()
    {
        return this._comparison_;
    }

    public void setComparison(PComparison node)
    {
        if(this._comparison_ != null)
        {
            this._comparison_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comparison_ = node;
    }

    public TEqTokenFull getEqTokenFull()
    {
        return this._eqTokenFull_;
    }

    public void setEqTokenFull(TEqTokenFull node)
    {
        if(this._eqTokenFull_ != null)
        {
            this._eqTokenFull_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eqTokenFull_ = node;
    }

    public PEquExpression getEquExpression()
    {
        return this._equExpression_;
    }

    public void setEquExpression(PEquExpression node)
    {
        if(this._equExpression_ != null)
        {
            this._equExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._equExpression_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._comparison_)
            + toString(this._eqTokenFull_)
            + toString(this._equExpression_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._comparison_ == child)
        {
            this._comparison_ = null;
            return;
        }

        if(this._eqTokenFull_ == child)
        {
            this._eqTokenFull_ = null;
            return;
        }

        if(this._equExpression_ == child)
        {
            this._equExpression_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._comparison_ == oldChild)
        {
            setComparison((PComparison) newChild);
            return;
        }

        if(this._eqTokenFull_ == oldChild)
        {
            setEqTokenFull((TEqTokenFull) newChild);
            return;
        }

        if(this._equExpression_ == oldChild)
        {
            setEquExpression((PEquExpression) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
