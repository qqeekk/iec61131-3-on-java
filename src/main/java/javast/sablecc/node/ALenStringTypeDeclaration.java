/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ALenStringTypeDeclaration extends PStringTypeDeclaration
{
    private PStringTypeName _stringTypeName_;
    private TColon _colon_;
    private PStringWstringTypeName _stringWstringTypeName_;
    private PStringTypeDeclarationLenSpec _stringTypeDeclarationLenSpec_;
    private PStringTypeDeclarationInitialization _stringTypeDeclarationInitialization_;

    public ALenStringTypeDeclaration()
    {
        // Constructor
    }

    public ALenStringTypeDeclaration(
        @SuppressWarnings("hiding") PStringTypeName _stringTypeName_,
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") PStringWstringTypeName _stringWstringTypeName_,
        @SuppressWarnings("hiding") PStringTypeDeclarationLenSpec _stringTypeDeclarationLenSpec_,
        @SuppressWarnings("hiding") PStringTypeDeclarationInitialization _stringTypeDeclarationInitialization_)
    {
        // Constructor
        setStringTypeName(_stringTypeName_);

        setColon(_colon_);

        setStringWstringTypeName(_stringWstringTypeName_);

        setStringTypeDeclarationLenSpec(_stringTypeDeclarationLenSpec_);

        setStringTypeDeclarationInitialization(_stringTypeDeclarationInitialization_);

    }

    @Override
    public Object clone()
    {
        return new ALenStringTypeDeclaration(
            cloneNode(this._stringTypeName_),
            cloneNode(this._colon_),
            cloneNode(this._stringWstringTypeName_),
            cloneNode(this._stringTypeDeclarationLenSpec_),
            cloneNode(this._stringTypeDeclarationInitialization_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALenStringTypeDeclaration(this);
    }

    public PStringTypeName getStringTypeName()
    {
        return this._stringTypeName_;
    }

    public void setStringTypeName(PStringTypeName node)
    {
        if(this._stringTypeName_ != null)
        {
            this._stringTypeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringTypeName_ = node;
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public PStringWstringTypeName getStringWstringTypeName()
    {
        return this._stringWstringTypeName_;
    }

    public void setStringWstringTypeName(PStringWstringTypeName node)
    {
        if(this._stringWstringTypeName_ != null)
        {
            this._stringWstringTypeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringWstringTypeName_ = node;
    }

    public PStringTypeDeclarationLenSpec getStringTypeDeclarationLenSpec()
    {
        return this._stringTypeDeclarationLenSpec_;
    }

    public void setStringTypeDeclarationLenSpec(PStringTypeDeclarationLenSpec node)
    {
        if(this._stringTypeDeclarationLenSpec_ != null)
        {
            this._stringTypeDeclarationLenSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringTypeDeclarationLenSpec_ = node;
    }

    public PStringTypeDeclarationInitialization getStringTypeDeclarationInitialization()
    {
        return this._stringTypeDeclarationInitialization_;
    }

    public void setStringTypeDeclarationInitialization(PStringTypeDeclarationInitialization node)
    {
        if(this._stringTypeDeclarationInitialization_ != null)
        {
            this._stringTypeDeclarationInitialization_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringTypeDeclarationInitialization_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stringTypeName_)
            + toString(this._colon_)
            + toString(this._stringWstringTypeName_)
            + toString(this._stringTypeDeclarationLenSpec_)
            + toString(this._stringTypeDeclarationInitialization_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stringTypeName_ == child)
        {
            this._stringTypeName_ = null;
            return;
        }

        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._stringWstringTypeName_ == child)
        {
            this._stringWstringTypeName_ = null;
            return;
        }

        if(this._stringTypeDeclarationLenSpec_ == child)
        {
            this._stringTypeDeclarationLenSpec_ = null;
            return;
        }

        if(this._stringTypeDeclarationInitialization_ == child)
        {
            this._stringTypeDeclarationInitialization_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stringTypeName_ == oldChild)
        {
            setStringTypeName((PStringTypeName) newChild);
            return;
        }

        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._stringWstringTypeName_ == oldChild)
        {
            setStringWstringTypeName((PStringWstringTypeName) newChild);
            return;
        }

        if(this._stringTypeDeclarationLenSpec_ == oldChild)
        {
            setStringTypeDeclarationLenSpec((PStringTypeDeclarationLenSpec) newChild);
            return;
        }

        if(this._stringTypeDeclarationInitialization_ == oldChild)
        {
            setStringTypeDeclarationInitialization((PStringTypeDeclarationInitialization) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
