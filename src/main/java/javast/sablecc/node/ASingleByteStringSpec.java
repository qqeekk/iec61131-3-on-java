/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ASingleByteStringSpec extends PSingleByteStringSpec
{
    private TString1TypeName _string1TypeName_;
    private PBrackInteger _brackInteger_;
    private PSingleByteStringSpecInitialization _singleByteStringSpecInitialization_;

    public ASingleByteStringSpec()
    {
        // Constructor
    }

    public ASingleByteStringSpec(
        @SuppressWarnings("hiding") TString1TypeName _string1TypeName_,
        @SuppressWarnings("hiding") PBrackInteger _brackInteger_,
        @SuppressWarnings("hiding") PSingleByteStringSpecInitialization _singleByteStringSpecInitialization_)
    {
        // Constructor
        setString1TypeName(_string1TypeName_);

        setBrackInteger(_brackInteger_);

        setSingleByteStringSpecInitialization(_singleByteStringSpecInitialization_);

    }

    @Override
    public Object clone()
    {
        return new ASingleByteStringSpec(
            cloneNode(this._string1TypeName_),
            cloneNode(this._brackInteger_),
            cloneNode(this._singleByteStringSpecInitialization_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASingleByteStringSpec(this);
    }

    public TString1TypeName getString1TypeName()
    {
        return this._string1TypeName_;
    }

    public void setString1TypeName(TString1TypeName node)
    {
        if(this._string1TypeName_ != null)
        {
            this._string1TypeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._string1TypeName_ = node;
    }

    public PBrackInteger getBrackInteger()
    {
        return this._brackInteger_;
    }

    public void setBrackInteger(PBrackInteger node)
    {
        if(this._brackInteger_ != null)
        {
            this._brackInteger_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._brackInteger_ = node;
    }

    public PSingleByteStringSpecInitialization getSingleByteStringSpecInitialization()
    {
        return this._singleByteStringSpecInitialization_;
    }

    public void setSingleByteStringSpecInitialization(PSingleByteStringSpecInitialization node)
    {
        if(this._singleByteStringSpecInitialization_ != null)
        {
            this._singleByteStringSpecInitialization_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._singleByteStringSpecInitialization_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._string1TypeName_)
            + toString(this._brackInteger_)
            + toString(this._singleByteStringSpecInitialization_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._string1TypeName_ == child)
        {
            this._string1TypeName_ = null;
            return;
        }

        if(this._brackInteger_ == child)
        {
            this._brackInteger_ = null;
            return;
        }

        if(this._singleByteStringSpecInitialization_ == child)
        {
            this._singleByteStringSpecInitialization_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._string1TypeName_ == oldChild)
        {
            setString1TypeName((TString1TypeName) newChild);
            return;
        }

        if(this._brackInteger_ == oldChild)
        {
            setBrackInteger((PBrackInteger) newChild);
            return;
        }

        if(this._singleByteStringSpecInitialization_ == oldChild)
        {
            setSingleByteStringSpecInitialization((PSingleByteStringSpecInitialization) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
