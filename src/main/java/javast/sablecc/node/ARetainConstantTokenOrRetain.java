/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ARetainConstantTokenOrRetain extends PConstantTokenOrRetain
{
    private TRetain _retain_;

    public ARetainConstantTokenOrRetain()
    {
        // Constructor
    }

    public ARetainConstantTokenOrRetain(
        @SuppressWarnings("hiding") TRetain _retain_)
    {
        // Constructor
        setRetain(_retain_);

    }

    @Override
    public Object clone()
    {
        return new ARetainConstantTokenOrRetain(
            cloneNode(this._retain_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARetainConstantTokenOrRetain(this);
    }

    public TRetain getRetain()
    {
        return this._retain_;
    }

    public void setRetain(TRetain node)
    {
        if(this._retain_ != null)
        {
            this._retain_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._retain_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._retain_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._retain_ == child)
        {
            this._retain_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._retain_ == oldChild)
        {
            setRetain((TRetain) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
