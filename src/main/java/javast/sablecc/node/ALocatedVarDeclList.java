/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import java.util.*;
import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ALocatedVarDeclList extends PLocatedVarDeclList
{
    private final LinkedList<PLocatedVarDeclListHead> _locatedVarDeclListHead_ = new LinkedList<PLocatedVarDeclListHead>();
    private PLocatedVarDecl _locatedVarDecl_;

    public ALocatedVarDeclList()
    {
        // Constructor
    }

    public ALocatedVarDeclList(
        @SuppressWarnings("hiding") List<?> _locatedVarDeclListHead_,
        @SuppressWarnings("hiding") PLocatedVarDecl _locatedVarDecl_)
    {
        // Constructor
        setLocatedVarDeclListHead(_locatedVarDeclListHead_);

        setLocatedVarDecl(_locatedVarDecl_);

    }

    @Override
    public Object clone()
    {
        return new ALocatedVarDeclList(
            cloneList(this._locatedVarDeclListHead_),
            cloneNode(this._locatedVarDecl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALocatedVarDeclList(this);
    }

    public LinkedList<PLocatedVarDeclListHead> getLocatedVarDeclListHead()
    {
        return this._locatedVarDeclListHead_;
    }

    public void setLocatedVarDeclListHead(List<?> list)
    {
        for(PLocatedVarDeclListHead e : this._locatedVarDeclListHead_)
        {
            e.parent(null);
        }
        this._locatedVarDeclListHead_.clear();

        for(Object obj_e : list)
        {
            PLocatedVarDeclListHead e = (PLocatedVarDeclListHead) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._locatedVarDeclListHead_.add(e);
        }
    }

    public PLocatedVarDecl getLocatedVarDecl()
    {
        return this._locatedVarDecl_;
    }

    public void setLocatedVarDecl(PLocatedVarDecl node)
    {
        if(this._locatedVarDecl_ != null)
        {
            this._locatedVarDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._locatedVarDecl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._locatedVarDeclListHead_)
            + toString(this._locatedVarDecl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._locatedVarDeclListHead_.remove(child))
        {
            return;
        }

        if(this._locatedVarDecl_ == child)
        {
            this._locatedVarDecl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PLocatedVarDeclListHead> i = this._locatedVarDeclListHead_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PLocatedVarDeclListHead) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._locatedVarDecl_ == oldChild)
        {
            setLocatedVarDecl((PLocatedVarDecl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
