/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AArraySpecInit extends PArraySpecInit
{
    private PArraySpecification _arraySpecification_;
    private PArraySpecInitialization _arraySpecInitialization_;

    public AArraySpecInit()
    {
        // Constructor
    }

    public AArraySpecInit(
        @SuppressWarnings("hiding") PArraySpecification _arraySpecification_,
        @SuppressWarnings("hiding") PArraySpecInitialization _arraySpecInitialization_)
    {
        // Constructor
        setArraySpecification(_arraySpecification_);

        setArraySpecInitialization(_arraySpecInitialization_);

    }

    @Override
    public Object clone()
    {
        return new AArraySpecInit(
            cloneNode(this._arraySpecification_),
            cloneNode(this._arraySpecInitialization_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArraySpecInit(this);
    }

    public PArraySpecification getArraySpecification()
    {
        return this._arraySpecification_;
    }

    public void setArraySpecification(PArraySpecification node)
    {
        if(this._arraySpecification_ != null)
        {
            this._arraySpecification_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arraySpecification_ = node;
    }

    public PArraySpecInitialization getArraySpecInitialization()
    {
        return this._arraySpecInitialization_;
    }

    public void setArraySpecInitialization(PArraySpecInitialization node)
    {
        if(this._arraySpecInitialization_ != null)
        {
            this._arraySpecInitialization_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arraySpecInitialization_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._arraySpecification_)
            + toString(this._arraySpecInitialization_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._arraySpecification_ == child)
        {
            this._arraySpecification_ = null;
            return;
        }

        if(this._arraySpecInitialization_ == child)
        {
            this._arraySpecInitialization_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._arraySpecification_ == oldChild)
        {
            setArraySpecification((PArraySpecification) newChild);
            return;
        }

        if(this._arraySpecInitialization_ == oldChild)
        {
            setArraySpecInitialization((PArraySpecInitialization) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
