/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ATimeOfDay extends PTimeOfDay
{
    private TTimeOfDayTypeNameFull _timeOfDayTypeNameFull_;
    private THash _hash_;
    private PDaytime _daytime_;

    public ATimeOfDay()
    {
        // Constructor
    }

    public ATimeOfDay(
        @SuppressWarnings("hiding") TTimeOfDayTypeNameFull _timeOfDayTypeNameFull_,
        @SuppressWarnings("hiding") THash _hash_,
        @SuppressWarnings("hiding") PDaytime _daytime_)
    {
        // Constructor
        setTimeOfDayTypeNameFull(_timeOfDayTypeNameFull_);

        setHash(_hash_);

        setDaytime(_daytime_);

    }

    @Override
    public Object clone()
    {
        return new ATimeOfDay(
            cloneNode(this._timeOfDayTypeNameFull_),
            cloneNode(this._hash_),
            cloneNode(this._daytime_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATimeOfDay(this);
    }

    public TTimeOfDayTypeNameFull getTimeOfDayTypeNameFull()
    {
        return this._timeOfDayTypeNameFull_;
    }

    public void setTimeOfDayTypeNameFull(TTimeOfDayTypeNameFull node)
    {
        if(this._timeOfDayTypeNameFull_ != null)
        {
            this._timeOfDayTypeNameFull_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._timeOfDayTypeNameFull_ = node;
    }

    public THash getHash()
    {
        return this._hash_;
    }

    public void setHash(THash node)
    {
        if(this._hash_ != null)
        {
            this._hash_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hash_ = node;
    }

    public PDaytime getDaytime()
    {
        return this._daytime_;
    }

    public void setDaytime(PDaytime node)
    {
        if(this._daytime_ != null)
        {
            this._daytime_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._daytime_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._timeOfDayTypeNameFull_)
            + toString(this._hash_)
            + toString(this._daytime_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._timeOfDayTypeNameFull_ == child)
        {
            this._timeOfDayTypeNameFull_ = null;
            return;
        }

        if(this._hash_ == child)
        {
            this._hash_ = null;
            return;
        }

        if(this._daytime_ == child)
        {
            this._daytime_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._timeOfDayTypeNameFull_ == oldChild)
        {
            setTimeOfDayTypeNameFull((TTimeOfDayTypeNameFull) newChild);
            return;
        }

        if(this._hash_ == oldChild)
        {
            setHash((THash) newChild);
            return;
        }

        if(this._daytime_ == oldChild)
        {
            setDaytime((PDaytime) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
