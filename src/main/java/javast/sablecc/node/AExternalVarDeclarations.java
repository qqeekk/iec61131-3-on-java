/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AExternalVarDeclarations extends PExternalVarDeclarations
{
    private TVarExternalToken _varExternalToken_;
    private TConstantToken _constantToken_;
    private PVarInitDecls _varInitDecls_;
    private TEndVarToken _endVarToken_;

    public AExternalVarDeclarations()
    {
        // Constructor
    }

    public AExternalVarDeclarations(
        @SuppressWarnings("hiding") TVarExternalToken _varExternalToken_,
        @SuppressWarnings("hiding") TConstantToken _constantToken_,
        @SuppressWarnings("hiding") PVarInitDecls _varInitDecls_,
        @SuppressWarnings("hiding") TEndVarToken _endVarToken_)
    {
        // Constructor
        setVarExternalToken(_varExternalToken_);

        setConstantToken(_constantToken_);

        setVarInitDecls(_varInitDecls_);

        setEndVarToken(_endVarToken_);

    }

    @Override
    public Object clone()
    {
        return new AExternalVarDeclarations(
            cloneNode(this._varExternalToken_),
            cloneNode(this._constantToken_),
            cloneNode(this._varInitDecls_),
            cloneNode(this._endVarToken_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExternalVarDeclarations(this);
    }

    public TVarExternalToken getVarExternalToken()
    {
        return this._varExternalToken_;
    }

    public void setVarExternalToken(TVarExternalToken node)
    {
        if(this._varExternalToken_ != null)
        {
            this._varExternalToken_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varExternalToken_ = node;
    }

    public TConstantToken getConstantToken()
    {
        return this._constantToken_;
    }

    public void setConstantToken(TConstantToken node)
    {
        if(this._constantToken_ != null)
        {
            this._constantToken_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._constantToken_ = node;
    }

    public PVarInitDecls getVarInitDecls()
    {
        return this._varInitDecls_;
    }

    public void setVarInitDecls(PVarInitDecls node)
    {
        if(this._varInitDecls_ != null)
        {
            this._varInitDecls_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varInitDecls_ = node;
    }

    public TEndVarToken getEndVarToken()
    {
        return this._endVarToken_;
    }

    public void setEndVarToken(TEndVarToken node)
    {
        if(this._endVarToken_ != null)
        {
            this._endVarToken_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._endVarToken_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._varExternalToken_)
            + toString(this._constantToken_)
            + toString(this._varInitDecls_)
            + toString(this._endVarToken_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._varExternalToken_ == child)
        {
            this._varExternalToken_ = null;
            return;
        }

        if(this._constantToken_ == child)
        {
            this._constantToken_ = null;
            return;
        }

        if(this._varInitDecls_ == child)
        {
            this._varInitDecls_ = null;
            return;
        }

        if(this._endVarToken_ == child)
        {
            this._endVarToken_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._varExternalToken_ == oldChild)
        {
            setVarExternalToken((TVarExternalToken) newChild);
            return;
        }

        if(this._constantToken_ == oldChild)
        {
            setConstantToken((TConstantToken) newChild);
            return;
        }

        if(this._varInitDecls_ == oldChild)
        {
            setVarInitDecls((PVarInitDecls) newChild);
            return;
        }

        if(this._endVarToken_ == oldChild)
        {
            setEndVarToken((TEndVarToken) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
