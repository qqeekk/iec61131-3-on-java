/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADaytime extends PDaytime
{
    private PDayHour _dayHour_;
    private TColon _fst_;
    private PDayMinute _dayMinute_;
    private TColon _snd_;
    private PDaySecond _daySecond_;

    public ADaytime()
    {
        // Constructor
    }

    public ADaytime(
        @SuppressWarnings("hiding") PDayHour _dayHour_,
        @SuppressWarnings("hiding") TColon _fst_,
        @SuppressWarnings("hiding") PDayMinute _dayMinute_,
        @SuppressWarnings("hiding") TColon _snd_,
        @SuppressWarnings("hiding") PDaySecond _daySecond_)
    {
        // Constructor
        setDayHour(_dayHour_);

        setFst(_fst_);

        setDayMinute(_dayMinute_);

        setSnd(_snd_);

        setDaySecond(_daySecond_);

    }

    @Override
    public Object clone()
    {
        return new ADaytime(
            cloneNode(this._dayHour_),
            cloneNode(this._fst_),
            cloneNode(this._dayMinute_),
            cloneNode(this._snd_),
            cloneNode(this._daySecond_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADaytime(this);
    }

    public PDayHour getDayHour()
    {
        return this._dayHour_;
    }

    public void setDayHour(PDayHour node)
    {
        if(this._dayHour_ != null)
        {
            this._dayHour_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dayHour_ = node;
    }

    public TColon getFst()
    {
        return this._fst_;
    }

    public void setFst(TColon node)
    {
        if(this._fst_ != null)
        {
            this._fst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fst_ = node;
    }

    public PDayMinute getDayMinute()
    {
        return this._dayMinute_;
    }

    public void setDayMinute(PDayMinute node)
    {
        if(this._dayMinute_ != null)
        {
            this._dayMinute_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dayMinute_ = node;
    }

    public TColon getSnd()
    {
        return this._snd_;
    }

    public void setSnd(TColon node)
    {
        if(this._snd_ != null)
        {
            this._snd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._snd_ = node;
    }

    public PDaySecond getDaySecond()
    {
        return this._daySecond_;
    }

    public void setDaySecond(PDaySecond node)
    {
        if(this._daySecond_ != null)
        {
            this._daySecond_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._daySecond_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._dayHour_)
            + toString(this._fst_)
            + toString(this._dayMinute_)
            + toString(this._snd_)
            + toString(this._daySecond_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._dayHour_ == child)
        {
            this._dayHour_ = null;
            return;
        }

        if(this._fst_ == child)
        {
            this._fst_ = null;
            return;
        }

        if(this._dayMinute_ == child)
        {
            this._dayMinute_ = null;
            return;
        }

        if(this._snd_ == child)
        {
            this._snd_ = null;
            return;
        }

        if(this._daySecond_ == child)
        {
            this._daySecond_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._dayHour_ == oldChild)
        {
            setDayHour((PDayHour) newChild);
            return;
        }

        if(this._fst_ == oldChild)
        {
            setFst((TColon) newChild);
            return;
        }

        if(this._dayMinute_ == oldChild)
        {
            setDayMinute((PDayMinute) newChild);
            return;
        }

        if(this._snd_ == oldChild)
        {
            setSnd((TColon) newChild);
            return;
        }

        if(this._daySecond_ == oldChild)
        {
            setDaySecond((PDaySecond) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
