/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ABitStringLiteral extends PBitStringLiteral
{
    private PBitStringLiteralTypeNameHashed _bitStringLiteralTypeNameHashed_;
    private TUnsignedIntegerLiteral _unsignedIntegerLiteral_;

    public ABitStringLiteral()
    {
        // Constructor
    }

    public ABitStringLiteral(
        @SuppressWarnings("hiding") PBitStringLiteralTypeNameHashed _bitStringLiteralTypeNameHashed_,
        @SuppressWarnings("hiding") TUnsignedIntegerLiteral _unsignedIntegerLiteral_)
    {
        // Constructor
        setBitStringLiteralTypeNameHashed(_bitStringLiteralTypeNameHashed_);

        setUnsignedIntegerLiteral(_unsignedIntegerLiteral_);

    }

    @Override
    public Object clone()
    {
        return new ABitStringLiteral(
            cloneNode(this._bitStringLiteralTypeNameHashed_),
            cloneNode(this._unsignedIntegerLiteral_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABitStringLiteral(this);
    }

    public PBitStringLiteralTypeNameHashed getBitStringLiteralTypeNameHashed()
    {
        return this._bitStringLiteralTypeNameHashed_;
    }

    public void setBitStringLiteralTypeNameHashed(PBitStringLiteralTypeNameHashed node)
    {
        if(this._bitStringLiteralTypeNameHashed_ != null)
        {
            this._bitStringLiteralTypeNameHashed_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._bitStringLiteralTypeNameHashed_ = node;
    }

    public TUnsignedIntegerLiteral getUnsignedIntegerLiteral()
    {
        return this._unsignedIntegerLiteral_;
    }

    public void setUnsignedIntegerLiteral(TUnsignedIntegerLiteral node)
    {
        if(this._unsignedIntegerLiteral_ != null)
        {
            this._unsignedIntegerLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._unsignedIntegerLiteral_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._bitStringLiteralTypeNameHashed_)
            + toString(this._unsignedIntegerLiteral_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._bitStringLiteralTypeNameHashed_ == child)
        {
            this._bitStringLiteralTypeNameHashed_ = null;
            return;
        }

        if(this._unsignedIntegerLiteral_ == child)
        {
            this._unsignedIntegerLiteral_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._bitStringLiteralTypeNameHashed_ == oldChild)
        {
            setBitStringLiteralTypeNameHashed((PBitStringLiteralTypeNameHashed) newChild);
            return;
        }

        if(this._unsignedIntegerLiteral_ == oldChild)
        {
            setUnsignedIntegerLiteral((TUnsignedIntegerLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
