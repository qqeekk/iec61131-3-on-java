/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AArrayInitialization extends PArrayInitialization
{
    private TLbrack _lbrack_;
    private PArrayInitialElementsList _arrayInitialElementsList_;
    private TRbrack _rbrack_;

    public AArrayInitialization()
    {
        // Constructor
    }

    public AArrayInitialization(
        @SuppressWarnings("hiding") TLbrack _lbrack_,
        @SuppressWarnings("hiding") PArrayInitialElementsList _arrayInitialElementsList_,
        @SuppressWarnings("hiding") TRbrack _rbrack_)
    {
        // Constructor
        setLbrack(_lbrack_);

        setArrayInitialElementsList(_arrayInitialElementsList_);

        setRbrack(_rbrack_);

    }

    @Override
    public Object clone()
    {
        return new AArrayInitialization(
            cloneNode(this._lbrack_),
            cloneNode(this._arrayInitialElementsList_),
            cloneNode(this._rbrack_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayInitialization(this);
    }

    public TLbrack getLbrack()
    {
        return this._lbrack_;
    }

    public void setLbrack(TLbrack node)
    {
        if(this._lbrack_ != null)
        {
            this._lbrack_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lbrack_ = node;
    }

    public PArrayInitialElementsList getArrayInitialElementsList()
    {
        return this._arrayInitialElementsList_;
    }

    public void setArrayInitialElementsList(PArrayInitialElementsList node)
    {
        if(this._arrayInitialElementsList_ != null)
        {
            this._arrayInitialElementsList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arrayInitialElementsList_ = node;
    }

    public TRbrack getRbrack()
    {
        return this._rbrack_;
    }

    public void setRbrack(TRbrack node)
    {
        if(this._rbrack_ != null)
        {
            this._rbrack_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._rbrack_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lbrack_)
            + toString(this._arrayInitialElementsList_)
            + toString(this._rbrack_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lbrack_ == child)
        {
            this._lbrack_ = null;
            return;
        }

        if(this._arrayInitialElementsList_ == child)
        {
            this._arrayInitialElementsList_ = null;
            return;
        }

        if(this._rbrack_ == child)
        {
            this._rbrack_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lbrack_ == oldChild)
        {
            setLbrack((TLbrack) newChild);
            return;
        }

        if(this._arrayInitialElementsList_ == oldChild)
        {
            setArrayInitialElementsList((PArrayInitialElementsList) newChild);
            return;
        }

        if(this._rbrack_ == oldChild)
        {
            setRbrack((TRbrack) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
