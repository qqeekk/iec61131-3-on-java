/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AMilliseconds extends PMilliseconds
{
    private PFixedPoint _fixedPoint_;
    private TMillisecondIdentifier _millisecondIdentifier_;

    public AMilliseconds()
    {
        // Constructor
    }

    public AMilliseconds(
        @SuppressWarnings("hiding") PFixedPoint _fixedPoint_,
        @SuppressWarnings("hiding") TMillisecondIdentifier _millisecondIdentifier_)
    {
        // Constructor
        setFixedPoint(_fixedPoint_);

        setMillisecondIdentifier(_millisecondIdentifier_);

    }

    @Override
    public Object clone()
    {
        return new AMilliseconds(
            cloneNode(this._fixedPoint_),
            cloneNode(this._millisecondIdentifier_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMilliseconds(this);
    }

    public PFixedPoint getFixedPoint()
    {
        return this._fixedPoint_;
    }

    public void setFixedPoint(PFixedPoint node)
    {
        if(this._fixedPoint_ != null)
        {
            this._fixedPoint_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fixedPoint_ = node;
    }

    public TMillisecondIdentifier getMillisecondIdentifier()
    {
        return this._millisecondIdentifier_;
    }

    public void setMillisecondIdentifier(TMillisecondIdentifier node)
    {
        if(this._millisecondIdentifier_ != null)
        {
            this._millisecondIdentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._millisecondIdentifier_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fixedPoint_)
            + toString(this._millisecondIdentifier_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fixedPoint_ == child)
        {
            this._fixedPoint_ = null;
            return;
        }

        if(this._millisecondIdentifier_ == child)
        {
            this._millisecondIdentifier_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fixedPoint_ == oldChild)
        {
            setFixedPoint((PFixedPoint) newChild);
            return;
        }

        if(this._millisecondIdentifier_ == oldChild)
        {
            setMillisecondIdentifier((TMillisecondIdentifier) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
