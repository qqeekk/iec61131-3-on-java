/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ASstringLocatedVarSpecInit extends PLocatedVarSpecInit
{
    private PSingleByteStringSpec _singleByteStringSpec_;

    public ASstringLocatedVarSpecInit()
    {
        // Constructor
    }

    public ASstringLocatedVarSpecInit(
        @SuppressWarnings("hiding") PSingleByteStringSpec _singleByteStringSpec_)
    {
        // Constructor
        setSingleByteStringSpec(_singleByteStringSpec_);

    }

    @Override
    public Object clone()
    {
        return new ASstringLocatedVarSpecInit(
            cloneNode(this._singleByteStringSpec_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASstringLocatedVarSpecInit(this);
    }

    public PSingleByteStringSpec getSingleByteStringSpec()
    {
        return this._singleByteStringSpec_;
    }

    public void setSingleByteStringSpec(PSingleByteStringSpec node)
    {
        if(this._singleByteStringSpec_ != null)
        {
            this._singleByteStringSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._singleByteStringSpec_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._singleByteStringSpec_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._singleByteStringSpec_ == child)
        {
            this._singleByteStringSpec_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._singleByteStringSpec_ == oldChild)
        {
            setSingleByteStringSpec((PSingleByteStringSpec) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
