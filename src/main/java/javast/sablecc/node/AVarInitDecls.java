/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import java.util.*;
import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AVarInitDecls extends PVarInitDecls
{
    private final LinkedList<PVarInitDeclsHead> _varInitDeclsHead_ = new LinkedList<PVarInitDeclsHead>();
    private PVarInitDecl _varInitDecl_;

    public AVarInitDecls()
    {
        // Constructor
    }

    public AVarInitDecls(
        @SuppressWarnings("hiding") List<?> _varInitDeclsHead_,
        @SuppressWarnings("hiding") PVarInitDecl _varInitDecl_)
    {
        // Constructor
        setVarInitDeclsHead(_varInitDeclsHead_);

        setVarInitDecl(_varInitDecl_);

    }

    @Override
    public Object clone()
    {
        return new AVarInitDecls(
            cloneList(this._varInitDeclsHead_),
            cloneNode(this._varInitDecl_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarInitDecls(this);
    }

    public LinkedList<PVarInitDeclsHead> getVarInitDeclsHead()
    {
        return this._varInitDeclsHead_;
    }

    public void setVarInitDeclsHead(List<?> list)
    {
        for(PVarInitDeclsHead e : this._varInitDeclsHead_)
        {
            e.parent(null);
        }
        this._varInitDeclsHead_.clear();

        for(Object obj_e : list)
        {
            PVarInitDeclsHead e = (PVarInitDeclsHead) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._varInitDeclsHead_.add(e);
        }
    }

    public PVarInitDecl getVarInitDecl()
    {
        return this._varInitDecl_;
    }

    public void setVarInitDecl(PVarInitDecl node)
    {
        if(this._varInitDecl_ != null)
        {
            this._varInitDecl_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._varInitDecl_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._varInitDeclsHead_)
            + toString(this._varInitDecl_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._varInitDeclsHead_.remove(child))
        {
            return;
        }

        if(this._varInitDecl_ == child)
        {
            this._varInitDecl_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PVarInitDeclsHead> i = this._varInitDeclsHead_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarInitDeclsHead) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._varInitDecl_ == oldChild)
        {
            setVarInitDecl((PVarInitDecl) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
