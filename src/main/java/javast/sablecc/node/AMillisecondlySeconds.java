/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AMillisecondlySeconds extends PSeconds
{
    private TInteger _integer_;
    private TSecondIdentifier _secondIdentifier_;
    private TUnderscore _underscore_;
    private PMilliseconds _milliseconds_;

    public AMillisecondlySeconds()
    {
        // Constructor
    }

    public AMillisecondlySeconds(
        @SuppressWarnings("hiding") TInteger _integer_,
        @SuppressWarnings("hiding") TSecondIdentifier _secondIdentifier_,
        @SuppressWarnings("hiding") TUnderscore _underscore_,
        @SuppressWarnings("hiding") PMilliseconds _milliseconds_)
    {
        // Constructor
        setInteger(_integer_);

        setSecondIdentifier(_secondIdentifier_);

        setUnderscore(_underscore_);

        setMilliseconds(_milliseconds_);

    }

    @Override
    public Object clone()
    {
        return new AMillisecondlySeconds(
            cloneNode(this._integer_),
            cloneNode(this._secondIdentifier_),
            cloneNode(this._underscore_),
            cloneNode(this._milliseconds_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMillisecondlySeconds(this);
    }

    public TInteger getInteger()
    {
        return this._integer_;
    }

    public void setInteger(TInteger node)
    {
        if(this._integer_ != null)
        {
            this._integer_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._integer_ = node;
    }

    public TSecondIdentifier getSecondIdentifier()
    {
        return this._secondIdentifier_;
    }

    public void setSecondIdentifier(TSecondIdentifier node)
    {
        if(this._secondIdentifier_ != null)
        {
            this._secondIdentifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._secondIdentifier_ = node;
    }

    public TUnderscore getUnderscore()
    {
        return this._underscore_;
    }

    public void setUnderscore(TUnderscore node)
    {
        if(this._underscore_ != null)
        {
            this._underscore_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._underscore_ = node;
    }

    public PMilliseconds getMilliseconds()
    {
        return this._milliseconds_;
    }

    public void setMilliseconds(PMilliseconds node)
    {
        if(this._milliseconds_ != null)
        {
            this._milliseconds_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._milliseconds_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._integer_)
            + toString(this._secondIdentifier_)
            + toString(this._underscore_)
            + toString(this._milliseconds_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._integer_ == child)
        {
            this._integer_ = null;
            return;
        }

        if(this._secondIdentifier_ == child)
        {
            this._secondIdentifier_ = null;
            return;
        }

        if(this._underscore_ == child)
        {
            this._underscore_ = null;
            return;
        }

        if(this._milliseconds_ == child)
        {
            this._milliseconds_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._integer_ == oldChild)
        {
            setInteger((TInteger) newChild);
            return;
        }

        if(this._secondIdentifier_ == oldChild)
        {
            setSecondIdentifier((TSecondIdentifier) newChild);
            return;
        }

        if(this._underscore_ == oldChild)
        {
            setUnderscore((TUnderscore) newChild);
            return;
        }

        if(this._milliseconds_ == oldChild)
        {
            setMilliseconds((PMilliseconds) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
