/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADaysInterval extends PInterval
{
    private PDays _days_;

    public ADaysInterval()
    {
        // Constructor
    }

    public ADaysInterval(
        @SuppressWarnings("hiding") PDays _days_)
    {
        // Constructor
        setDays(_days_);

    }

    @Override
    public Object clone()
    {
        return new ADaysInterval(
            cloneNode(this._days_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADaysInterval(this);
    }

    public PDays getDays()
    {
        return this._days_;
    }

    public void setDays(PDays node)
    {
        if(this._days_ != null)
        {
            this._days_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._days_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._days_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._days_ == child)
        {
            this._days_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._days_ == oldChild)
        {
            setDays((PDays) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
