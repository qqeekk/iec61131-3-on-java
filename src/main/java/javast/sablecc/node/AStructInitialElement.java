/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AStructInitialElement extends PInitialElement
{
    private PStructureInitialization _structureInitialization_;

    public AStructInitialElement()
    {
        // Constructor
    }

    public AStructInitialElement(
        @SuppressWarnings("hiding") PStructureInitialization _structureInitialization_)
    {
        // Constructor
        setStructureInitialization(_structureInitialization_);

    }

    @Override
    public Object clone()
    {
        return new AStructInitialElement(
            cloneNode(this._structureInitialization_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStructInitialElement(this);
    }

    public PStructureInitialization getStructureInitialization()
    {
        return this._structureInitialization_;
    }

    public void setStructureInitialization(PStructureInitialization node)
    {
        if(this._structureInitialization_ != null)
        {
            this._structureInitialization_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._structureInitialization_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._structureInitialization_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._structureInitialization_ == child)
        {
            this._structureInitialization_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._structureInitialization_ == oldChild)
        {
            setStructureInitialization((PStructureInitialization) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
