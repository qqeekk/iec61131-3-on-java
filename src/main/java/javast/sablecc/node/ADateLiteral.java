/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADateLiteral extends PDateLiteral
{
    private PYear _year_;
    private TDash _fst_;
    private PMonth _month_;
    private TDash _snd_;
    private PDay _day_;

    public ADateLiteral()
    {
        // Constructor
    }

    public ADateLiteral(
        @SuppressWarnings("hiding") PYear _year_,
        @SuppressWarnings("hiding") TDash _fst_,
        @SuppressWarnings("hiding") PMonth _month_,
        @SuppressWarnings("hiding") TDash _snd_,
        @SuppressWarnings("hiding") PDay _day_)
    {
        // Constructor
        setYear(_year_);

        setFst(_fst_);

        setMonth(_month_);

        setSnd(_snd_);

        setDay(_day_);

    }

    @Override
    public Object clone()
    {
        return new ADateLiteral(
            cloneNode(this._year_),
            cloneNode(this._fst_),
            cloneNode(this._month_),
            cloneNode(this._snd_),
            cloneNode(this._day_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADateLiteral(this);
    }

    public PYear getYear()
    {
        return this._year_;
    }

    public void setYear(PYear node)
    {
        if(this._year_ != null)
        {
            this._year_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._year_ = node;
    }

    public TDash getFst()
    {
        return this._fst_;
    }

    public void setFst(TDash node)
    {
        if(this._fst_ != null)
        {
            this._fst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fst_ = node;
    }

    public PMonth getMonth()
    {
        return this._month_;
    }

    public void setMonth(PMonth node)
    {
        if(this._month_ != null)
        {
            this._month_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._month_ = node;
    }

    public TDash getSnd()
    {
        return this._snd_;
    }

    public void setSnd(TDash node)
    {
        if(this._snd_ != null)
        {
            this._snd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._snd_ = node;
    }

    public PDay getDay()
    {
        return this._day_;
    }

    public void setDay(PDay node)
    {
        if(this._day_ != null)
        {
            this._day_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._day_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._year_)
            + toString(this._fst_)
            + toString(this._month_)
            + toString(this._snd_)
            + toString(this._day_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._year_ == child)
        {
            this._year_ = null;
            return;
        }

        if(this._fst_ == child)
        {
            this._fst_ = null;
            return;
        }

        if(this._month_ == child)
        {
            this._month_ = null;
            return;
        }

        if(this._snd_ == child)
        {
            this._snd_ = null;
            return;
        }

        if(this._day_ == child)
        {
            this._day_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._year_ == oldChild)
        {
            setYear((PYear) newChild);
            return;
        }

        if(this._fst_ == oldChild)
        {
            setFst((TDash) newChild);
            return;
        }

        if(this._month_ == oldChild)
        {
            setMonth((PMonth) newChild);
            return;
        }

        if(this._snd_ == oldChild)
        {
            setSnd((TDash) newChild);
            return;
        }

        if(this._day_ == oldChild)
        {
            setDay((PDay) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
