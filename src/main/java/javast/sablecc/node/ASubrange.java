/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ASubrange extends PSubrange
{
    private TSignedInteger _fst_;
    private TDotDot _dotDot_;
    private TSignedInteger _snd_;

    public ASubrange()
    {
        // Constructor
    }

    public ASubrange(
        @SuppressWarnings("hiding") TSignedInteger _fst_,
        @SuppressWarnings("hiding") TDotDot _dotDot_,
        @SuppressWarnings("hiding") TSignedInteger _snd_)
    {
        // Constructor
        setFst(_fst_);

        setDotDot(_dotDot_);

        setSnd(_snd_);

    }

    @Override
    public Object clone()
    {
        return new ASubrange(
            cloneNode(this._fst_),
            cloneNode(this._dotDot_),
            cloneNode(this._snd_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubrange(this);
    }

    public TSignedInteger getFst()
    {
        return this._fst_;
    }

    public void setFst(TSignedInteger node)
    {
        if(this._fst_ != null)
        {
            this._fst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fst_ = node;
    }

    public TDotDot getDotDot()
    {
        return this._dotDot_;
    }

    public void setDotDot(TDotDot node)
    {
        if(this._dotDot_ != null)
        {
            this._dotDot_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dotDot_ = node;
    }

    public TSignedInteger getSnd()
    {
        return this._snd_;
    }

    public void setSnd(TSignedInteger node)
    {
        if(this._snd_ != null)
        {
            this._snd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._snd_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fst_)
            + toString(this._dotDot_)
            + toString(this._snd_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fst_ == child)
        {
            this._fst_ = null;
            return;
        }

        if(this._dotDot_ == child)
        {
            this._dotDot_ = null;
            return;
        }

        if(this._snd_ == child)
        {
            this._snd_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fst_ == oldChild)
        {
            setFst((TSignedInteger) newChild);
            return;
        }

        if(this._dotDot_ == oldChild)
        {
            setDotDot((TDotDot) newChild);
            return;
        }

        if(this._snd_ == oldChild)
        {
            setSnd((TSignedInteger) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
