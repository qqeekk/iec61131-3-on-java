/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class ADoubleByteStringSpec extends PDoubleByteStringSpec
{
    private TWstringTypeName _wstringTypeName_;
    private PBrackInteger _brackInteger_;
    private PDoubleByteStringSpecInitialization _doubleByteStringSpecInitialization_;

    public ADoubleByteStringSpec()
    {
        // Constructor
    }

    public ADoubleByteStringSpec(
        @SuppressWarnings("hiding") TWstringTypeName _wstringTypeName_,
        @SuppressWarnings("hiding") PBrackInteger _brackInteger_,
        @SuppressWarnings("hiding") PDoubleByteStringSpecInitialization _doubleByteStringSpecInitialization_)
    {
        // Constructor
        setWstringTypeName(_wstringTypeName_);

        setBrackInteger(_brackInteger_);

        setDoubleByteStringSpecInitialization(_doubleByteStringSpecInitialization_);

    }

    @Override
    public Object clone()
    {
        return new ADoubleByteStringSpec(
            cloneNode(this._wstringTypeName_),
            cloneNode(this._brackInteger_),
            cloneNode(this._doubleByteStringSpecInitialization_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADoubleByteStringSpec(this);
    }

    public TWstringTypeName getWstringTypeName()
    {
        return this._wstringTypeName_;
    }

    public void setWstringTypeName(TWstringTypeName node)
    {
        if(this._wstringTypeName_ != null)
        {
            this._wstringTypeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._wstringTypeName_ = node;
    }

    public PBrackInteger getBrackInteger()
    {
        return this._brackInteger_;
    }

    public void setBrackInteger(PBrackInteger node)
    {
        if(this._brackInteger_ != null)
        {
            this._brackInteger_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._brackInteger_ = node;
    }

    public PDoubleByteStringSpecInitialization getDoubleByteStringSpecInitialization()
    {
        return this._doubleByteStringSpecInitialization_;
    }

    public void setDoubleByteStringSpecInitialization(PDoubleByteStringSpecInitialization node)
    {
        if(this._doubleByteStringSpecInitialization_ != null)
        {
            this._doubleByteStringSpecInitialization_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._doubleByteStringSpecInitialization_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._wstringTypeName_)
            + toString(this._brackInteger_)
            + toString(this._doubleByteStringSpecInitialization_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._wstringTypeName_ == child)
        {
            this._wstringTypeName_ = null;
            return;
        }

        if(this._brackInteger_ == child)
        {
            this._brackInteger_ = null;
            return;
        }

        if(this._doubleByteStringSpecInitialization_ == child)
        {
            this._doubleByteStringSpecInitialization_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._wstringTypeName_ == oldChild)
        {
            setWstringTypeName((TWstringTypeName) newChild);
            return;
        }

        if(this._brackInteger_ == oldChild)
        {
            setBrackInteger((PBrackInteger) newChild);
            return;
        }

        if(this._doubleByteStringSpecInitialization_ == oldChild)
        {
            setDoubleByteStringSpecInitialization((PDoubleByteStringSpecInitialization) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
