/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AIntegerLiteral extends PIntegerLiteral
{
    private PIntegerTypeNameHashed _integerTypeNameHashed_;
    private TSignedIntegerLiteral _signedIntegerLiteral_;

    public AIntegerLiteral()
    {
        // Constructor
    }

    public AIntegerLiteral(
        @SuppressWarnings("hiding") PIntegerTypeNameHashed _integerTypeNameHashed_,
        @SuppressWarnings("hiding") TSignedIntegerLiteral _signedIntegerLiteral_)
    {
        // Constructor
        setIntegerTypeNameHashed(_integerTypeNameHashed_);

        setSignedIntegerLiteral(_signedIntegerLiteral_);

    }

    @Override
    public Object clone()
    {
        return new AIntegerLiteral(
            cloneNode(this._integerTypeNameHashed_),
            cloneNode(this._signedIntegerLiteral_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIntegerLiteral(this);
    }

    public PIntegerTypeNameHashed getIntegerTypeNameHashed()
    {
        return this._integerTypeNameHashed_;
    }

    public void setIntegerTypeNameHashed(PIntegerTypeNameHashed node)
    {
        if(this._integerTypeNameHashed_ != null)
        {
            this._integerTypeNameHashed_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._integerTypeNameHashed_ = node;
    }

    public TSignedIntegerLiteral getSignedIntegerLiteral()
    {
        return this._signedIntegerLiteral_;
    }

    public void setSignedIntegerLiteral(TSignedIntegerLiteral node)
    {
        if(this._signedIntegerLiteral_ != null)
        {
            this._signedIntegerLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._signedIntegerLiteral_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._integerTypeNameHashed_)
            + toString(this._signedIntegerLiteral_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._integerTypeNameHashed_ == child)
        {
            this._integerTypeNameHashed_ = null;
            return;
        }

        if(this._signedIntegerLiteral_ == child)
        {
            this._signedIntegerLiteral_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._integerTypeNameHashed_ == oldChild)
        {
            setIntegerTypeNameHashed((PIntegerTypeNameHashed) newChild);
            return;
        }

        if(this._signedIntegerLiteral_ == oldChild)
        {
            setSignedIntegerLiteral((TSignedIntegerLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
