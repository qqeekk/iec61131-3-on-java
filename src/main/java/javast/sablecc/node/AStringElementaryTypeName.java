/* This file was generated by SableCC (http://www.sablecc.org/). */

package javast.sablecc.node;

import javast.sablecc.analysis.*;

@SuppressWarnings("nls")
public final class AStringElementaryTypeName extends PElementaryTypeName
{
    private TString1TypeName _string1TypeName_;

    public AStringElementaryTypeName()
    {
        // Constructor
    }

    public AStringElementaryTypeName(
        @SuppressWarnings("hiding") TString1TypeName _string1TypeName_)
    {
        // Constructor
        setString1TypeName(_string1TypeName_);

    }

    @Override
    public Object clone()
    {
        return new AStringElementaryTypeName(
            cloneNode(this._string1TypeName_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringElementaryTypeName(this);
    }

    public TString1TypeName getString1TypeName()
    {
        return this._string1TypeName_;
    }

    public void setString1TypeName(TString1TypeName node)
    {
        if(this._string1TypeName_ != null)
        {
            this._string1TypeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._string1TypeName_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._string1TypeName_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._string1TypeName_ == child)
        {
            this._string1TypeName_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._string1TypeName_ == oldChild)
        {
            setString1TypeName((TString1TypeName) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
